// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: poker_service.proto

package com.mrmq.poker.common.proto;

public final class PokerServiceProto {
  private PokerServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code JoinTableType}
   */
  public enum JoinTableType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PLAY = 1;</code>
     */
    PLAY(0, 1),
    /**
     * <code>VIEW = 2;</code>
     */
    VIEW(1, 2),
    /**
     * <code>STAND_UP = 3;</code>
     */
    STAND_UP(2, 3),
    /**
     * <code>LEAVE = 4;</code>
     */
    LEAVE(3, 4),
    ;

    /**
     * <code>PLAY = 1;</code>
     */
    public static final int PLAY_VALUE = 1;
    /**
     * <code>VIEW = 2;</code>
     */
    public static final int VIEW_VALUE = 2;
    /**
     * <code>STAND_UP = 3;</code>
     */
    public static final int STAND_UP_VALUE = 3;
    /**
     * <code>LEAVE = 4;</code>
     */
    public static final int LEAVE_VALUE = 4;


    public final int getNumber() { return value; }

    public static JoinTableType valueOf(int value) {
      switch (value) {
        case 1: return PLAY;
        case 2: return VIEW;
        case 3: return STAND_UP;
        case 4: return LEAVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<JoinTableType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<JoinTableType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JoinTableType>() {
            public JoinTableType findValueByNumber(int number) {
              return JoinTableType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final JoinTableType[] VALUES = values();

    public static JoinTableType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private JoinTableType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:JoinTableType)
  }

  public interface RoomRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string hallId = 1;
    /**
     * <code>required string hallId = 1;</code>
     */
    boolean hasHallId();
    /**
     * <code>required string hallId = 1;</code>
     */
    java.lang.String getHallId();
    /**
     * <code>required string hallId = 1;</code>
     */
    com.google.protobuf.ByteString
        getHallIdBytes();
  }
  /**
   * Protobuf type {@code RoomRequest}
   */
  public static final class RoomRequest extends
      com.google.protobuf.GeneratedMessage
      implements RoomRequestOrBuilder {
    // Use RoomRequest.newBuilder() to construct.
    private RoomRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomRequest defaultInstance;
    public static RoomRequest getDefaultInstance() {
      return defaultInstance;
    }

    public RoomRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hallId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomRequest> PARSER =
        new com.google.protobuf.AbstractParser<RoomRequest>() {
      public RoomRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string hallId = 1;
    public static final int HALLID_FIELD_NUMBER = 1;
    private java.lang.Object hallId_;
    /**
     * <code>required string hallId = 1;</code>
     */
    public boolean hasHallId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string hallId = 1;</code>
     */
    public java.lang.String getHallId() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hallId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hallId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHallIdBytes() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hallId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      hallId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHallId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHallIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHallIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RoomRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.RoomRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hallId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomRequest_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest build() {
        com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest result = new com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hallId_ = hallId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest.getDefaultInstance()) return this;
        if (other.hasHallId()) {
          bitField0_ |= 0x00000001;
          hallId_ = other.hallId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHallId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.RoomRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string hallId = 1;
      private java.lang.Object hallId_ = "";
      /**
       * <code>required string hallId = 1;</code>
       */
      public boolean hasHallId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public java.lang.String getHallId() {
        java.lang.Object ref = hallId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hallId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHallIdBytes() {
        java.lang.Object ref = hallId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hallId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder setHallId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hallId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder clearHallId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hallId_ = getDefaultInstance().getHallId();
        onChanged();
        return this;
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder setHallIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hallId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RoomRequest)
    }

    static {
      defaultInstance = new RoomRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RoomRequest)
  }

  public interface RoomResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string hallId = 1;
    /**
     * <code>required string hallId = 1;</code>
     */
    boolean hasHallId();
    /**
     * <code>required string hallId = 1;</code>
     */
    java.lang.String getHallId();
    /**
     * <code>required string hallId = 1;</code>
     */
    com.google.protobuf.ByteString
        getHallIdBytes();

    // repeated .Room rooms = 2;
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> 
        getRoomsList();
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Room getRooms(int index);
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    int getRoomsCount();
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
        getRoomsOrBuilderList();
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder getRoomsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code RoomResponse}
   */
  public static final class RoomResponse extends
      com.google.protobuf.GeneratedMessage
      implements RoomResponseOrBuilder {
    // Use RoomResponse.newBuilder() to construct.
    private RoomResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomResponse defaultInstance;
    public static RoomResponse getDefaultInstance() {
      return defaultInstance;
    }

    public RoomResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hallId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rooms_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Room>();
                mutable_bitField0_ |= 0x00000002;
              }
              rooms_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Room.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rooms_ = java.util.Collections.unmodifiableList(rooms_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomResponse> PARSER =
        new com.google.protobuf.AbstractParser<RoomResponse>() {
      public RoomResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string hallId = 1;
    public static final int HALLID_FIELD_NUMBER = 1;
    private java.lang.Object hallId_;
    /**
     * <code>required string hallId = 1;</code>
     */
    public boolean hasHallId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string hallId = 1;</code>
     */
    public java.lang.String getHallId() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hallId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hallId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHallIdBytes() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hallId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Room rooms = 2;
    public static final int ROOMS_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> rooms_;
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> getRoomsList() {
      return rooms_;
    }
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
        getRoomsOrBuilderList() {
      return rooms_;
    }
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    public int getRoomsCount() {
      return rooms_.size();
    }
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Room getRooms(int index) {
      return rooms_.get(index);
    }
    /**
     * <code>repeated .Room rooms = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder getRoomsOrBuilder(
        int index) {
      return rooms_.get(index);
    }

    private void initFields() {
      hallId_ = "";
      rooms_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHallId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRoomsCount(); i++) {
        if (!getRooms(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHallIdBytes());
      }
      for (int i = 0; i < rooms_.size(); i++) {
        output.writeMessage(2, rooms_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHallIdBytes());
      }
      for (int i = 0; i < rooms_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rooms_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RoomResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.RoomResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hallId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (roomsBuilder_ == null) {
          rooms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          roomsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_RoomResponse_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse build() {
        com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse result = new com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hallId_ = hallId_;
        if (roomsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            rooms_ = java.util.Collections.unmodifiableList(rooms_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rooms_ = rooms_;
        } else {
          result.rooms_ = roomsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse.getDefaultInstance()) return this;
        if (other.hasHallId()) {
          bitField0_ |= 0x00000001;
          hallId_ = other.hallId_;
          onChanged();
        }
        if (roomsBuilder_ == null) {
          if (!other.rooms_.isEmpty()) {
            if (rooms_.isEmpty()) {
              rooms_ = other.rooms_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRoomsIsMutable();
              rooms_.addAll(other.rooms_);
            }
            onChanged();
          }
        } else {
          if (!other.rooms_.isEmpty()) {
            if (roomsBuilder_.isEmpty()) {
              roomsBuilder_.dispose();
              roomsBuilder_ = null;
              rooms_ = other.rooms_;
              bitField0_ = (bitField0_ & ~0x00000002);
              roomsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomsFieldBuilder() : null;
            } else {
              roomsBuilder_.addAllMessages(other.rooms_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHallId()) {
          
          return false;
        }
        for (int i = 0; i < getRoomsCount(); i++) {
          if (!getRooms(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.RoomResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string hallId = 1;
      private java.lang.Object hallId_ = "";
      /**
       * <code>required string hallId = 1;</code>
       */
      public boolean hasHallId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public java.lang.String getHallId() {
        java.lang.Object ref = hallId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hallId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHallIdBytes() {
        java.lang.Object ref = hallId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hallId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder setHallId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hallId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder clearHallId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hallId_ = getDefaultInstance().getHallId();
        onChanged();
        return this;
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder setHallIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hallId_ = value;
        onChanged();
        return this;
      }

      // repeated .Room rooms = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> rooms_ =
        java.util.Collections.emptyList();
      private void ensureRoomsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rooms_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Room>(rooms_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Room, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder, com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> roomsBuilder_;

      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> getRoomsList() {
        if (roomsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rooms_);
        } else {
          return roomsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public int getRoomsCount() {
        if (roomsBuilder_ == null) {
          return rooms_.size();
        } else {
          return roomsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room getRooms(int index) {
        if (roomsBuilder_ == null) {
          return rooms_.get(index);
        } else {
          return roomsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder setRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room value) {
        if (roomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomsIsMutable();
          rooms_.set(index, value);
          onChanged();
        } else {
          roomsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder setRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder builderForValue) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder addRooms(com.mrmq.poker.common.proto.PokerModelProto.Room value) {
        if (roomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomsIsMutable();
          rooms_.add(value);
          onChanged();
        } else {
          roomsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder addRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room value) {
        if (roomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomsIsMutable();
          rooms_.add(index, value);
          onChanged();
        } else {
          roomsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder addRooms(
          com.mrmq.poker.common.proto.PokerModelProto.Room.Builder builderForValue) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.add(builderForValue.build());
          onChanged();
        } else {
          roomsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder addRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder builderForValue) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder addAllRooms(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Room> values) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          super.addAll(values, rooms_);
          onChanged();
        } else {
          roomsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder clearRooms() {
        if (roomsBuilder_ == null) {
          rooms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          roomsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public Builder removeRooms(int index) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.remove(index);
          onChanged();
        } else {
          roomsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.Builder getRoomsBuilder(
          int index) {
        return getRoomsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder getRoomsOrBuilder(
          int index) {
        if (roomsBuilder_ == null) {
          return rooms_.get(index);  } else {
          return roomsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
           getRoomsOrBuilderList() {
        if (roomsBuilder_ != null) {
          return roomsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rooms_);
        }
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.Builder addRoomsBuilder() {
        return getRoomsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Room.getDefaultInstance());
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.Builder addRoomsBuilder(
          int index) {
        return getRoomsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Room.getDefaultInstance());
      }
      /**
       * <code>repeated .Room rooms = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room.Builder> 
           getRoomsBuilderList() {
        return getRoomsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Room, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder, com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
          getRoomsFieldBuilder() {
        if (roomsBuilder_ == null) {
          roomsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Room, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder, com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder>(
                  rooms_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          rooms_ = null;
        }
        return roomsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:RoomResponse)
    }

    static {
      defaultInstance = new RoomResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RoomResponse)
  }

  public interface TableRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string roomId = 1;
    /**
     * <code>required string roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();
  }
  /**
   * Protobuf type {@code TableRequest}
   */
  public static final class TableRequest extends
      com.google.protobuf.GeneratedMessage
      implements TableRequestOrBuilder {
    // Use TableRequest.newBuilder() to construct.
    private TableRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableRequest defaultInstance;
    public static TableRequest getDefaultInstance() {
      return defaultInstance;
    }

    public TableRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<TableRequest> PARSER =
        new com.google.protobuf.AbstractParser<TableRequest>() {
      public TableRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private java.lang.Object roomId_;
    /**
     * <code>required string roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roomId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoomIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoomIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.TableRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TableRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.TableRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableRequest_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.TableRequest getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.TableRequest build() {
        com.mrmq.poker.common.proto.PokerServiceProto.TableRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.TableRequest buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.TableRequest result = new com.mrmq.poker.common.proto.PokerServiceProto.TableRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.TableRequest) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.TableRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.TableRequest other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.TableRequest.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          bitField0_ |= 0x00000001;
          roomId_ = other.roomId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.TableRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.TableRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string roomId = 1;
      private java.lang.Object roomId_ = "";
      /**
       * <code>required string roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TableRequest)
    }

    static {
      defaultInstance = new TableRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TableRequest)
  }

  public interface TableResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string roomId = 1;
    /**
     * <code>required string roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();

    // repeated .Table tables = 2;
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> 
        getTablesList();
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Table getTables(int index);
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    int getTablesCount();
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder getTablesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TableResponse}
   */
  public static final class TableResponse extends
      com.google.protobuf.GeneratedMessage
      implements TableResponseOrBuilder {
    // Use TableResponse.newBuilder() to construct.
    private TableResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableResponse defaultInstance;
    public static TableResponse getDefaultInstance() {
      return defaultInstance;
    }

    public TableResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tables_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Table>();
                mutable_bitField0_ |= 0x00000002;
              }
              tables_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Table.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<TableResponse> PARSER =
        new com.google.protobuf.AbstractParser<TableResponse>() {
      public TableResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private java.lang.Object roomId_;
    /**
     * <code>required string roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Table tables = 2;
    public static final int TABLES_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> tables_;
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> getTablesList() {
      return tables_;
    }
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Table getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <code>repeated .Table tables = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    private void initFields() {
      roomId_ = "";
      tables_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTablesCount(); i++) {
        if (!getTables(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoomIdBytes());
      }
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(2, tables_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoomIdBytes());
      }
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tables_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.TableResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TableResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.TableResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_TableResponse_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.TableResponse getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.TableResponse build() {
        com.mrmq.poker.common.proto.PokerServiceProto.TableResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.TableResponse buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.TableResponse result = new com.mrmq.poker.common.proto.PokerServiceProto.TableResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.TableResponse) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.TableResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.TableResponse other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.TableResponse.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          bitField0_ |= 0x00000001;
          roomId_ = other.roomId_;
          onChanged();
        }
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        for (int i = 0; i < getTablesCount(); i++) {
          if (!getTables(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.TableResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.TableResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string roomId = 1;
      private java.lang.Object roomId_ = "";
      /**
       * <code>required string roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }

      // repeated .Table tables = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tables_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Table>(tables_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Table, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> tablesBuilder_;

      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder setTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder setTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder addTables(com.mrmq.poker.common.proto.PokerModelProto.Table value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder addTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder addTables(
          com.mrmq.poker.common.proto.PokerModelProto.Table.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder addTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Table> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          super.addAll(values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Table.getDefaultInstance());
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Table.getDefaultInstance());
      }
      /**
       * <code>repeated .Table tables = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Table, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Table, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TableResponse)
    }

    static {
      defaultInstance = new TableResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TableResponse)
  }

  public interface JoinTableRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string tableId = 1;
    /**
     * <code>required string tableId = 1;</code>
     */
    boolean hasTableId();
    /**
     * <code>required string tableId = 1;</code>
     */
    java.lang.String getTableId();
    /**
     * <code>required string tableId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTableIdBytes();

    // required .JoinTableType joinType = 2;
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    boolean hasJoinType();
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType getJoinType();

    // required int32 selectedPosition = 3;
    /**
     * <code>required int32 selectedPosition = 3;</code>
     */
    boolean hasSelectedPosition();
    /**
     * <code>required int32 selectedPosition = 3;</code>
     */
    int getSelectedPosition();
  }
  /**
   * Protobuf type {@code JoinTableRequest}
   *
   * <pre>
   *Join/Reconnect to game
   * </pre>
   */
  public static final class JoinTableRequest extends
      com.google.protobuf.GeneratedMessage
      implements JoinTableRequestOrBuilder {
    // Use JoinTableRequest.newBuilder() to construct.
    private JoinTableRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JoinTableRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JoinTableRequest defaultInstance;
    public static JoinTableRequest getDefaultInstance() {
      return defaultInstance;
    }

    public JoinTableRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JoinTableRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tableId_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType value = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                joinType_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              selectedPosition_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<JoinTableRequest> PARSER =
        new com.google.protobuf.AbstractParser<JoinTableRequest>() {
      public JoinTableRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinTableRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JoinTableRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string tableId = 1;
    public static final int TABLEID_FIELD_NUMBER = 1;
    private java.lang.Object tableId_;
    /**
     * <code>required string tableId = 1;</code>
     */
    public boolean hasTableId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string tableId = 1;</code>
     */
    public java.lang.String getTableId() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string tableId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableIdBytes() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .JoinTableType joinType = 2;
    public static final int JOINTYPE_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType joinType_;
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    public boolean hasJoinType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType getJoinType() {
      return joinType_;
    }

    // required int32 selectedPosition = 3;
    public static final int SELECTEDPOSITION_FIELD_NUMBER = 3;
    private int selectedPosition_;
    /**
     * <code>required int32 selectedPosition = 3;</code>
     */
    public boolean hasSelectedPosition() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 selectedPosition = 3;</code>
     */
    public int getSelectedPosition() {
      return selectedPosition_;
    }

    private void initFields() {
      tableId_ = "";
      joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
      selectedPosition_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTableId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasJoinType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSelectedPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, joinType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, selectedPosition_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, joinType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, selectedPosition_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code JoinTableRequest}
     *
     * <pre>
     *Join/Reconnect to game
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tableId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
        bitField0_ = (bitField0_ & ~0x00000002);
        selectedPosition_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableRequest_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest build() {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest result = new com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableId_ = tableId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.joinType_ = joinType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.selectedPosition_ = selectedPosition_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest.getDefaultInstance()) return this;
        if (other.hasTableId()) {
          bitField0_ |= 0x00000001;
          tableId_ = other.tableId_;
          onChanged();
        }
        if (other.hasJoinType()) {
          setJoinType(other.getJoinType());
        }
        if (other.hasSelectedPosition()) {
          setSelectedPosition(other.getSelectedPosition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTableId()) {
          
          return false;
        }
        if (!hasJoinType()) {
          
          return false;
        }
        if (!hasSelectedPosition()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.JoinTableRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string tableId = 1;
      private java.lang.Object tableId_ = "";
      /**
       * <code>required string tableId = 1;</code>
       */
      public boolean hasTableId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public java.lang.String getTableId() {
        java.lang.Object ref = tableId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tableId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTableIdBytes() {
        java.lang.Object ref = tableId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public Builder setTableId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public Builder clearTableId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tableId_ = getDefaultInstance().getTableId();
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public Builder setTableIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }

      // required .JoinTableType joinType = 2;
      private com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public boolean hasJoinType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType getJoinType() {
        return joinType_;
      }
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public Builder setJoinType(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        joinType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public Builder clearJoinType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
        onChanged();
        return this;
      }

      // required int32 selectedPosition = 3;
      private int selectedPosition_ ;
      /**
       * <code>required int32 selectedPosition = 3;</code>
       */
      public boolean hasSelectedPosition() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 selectedPosition = 3;</code>
       */
      public int getSelectedPosition() {
        return selectedPosition_;
      }
      /**
       * <code>required int32 selectedPosition = 3;</code>
       */
      public Builder setSelectedPosition(int value) {
        bitField0_ |= 0x00000004;
        selectedPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 selectedPosition = 3;</code>
       */
      public Builder clearSelectedPosition() {
        bitField0_ = (bitField0_ & ~0x00000004);
        selectedPosition_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:JoinTableRequest)
    }

    static {
      defaultInstance = new JoinTableRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:JoinTableRequest)
  }

  public interface JoinTableResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoundType roundType = 1;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    boolean hasRoundType();
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // optional .TableRule tableRule = 2;
    /**
     * <code>optional .TableRule tableRule = 2;</code>
     */
    boolean hasTableRule();
    /**
     * <code>optional .TableRule tableRule = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.TableRule getTableRule();
    /**
     * <code>optional .TableRule tableRule = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder getTableRuleOrBuilder();

    // repeated .Player players = 4;
    /**
     * <code>repeated .Player players = 4;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> 
        getPlayersList();
    /**
     * <code>repeated .Player players = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index);
    /**
     * <code>repeated .Player players = 4;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .Player players = 4;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .Player players = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    // optional int64 curbet = 5;
    /**
     * <code>optional int64 curbet = 5;</code>
     */
    boolean hasCurbet();
    /**
     * <code>optional int64 curbet = 5;</code>
     */
    long getCurbet();

    // optional string curPlayerId = 6;
    /**
     * <code>optional string curPlayerId = 6;</code>
     */
    boolean hasCurPlayerId();
    /**
     * <code>optional string curPlayerId = 6;</code>
     */
    java.lang.String getCurPlayerId();
    /**
     * <code>optional string curPlayerId = 6;</code>
     */
    com.google.protobuf.ByteString
        getCurPlayerIdBytes();

    // repeated .Card centerCards = 7;
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getCenterCardsList();
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getCenterCards(int index);
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    int getCenterCardsCount();
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getCenterCardsOrBuilderList();
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCenterCardsOrBuilder(
        int index);

    // optional string dealerId = 8;
    /**
     * <code>optional string dealerId = 8;</code>
     */
    boolean hasDealerId();
    /**
     * <code>optional string dealerId = 8;</code>
     */
    java.lang.String getDealerId();
    /**
     * <code>optional string dealerId = 8;</code>
     */
    com.google.protobuf.ByteString
        getDealerIdBytes();

    // optional int32 remainTime = 9;
    /**
     * <code>optional int32 remainTime = 9;</code>
     */
    boolean hasRemainTime();
    /**
     * <code>optional int32 remainTime = 9;</code>
     */
    int getRemainTime();

    // repeated .Card historyCards = 11;
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getHistoryCardsList();
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getHistoryCards(int index);
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    int getHistoryCardsCount();
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getHistoryCardsOrBuilderList();
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getHistoryCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code JoinTableResponse}
   *
   * <pre>
   *Join/Reconnect to game
   * </pre>
   */
  public static final class JoinTableResponse extends
      com.google.protobuf.GeneratedMessage
      implements JoinTableResponseOrBuilder {
    // Use JoinTableResponse.newBuilder() to construct.
    private JoinTableResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JoinTableResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JoinTableResponse defaultInstance;
    public static JoinTableResponse getDefaultInstance() {
      return defaultInstance;
    }

    public JoinTableResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JoinTableResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 18: {
              com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tableRule_.toBuilder();
              }
              tableRule_ = input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.TableRule.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tableRule_);
                tableRule_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              curbet_ = input.readInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              curPlayerId_ = input.readBytes();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                centerCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000020;
              }
              centerCards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              bitField0_ |= 0x00000010;
              dealerId_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              remainTime_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                historyCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000100;
              }
              historyCards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          centerCards_ = java.util.Collections.unmodifiableList(centerCards_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          historyCards_ = java.util.Collections.unmodifiableList(historyCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<JoinTableResponse> PARSER =
        new com.google.protobuf.AbstractParser<JoinTableResponse>() {
      public JoinTableResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinTableResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JoinTableResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // optional .TableRule tableRule = 2;
    public static final int TABLERULE_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerModelProto.TableRule tableRule_;
    /**
     * <code>optional .TableRule tableRule = 2;</code>
     */
    public boolean hasTableRule() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .TableRule tableRule = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.TableRule getTableRule() {
      return tableRule_;
    }
    /**
     * <code>optional .TableRule tableRule = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder getTableRuleOrBuilder() {
      return tableRule_;
    }

    // repeated .Player players = 4;
    public static final int PLAYERS_FIELD_NUMBER = 4;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_;
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int64 curbet = 5;
    public static final int CURBET_FIELD_NUMBER = 5;
    private long curbet_;
    /**
     * <code>optional int64 curbet = 5;</code>
     */
    public boolean hasCurbet() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 curbet = 5;</code>
     */
    public long getCurbet() {
      return curbet_;
    }

    // optional string curPlayerId = 6;
    public static final int CURPLAYERID_FIELD_NUMBER = 6;
    private java.lang.Object curPlayerId_;
    /**
     * <code>optional string curPlayerId = 6;</code>
     */
    public boolean hasCurPlayerId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string curPlayerId = 6;</code>
     */
    public java.lang.String getCurPlayerId() {
      java.lang.Object ref = curPlayerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curPlayerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string curPlayerId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCurPlayerIdBytes() {
      java.lang.Object ref = curPlayerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curPlayerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Card centerCards = 7;
    public static final int CENTERCARDS_FIELD_NUMBER = 7;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> centerCards_;
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getCenterCardsList() {
      return centerCards_;
    }
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getCenterCardsOrBuilderList() {
      return centerCards_;
    }
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    public int getCenterCardsCount() {
      return centerCards_.size();
    }
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getCenterCards(int index) {
      return centerCards_.get(index);
    }
    /**
     * <code>repeated .Card centerCards = 7;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCenterCardsOrBuilder(
        int index) {
      return centerCards_.get(index);
    }

    // optional string dealerId = 8;
    public static final int DEALERID_FIELD_NUMBER = 8;
    private java.lang.Object dealerId_;
    /**
     * <code>optional string dealerId = 8;</code>
     */
    public boolean hasDealerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string dealerId = 8;</code>
     */
    public java.lang.String getDealerId() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dealerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dealerId = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDealerIdBytes() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dealerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 remainTime = 9;
    public static final int REMAINTIME_FIELD_NUMBER = 9;
    private int remainTime_;
    /**
     * <code>optional int32 remainTime = 9;</code>
     */
    public boolean hasRemainTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 remainTime = 9;</code>
     */
    public int getRemainTime() {
      return remainTime_;
    }

    // repeated .Card historyCards = 11;
    public static final int HISTORYCARDS_FIELD_NUMBER = 11;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> historyCards_;
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getHistoryCardsList() {
      return historyCards_;
    }
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getHistoryCardsOrBuilderList() {
      return historyCards_;
    }
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    public int getHistoryCardsCount() {
      return historyCards_.size();
    }
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getHistoryCards(int index) {
      return historyCards_.get(index);
    }
    /**
     * <code>repeated .Card historyCards = 11;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getHistoryCardsOrBuilder(
        int index) {
      return historyCards_.get(index);
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      curbet_ = 0L;
      curPlayerId_ = "";
      centerCards_ = java.util.Collections.emptyList();
      dealerId_ = "";
      remainTime_ = 0;
      historyCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasTableRule()) {
        if (!getTableRule().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPlayersCount(); i++) {
        if (!getPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCenterCardsCount(); i++) {
        if (!getCenterCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHistoryCardsCount(); i++) {
        if (!getHistoryCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, tableRule_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(4, players_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, curbet_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getCurPlayerIdBytes());
      }
      for (int i = 0; i < centerCards_.size(); i++) {
        output.writeMessage(7, centerCards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(8, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(9, remainTime_);
      }
      for (int i = 0; i < historyCards_.size(); i++) {
        output.writeMessage(11, historyCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tableRule_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, players_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, curbet_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCurPlayerIdBytes());
      }
      for (int i = 0; i < centerCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, centerCards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, remainTime_);
      }
      for (int i = 0; i < historyCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, historyCards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code JoinTableResponse}
     *
     * <pre>
     *Join/Reconnect to game
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableRuleFieldBuilder();
          getPlayersFieldBuilder();
          getCenterCardsFieldBuilder();
          getHistoryCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tableRuleBuilder_ == null) {
          tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
        } else {
          tableRuleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        curbet_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        curPlayerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        if (centerCardsBuilder_ == null) {
          centerCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          centerCardsBuilder_.clear();
        }
        dealerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        remainTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (historyCardsBuilder_ == null) {
          historyCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          historyCardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableResponse_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse build() {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse result = new com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tableRuleBuilder_ == null) {
          result.tableRule_ = tableRule_;
        } else {
          result.tableRule_ = tableRuleBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.curbet_ = curbet_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.curPlayerId_ = curPlayerId_;
        if (centerCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            centerCards_ = java.util.Collections.unmodifiableList(centerCards_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.centerCards_ = centerCards_;
        } else {
          result.centerCards_ = centerCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dealerId_ = dealerId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.remainTime_ = remainTime_;
        if (historyCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            historyCards_ = java.util.Collections.unmodifiableList(historyCards_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.historyCards_ = historyCards_;
        } else {
          result.historyCards_ = historyCardsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (other.hasTableRule()) {
          mergeTableRule(other.getTableRule());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasCurbet()) {
          setCurbet(other.getCurbet());
        }
        if (other.hasCurPlayerId()) {
          bitField0_ |= 0x00000010;
          curPlayerId_ = other.curPlayerId_;
          onChanged();
        }
        if (centerCardsBuilder_ == null) {
          if (!other.centerCards_.isEmpty()) {
            if (centerCards_.isEmpty()) {
              centerCards_ = other.centerCards_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCenterCardsIsMutable();
              centerCards_.addAll(other.centerCards_);
            }
            onChanged();
          }
        } else {
          if (!other.centerCards_.isEmpty()) {
            if (centerCardsBuilder_.isEmpty()) {
              centerCardsBuilder_.dispose();
              centerCardsBuilder_ = null;
              centerCards_ = other.centerCards_;
              bitField0_ = (bitField0_ & ~0x00000020);
              centerCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCenterCardsFieldBuilder() : null;
            } else {
              centerCardsBuilder_.addAllMessages(other.centerCards_);
            }
          }
        }
        if (other.hasDealerId()) {
          bitField0_ |= 0x00000040;
          dealerId_ = other.dealerId_;
          onChanged();
        }
        if (other.hasRemainTime()) {
          setRemainTime(other.getRemainTime());
        }
        if (historyCardsBuilder_ == null) {
          if (!other.historyCards_.isEmpty()) {
            if (historyCards_.isEmpty()) {
              historyCards_ = other.historyCards_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureHistoryCardsIsMutable();
              historyCards_.addAll(other.historyCards_);
            }
            onChanged();
          }
        } else {
          if (!other.historyCards_.isEmpty()) {
            if (historyCardsBuilder_.isEmpty()) {
              historyCardsBuilder_.dispose();
              historyCardsBuilder_ = null;
              historyCards_ = other.historyCards_;
              bitField0_ = (bitField0_ & ~0x00000100);
              historyCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHistoryCardsFieldBuilder() : null;
            } else {
              historyCardsBuilder_.addAllMessages(other.historyCards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTableRule()) {
          if (!getTableRule().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPlayersCount(); i++) {
          if (!getPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCenterCardsCount(); i++) {
          if (!getCenterCards(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHistoryCardsCount(); i++) {
          if (!getHistoryCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.JoinTableResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // optional .TableRule tableRule = 2;
      private com.mrmq.poker.common.proto.PokerModelProto.TableRule tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.TableRule, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder> tableRuleBuilder_;
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public boolean hasTableRule() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableRule getTableRule() {
        if (tableRuleBuilder_ == null) {
          return tableRule_;
        } else {
          return tableRuleBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public Builder setTableRule(com.mrmq.poker.common.proto.PokerModelProto.TableRule value) {
        if (tableRuleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableRule_ = value;
          onChanged();
        } else {
          tableRuleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public Builder setTableRule(
          com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder builderForValue) {
        if (tableRuleBuilder_ == null) {
          tableRule_ = builderForValue.build();
          onChanged();
        } else {
          tableRuleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public Builder mergeTableRule(com.mrmq.poker.common.proto.PokerModelProto.TableRule value) {
        if (tableRuleBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tableRule_ != com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance()) {
            tableRule_ =
              com.mrmq.poker.common.proto.PokerModelProto.TableRule.newBuilder(tableRule_).mergeFrom(value).buildPartial();
          } else {
            tableRule_ = value;
          }
          onChanged();
        } else {
          tableRuleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public Builder clearTableRule() {
        if (tableRuleBuilder_ == null) {
          tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
          onChanged();
        } else {
          tableRuleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder getTableRuleBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTableRuleFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder getTableRuleOrBuilder() {
        if (tableRuleBuilder_ != null) {
          return tableRuleBuilder_.getMessageOrBuilder();
        } else {
          return tableRule_;
        }
      }
      /**
       * <code>optional .TableRule tableRule = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.TableRule, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder> 
          getTableRuleFieldBuilder() {
        if (tableRuleBuilder_ == null) {
          tableRuleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.TableRule, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder>(
                  tableRule_,
                  getParentForChildren(),
                  isClean());
          tableRule_ = null;
        }
        return tableRuleBuilder_;
      }

      // repeated .Player players = 4;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .Player players = 4;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int64 curbet = 5;
      private long curbet_ ;
      /**
       * <code>optional int64 curbet = 5;</code>
       */
      public boolean hasCurbet() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 curbet = 5;</code>
       */
      public long getCurbet() {
        return curbet_;
      }
      /**
       * <code>optional int64 curbet = 5;</code>
       */
      public Builder setCurbet(long value) {
        bitField0_ |= 0x00000008;
        curbet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 curbet = 5;</code>
       */
      public Builder clearCurbet() {
        bitField0_ = (bitField0_ & ~0x00000008);
        curbet_ = 0L;
        onChanged();
        return this;
      }

      // optional string curPlayerId = 6;
      private java.lang.Object curPlayerId_ = "";
      /**
       * <code>optional string curPlayerId = 6;</code>
       */
      public boolean hasCurPlayerId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string curPlayerId = 6;</code>
       */
      public java.lang.String getCurPlayerId() {
        java.lang.Object ref = curPlayerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          curPlayerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string curPlayerId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCurPlayerIdBytes() {
        java.lang.Object ref = curPlayerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curPlayerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string curPlayerId = 6;</code>
       */
      public Builder setCurPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        curPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string curPlayerId = 6;</code>
       */
      public Builder clearCurPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        curPlayerId_ = getDefaultInstance().getCurPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string curPlayerId = 6;</code>
       */
      public Builder setCurPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        curPlayerId_ = value;
        onChanged();
        return this;
      }

      // repeated .Card centerCards = 7;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> centerCards_ =
        java.util.Collections.emptyList();
      private void ensureCenterCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          centerCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(centerCards_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> centerCardsBuilder_;

      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getCenterCardsList() {
        if (centerCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(centerCards_);
        } else {
          return centerCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public int getCenterCardsCount() {
        if (centerCardsBuilder_ == null) {
          return centerCards_.size();
        } else {
          return centerCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getCenterCards(int index) {
        if (centerCardsBuilder_ == null) {
          return centerCards_.get(index);
        } else {
          return centerCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder setCenterCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (centerCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterCardsIsMutable();
          centerCards_.set(index, value);
          onChanged();
        } else {
          centerCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder setCenterCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (centerCardsBuilder_ == null) {
          ensureCenterCardsIsMutable();
          centerCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          centerCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder addCenterCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (centerCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterCardsIsMutable();
          centerCards_.add(value);
          onChanged();
        } else {
          centerCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder addCenterCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (centerCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterCardsIsMutable();
          centerCards_.add(index, value);
          onChanged();
        } else {
          centerCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder addCenterCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (centerCardsBuilder_ == null) {
          ensureCenterCardsIsMutable();
          centerCards_.add(builderForValue.build());
          onChanged();
        } else {
          centerCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder addCenterCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (centerCardsBuilder_ == null) {
          ensureCenterCardsIsMutable();
          centerCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          centerCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder addAllCenterCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (centerCardsBuilder_ == null) {
          ensureCenterCardsIsMutable();
          super.addAll(values, centerCards_);
          onChanged();
        } else {
          centerCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder clearCenterCards() {
        if (centerCardsBuilder_ == null) {
          centerCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          centerCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public Builder removeCenterCards(int index) {
        if (centerCardsBuilder_ == null) {
          ensureCenterCardsIsMutable();
          centerCards_.remove(index);
          onChanged();
        } else {
          centerCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getCenterCardsBuilder(
          int index) {
        return getCenterCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCenterCardsOrBuilder(
          int index) {
        if (centerCardsBuilder_ == null) {
          return centerCards_.get(index);  } else {
          return centerCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getCenterCardsOrBuilderList() {
        if (centerCardsBuilder_ != null) {
          return centerCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(centerCards_);
        }
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addCenterCardsBuilder() {
        return getCenterCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addCenterCardsBuilder(
          int index) {
        return getCenterCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card centerCards = 7;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getCenterCardsBuilderList() {
        return getCenterCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getCenterCardsFieldBuilder() {
        if (centerCardsBuilder_ == null) {
          centerCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  centerCards_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          centerCards_ = null;
        }
        return centerCardsBuilder_;
      }

      // optional string dealerId = 8;
      private java.lang.Object dealerId_ = "";
      /**
       * <code>optional string dealerId = 8;</code>
       */
      public boolean hasDealerId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string dealerId = 8;</code>
       */
      public java.lang.String getDealerId() {
        java.lang.Object ref = dealerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dealerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dealerId = 8;</code>
       */
      public com.google.protobuf.ByteString
          getDealerIdBytes() {
        java.lang.Object ref = dealerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dealerId = 8;</code>
       */
      public Builder setDealerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        dealerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dealerId = 8;</code>
       */
      public Builder clearDealerId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dealerId_ = getDefaultInstance().getDealerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dealerId = 8;</code>
       */
      public Builder setDealerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        dealerId_ = value;
        onChanged();
        return this;
      }

      // optional int32 remainTime = 9;
      private int remainTime_ ;
      /**
       * <code>optional int32 remainTime = 9;</code>
       */
      public boolean hasRemainTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 remainTime = 9;</code>
       */
      public int getRemainTime() {
        return remainTime_;
      }
      /**
       * <code>optional int32 remainTime = 9;</code>
       */
      public Builder setRemainTime(int value) {
        bitField0_ |= 0x00000080;
        remainTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remainTime = 9;</code>
       */
      public Builder clearRemainTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        remainTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .Card historyCards = 11;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> historyCards_ =
        java.util.Collections.emptyList();
      private void ensureHistoryCardsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          historyCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(historyCards_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> historyCardsBuilder_;

      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getHistoryCardsList() {
        if (historyCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(historyCards_);
        } else {
          return historyCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public int getHistoryCardsCount() {
        if (historyCardsBuilder_ == null) {
          return historyCards_.size();
        } else {
          return historyCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getHistoryCards(int index) {
        if (historyCardsBuilder_ == null) {
          return historyCards_.get(index);
        } else {
          return historyCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder setHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (historyCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryCardsIsMutable();
          historyCards_.set(index, value);
          onChanged();
        } else {
          historyCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder setHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          historyCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder addHistoryCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (historyCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryCardsIsMutable();
          historyCards_.add(value);
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder addHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (historyCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryCardsIsMutable();
          historyCards_.add(index, value);
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder addHistoryCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.add(builderForValue.build());
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder addHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder addAllHistoryCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          super.addAll(values, historyCards_);
          onChanged();
        } else {
          historyCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder clearHistoryCards() {
        if (historyCardsBuilder_ == null) {
          historyCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          historyCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public Builder removeHistoryCards(int index) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.remove(index);
          onChanged();
        } else {
          historyCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getHistoryCardsBuilder(
          int index) {
        return getHistoryCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getHistoryCardsOrBuilder(
          int index) {
        if (historyCardsBuilder_ == null) {
          return historyCards_.get(index);  } else {
          return historyCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getHistoryCardsOrBuilderList() {
        if (historyCardsBuilder_ != null) {
          return historyCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(historyCards_);
        }
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addHistoryCardsBuilder() {
        return getHistoryCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addHistoryCardsBuilder(
          int index) {
        return getHistoryCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card historyCards = 11;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getHistoryCardsBuilderList() {
        return getHistoryCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getHistoryCardsFieldBuilder() {
        if (historyCardsBuilder_ == null) {
          historyCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  historyCards_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          historyCards_ = null;
        }
        return historyCardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:JoinTableResponse)
    }

    static {
      defaultInstance = new JoinTableResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:JoinTableResponse)
  }

  public interface JoinTableEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .JoinTableType joinType = 2;
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    boolean hasJoinType();
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType getJoinType();

    // required .Player player = 4;
    /**
     * <code>required .Player player = 4;</code>
     */
    boolean hasPlayer();
    /**
     * <code>required .Player player = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getPlayer();
    /**
     * <code>required .Player player = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayerOrBuilder();
  }
  /**
   * Protobuf type {@code JoinTableEvent}
   */
  public static final class JoinTableEvent extends
      com.google.protobuf.GeneratedMessage
      implements JoinTableEventOrBuilder {
    // Use JoinTableEvent.newBuilder() to construct.
    private JoinTableEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JoinTableEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JoinTableEvent defaultInstance;
    public static JoinTableEvent getDefaultInstance() {
      return defaultInstance;
    }

    public JoinTableEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JoinTableEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType value = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                joinType_ = value;
              }
              break;
            }
            case 34: {
              com.mrmq.poker.common.proto.PokerModelProto.Player.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = player_.toBuilder();
              }
              player_ = input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(player_);
                player_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<JoinTableEvent> PARSER =
        new com.google.protobuf.AbstractParser<JoinTableEvent>() {
      public JoinTableEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinTableEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JoinTableEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .JoinTableType joinType = 2;
    public static final int JOINTYPE_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType joinType_;
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    public boolean hasJoinType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .JoinTableType joinType = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType getJoinType() {
      return joinType_;
    }

    // required .Player player = 4;
    public static final int PLAYER_FIELD_NUMBER = 4;
    private com.mrmq.poker.common.proto.PokerModelProto.Player player_;
    /**
     * <code>required .Player player = 4;</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Player player = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayer() {
      return player_;
    }
    /**
     * <code>required .Player player = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayerOrBuilder() {
      return player_;
    }

    private void initFields() {
      joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
      player_ = com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasJoinType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlayer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(2, joinType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, player_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, joinType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, player_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code JoinTableEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (playerBuilder_ == null) {
          player_ = com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance();
        } else {
          playerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_JoinTableEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.joinType_ = joinType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (playerBuilder_ == null) {
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent.getDefaultInstance()) return this;
        if (other.hasJoinType()) {
          setJoinType(other.getJoinType());
        }
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasJoinType()) {
          
          return false;
        }
        if (!hasPlayer()) {
          
          return false;
        }
        if (!getPlayer().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.JoinTableEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .JoinTableType joinType = 2;
      private com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public boolean hasJoinType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType getJoinType() {
        return joinType_;
      }
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public Builder setJoinType(com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        joinType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .JoinTableType joinType = 2;</code>
       */
      public Builder clearJoinType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        joinType_ = com.mrmq.poker.common.proto.PokerServiceProto.JoinTableType.PLAY;
        onChanged();
        return this;
      }

      // required .Player player = 4;
      private com.mrmq.poker.common.proto.PokerModelProto.Player player_ = com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> playerBuilder_;
      /**
       * <code>required .Player player = 4;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayer() {
        if (playerBuilder_ == null) {
          return player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public Builder setPlayer(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
          onChanged();
        } else {
          playerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public Builder setPlayer(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
          onChanged();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public Builder mergePlayer(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              player_ != com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance()) {
            player_ =
              com.mrmq.poker.common.proto.PokerModelProto.Player.newBuilder(player_).mergeFrom(value).buildPartial();
          } else {
            player_ = value;
          }
          onChanged();
        } else {
          playerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance();
          onChanged();
        } else {
          playerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getPlayerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_;
        }
      }
      /**
       * <code>required .Player player = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  player_,
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:JoinTableEvent)
    }

    static {
      defaultInstance = new JoinTableEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:JoinTableEvent)
  }

  public interface LeaveTableEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoundType roundType = 1;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     *
     * <pre>
     *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
     * </pre>
     */
    boolean hasRoundType();
    /**
     * <code>optional .RoundType roundType = 1;</code>
     *
     * <pre>
     *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // optional .PlayerState inRound = 2;
    /**
     * <code>optional .PlayerState inRound = 2;</code>
     */
    boolean hasInRound();
    /**
     * <code>optional .PlayerState inRound = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerState getInRound();

    // optional string userLeaveId = 3;
    /**
     * <code>optional string userLeaveId = 3;</code>
     */
    boolean hasUserLeaveId();
    /**
     * <code>optional string userLeaveId = 3;</code>
     */
    java.lang.String getUserLeaveId();
    /**
     * <code>optional string userLeaveId = 3;</code>
     */
    com.google.protobuf.ByteString
        getUserLeaveIdBytes();

    // optional string nextPlayer = 4;
    /**
     * <code>optional string nextPlayer = 4;</code>
     */
    boolean hasNextPlayer();
    /**
     * <code>optional string nextPlayer = 4;</code>
     */
    java.lang.String getNextPlayer();
    /**
     * <code>optional string nextPlayer = 4;</code>
     */
    com.google.protobuf.ByteString
        getNextPlayerBytes();

    // optional string reason = 5;
    /**
     * <code>optional string reason = 5;</code>
     */
    boolean hasReason();
    /**
     * <code>optional string reason = 5;</code>
     */
    java.lang.String getReason();
    /**
     * <code>optional string reason = 5;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();

    // optional string msg = 6;
    /**
     * <code>optional string msg = 6;</code>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 6;</code>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 6;</code>
     */
    com.google.protobuf.ByteString
        getMsgBytes();
  }
  /**
   * Protobuf type {@code LeaveTableEvent}
   */
  public static final class LeaveTableEvent extends
      com.google.protobuf.GeneratedMessage
      implements LeaveTableEventOrBuilder {
    // Use LeaveTableEvent.newBuilder() to construct.
    private LeaveTableEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LeaveTableEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LeaveTableEvent defaultInstance;
    public static LeaveTableEvent getDefaultInstance() {
      return defaultInstance;
    }

    public LeaveTableEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LeaveTableEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.PlayerState value = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                inRound_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              userLeaveId_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              nextPlayer_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              reason_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              msg_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_LeaveTableEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_LeaveTableEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<LeaveTableEvent> PARSER =
        new com.google.protobuf.AbstractParser<LeaveTableEvent>() {
      public LeaveTableEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LeaveTableEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LeaveTableEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     *
     * <pre>
     *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
     * </pre>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoundType roundType = 1;</code>
     *
     * <pre>
     *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // optional .PlayerState inRound = 2;
    public static final int INROUND_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerModelProto.PlayerState inRound_;
    /**
     * <code>optional .PlayerState inRound = 2;</code>
     */
    public boolean hasInRound() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .PlayerState inRound = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerState getInRound() {
      return inRound_;
    }

    // optional string userLeaveId = 3;
    public static final int USERLEAVEID_FIELD_NUMBER = 3;
    private java.lang.Object userLeaveId_;
    /**
     * <code>optional string userLeaveId = 3;</code>
     */
    public boolean hasUserLeaveId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string userLeaveId = 3;</code>
     */
    public java.lang.String getUserLeaveId() {
      java.lang.Object ref = userLeaveId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userLeaveId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userLeaveId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUserLeaveIdBytes() {
      java.lang.Object ref = userLeaveId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userLeaveId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nextPlayer = 4;
    public static final int NEXTPLAYER_FIELD_NUMBER = 4;
    private java.lang.Object nextPlayer_;
    /**
     * <code>optional string nextPlayer = 4;</code>
     */
    public boolean hasNextPlayer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string nextPlayer = 4;</code>
     */
    public java.lang.String getNextPlayer() {
      java.lang.Object ref = nextPlayer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextPlayer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nextPlayer = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNextPlayerBytes() {
      java.lang.Object ref = nextPlayer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPlayer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string reason = 5;
    public static final int REASON_FIELD_NUMBER = 5;
    private java.lang.Object reason_;
    /**
     * <code>optional string reason = 5;</code>
     */
    public boolean hasReason() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string reason = 5;</code>
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reason_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string reason = 5;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string msg = 6;
    public static final int MSG_FIELD_NUMBER = 6;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 6;</code>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string msg = 6;</code>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      inRound_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
      userLeaveId_ = "";
      nextPlayer_ = "";
      reason_ = "";
      msg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, inRound_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUserLeaveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNextPlayerBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getReasonBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, inRound_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUserLeaveIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNextPlayerBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getReasonBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LeaveTableEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_LeaveTableEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_LeaveTableEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        inRound_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
        bitField0_ = (bitField0_ & ~0x00000002);
        userLeaveId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        nextPlayer_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        reason_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_LeaveTableEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.inRound_ = inRound_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.userLeaveId_ = userLeaveId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nextPlayer_ = nextPlayer_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reason_ = reason_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.msg_ = msg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (other.hasInRound()) {
          setInRound(other.getInRound());
        }
        if (other.hasUserLeaveId()) {
          bitField0_ |= 0x00000004;
          userLeaveId_ = other.userLeaveId_;
          onChanged();
        }
        if (other.hasNextPlayer()) {
          bitField0_ |= 0x00000008;
          nextPlayer_ = other.nextPlayer_;
          onChanged();
        }
        if (other.hasReason()) {
          bitField0_ |= 0x00000010;
          reason_ = other.reason_;
          onChanged();
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000020;
          msg_ = other.msg_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.LeaveTableEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>optional .RoundType roundType = 1;</code>
       *
       * <pre>
       *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
       * </pre>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       *
       * <pre>
       *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       *
       * <pre>
       *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
       * </pre>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       *
       * <pre>
       *[indesk,deskstate, userleave,hatde, usermaster,nextplayer, reason, msg, acc]
       * </pre>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // optional .PlayerState inRound = 2;
      private com.mrmq.poker.common.proto.PokerModelProto.PlayerState inRound_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
      /**
       * <code>optional .PlayerState inRound = 2;</code>
       */
      public boolean hasInRound() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .PlayerState inRound = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerState getInRound() {
        return inRound_;
      }
      /**
       * <code>optional .PlayerState inRound = 2;</code>
       */
      public Builder setInRound(com.mrmq.poker.common.proto.PokerModelProto.PlayerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        inRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PlayerState inRound = 2;</code>
       */
      public Builder clearInRound() {
        bitField0_ = (bitField0_ & ~0x00000002);
        inRound_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
        onChanged();
        return this;
      }

      // optional string userLeaveId = 3;
      private java.lang.Object userLeaveId_ = "";
      /**
       * <code>optional string userLeaveId = 3;</code>
       */
      public boolean hasUserLeaveId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string userLeaveId = 3;</code>
       */
      public java.lang.String getUserLeaveId() {
        java.lang.Object ref = userLeaveId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userLeaveId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userLeaveId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUserLeaveIdBytes() {
        java.lang.Object ref = userLeaveId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userLeaveId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userLeaveId = 3;</code>
       */
      public Builder setUserLeaveId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        userLeaveId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userLeaveId = 3;</code>
       */
      public Builder clearUserLeaveId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        userLeaveId_ = getDefaultInstance().getUserLeaveId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userLeaveId = 3;</code>
       */
      public Builder setUserLeaveIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        userLeaveId_ = value;
        onChanged();
        return this;
      }

      // optional string nextPlayer = 4;
      private java.lang.Object nextPlayer_ = "";
      /**
       * <code>optional string nextPlayer = 4;</code>
       */
      public boolean hasNextPlayer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string nextPlayer = 4;</code>
       */
      public java.lang.String getNextPlayer() {
        java.lang.Object ref = nextPlayer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nextPlayer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nextPlayer = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNextPlayerBytes() {
        java.lang.Object ref = nextPlayer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPlayer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nextPlayer = 4;</code>
       */
      public Builder setNextPlayer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nextPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayer = 4;</code>
       */
      public Builder clearNextPlayer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nextPlayer_ = getDefaultInstance().getNextPlayer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayer = 4;</code>
       */
      public Builder setNextPlayerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nextPlayer_ = value;
        onChanged();
        return this;
      }

      // optional string reason = 5;
      private java.lang.Object reason_ = "";
      /**
       * <code>optional string reason = 5;</code>
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string reason = 5;</code>
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          reason_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reason = 5;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reason = 5;</code>
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string reason = 5;</code>
       */
      public Builder clearReason() {
        bitField0_ = (bitField0_ & ~0x00000010);
        reason_ = getDefaultInstance().getReason();
        onChanged();
        return this;
      }
      /**
       * <code>optional string reason = 5;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        reason_ = value;
        onChanged();
        return this;
      }

      // optional string msg = 6;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 6;</code>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string msg = 6;</code>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 6;</code>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 6;</code>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 6;</code>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        msg_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LeaveTableEvent)
    }

    static {
      defaultInstance = new LeaveTableEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LeaveTableEvent)
  }

  public interface PlayerActionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string playerId = 1;
    /**
     * <code>required string playerId = 1;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required string playerId = 1;</code>
     */
    java.lang.String getPlayerId();
    /**
     * <code>required string playerId = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    // required .ActionType actionType = 2;
    /**
     * <code>required .ActionType actionType = 2;</code>
     */
    boolean hasActionType();
    /**
     * <code>required .ActionType actionType = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType();

    // optional int64 amount = 3;
    /**
     * <code>optional int64 amount = 3;</code>
     */
    boolean hasAmount();
    /**
     * <code>optional int64 amount = 3;</code>
     */
    long getAmount();
  }
  /**
   * Protobuf type {@code PlayerAction}
   */
  public static final class PlayerAction extends
      com.google.protobuf.GeneratedMessage
      implements PlayerActionOrBuilder {
    // Use PlayerAction.newBuilder() to construct.
    private PlayerAction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerAction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerAction defaultInstance;
    public static PlayerAction getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerAction getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerAction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.ActionType value = com.mrmq.poker.common.proto.PokerModelProto.ActionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                actionType_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              amount_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerAction_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerAction> PARSER =
        new com.google.protobuf.AbstractParser<PlayerAction>() {
      public PlayerAction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerAction(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerAction> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string playerId = 1;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private java.lang.Object playerId_;
    /**
     * <code>required string playerId = 1;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string playerId = 1;</code>
     */
    public java.lang.String getPlayerId() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string playerId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .ActionType actionType = 2;
    public static final int ACTIONTYPE_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerModelProto.ActionType actionType_;
    /**
     * <code>required .ActionType actionType = 2;</code>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ActionType actionType = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType() {
      return actionType_;
    }

    // optional int64 amount = 3;
    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <code>optional int64 amount = 3;</code>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }

    private void initFields() {
      playerId_ = "";
      actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      amount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActionType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPlayerIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, amount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPlayerIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, amount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerAction_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerAction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerAction_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction build() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction result = new com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actionType_ = actionType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.amount_ = amount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          bitField0_ |= 0x00000001;
          playerId_ = other.playerId_;
          onChanged();
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasActionType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string playerId = 1;
      private java.lang.Object playerId_ = "";
      /**
       * <code>required string playerId = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string playerId = 1;</code>
       */
      public java.lang.String getPlayerId() {
        java.lang.Object ref = playerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string playerId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        java.lang.Object ref = playerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string playerId = 1;</code>
       */
      public Builder setPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = getDefaultInstance().getPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string playerId = 1;</code>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }

      // required .ActionType actionType = 2;
      private com.mrmq.poker.common.proto.PokerModelProto.ActionType actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      /**
       * <code>required .ActionType actionType = 2;</code>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .ActionType actionType = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType() {
        return actionType_;
      }
      /**
       * <code>required .ActionType actionType = 2;</code>
       */
      public Builder setActionType(com.mrmq.poker.common.proto.PokerModelProto.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ActionType actionType = 2;</code>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        onChanged();
        return this;
      }

      // optional int64 amount = 3;
      private long amount_ ;
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000004;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 amount = 3;</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        amount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerAction)
    }

    static {
      defaultInstance = new PlayerAction(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerAction)
  }

  public interface PlayerActionRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string tableId = 1;
    /**
     * <code>required string tableId = 1;</code>
     */
    boolean hasTableId();
    /**
     * <code>required string tableId = 1;</code>
     */
    java.lang.String getTableId();
    /**
     * <code>required string tableId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTableIdBytes();

    // required .PlayerAction action = 2;
    /**
     * <code>required .PlayerAction action = 2;</code>
     */
    boolean hasAction();
    /**
     * <code>required .PlayerAction action = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction getAction();
    /**
     * <code>required .PlayerAction action = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder getActionOrBuilder();
  }
  /**
   * Protobuf type {@code PlayerActionRequest}
   */
  public static final class PlayerActionRequest extends
      com.google.protobuf.GeneratedMessage
      implements PlayerActionRequestOrBuilder {
    // Use PlayerActionRequest.newBuilder() to construct.
    private PlayerActionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerActionRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerActionRequest defaultInstance;
    public static PlayerActionRequest getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerActionRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerActionRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tableId_ = input.readBytes();
              break;
            }
            case 18: {
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = action_.toBuilder();
              }
              action_ = input.readMessage(com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(action_);
                action_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerActionRequest> PARSER =
        new com.google.protobuf.AbstractParser<PlayerActionRequest>() {
      public PlayerActionRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerActionRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerActionRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string tableId = 1;
    public static final int TABLEID_FIELD_NUMBER = 1;
    private java.lang.Object tableId_;
    /**
     * <code>required string tableId = 1;</code>
     */
    public boolean hasTableId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string tableId = 1;</code>
     */
    public java.lang.String getTableId() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string tableId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableIdBytes() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .PlayerAction action = 2;
    public static final int ACTION_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction action_;
    /**
     * <code>required .PlayerAction action = 2;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .PlayerAction action = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction getAction() {
      return action_;
    }
    /**
     * <code>required .PlayerAction action = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder getActionOrBuilder() {
      return action_;
    }

    private void initFields() {
      tableId_ = "";
      action_ = com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTableId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAction().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, action_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, action_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerActionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tableId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (actionBuilder_ == null) {
          action_ = com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance();
        } else {
          actionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionRequest_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest build() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest result = new com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableId_ = tableId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (actionBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = actionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest.getDefaultInstance()) return this;
        if (other.hasTableId()) {
          bitField0_ |= 0x00000001;
          tableId_ = other.tableId_;
          onChanged();
        }
        if (other.hasAction()) {
          mergeAction(other.getAction());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTableId()) {
          
          return false;
        }
        if (!hasAction()) {
          
          return false;
        }
        if (!getAction().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string tableId = 1;
      private java.lang.Object tableId_ = "";
      /**
       * <code>required string tableId = 1;</code>
       */
      public boolean hasTableId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public java.lang.String getTableId() {
        java.lang.Object ref = tableId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tableId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTableIdBytes() {
        java.lang.Object ref = tableId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public Builder setTableId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public Builder clearTableId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tableId_ = getDefaultInstance().getTableId();
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 1;</code>
       */
      public Builder setTableIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }

      // required .PlayerAction action = 2;
      private com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction action_ = com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction, com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder> actionBuilder_;
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction getAction() {
        if (actionBuilder_ == null) {
          return action_;
        } else {
          return actionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public Builder setAction(com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction value) {
        if (actionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          action_ = value;
          onChanged();
        } else {
          actionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public Builder setAction(
          com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder builderForValue) {
        if (actionBuilder_ == null) {
          action_ = builderForValue.build();
          onChanged();
        } else {
          actionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public Builder mergeAction(com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction value) {
        if (actionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              action_ != com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance()) {
            action_ =
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.newBuilder(action_).mergeFrom(value).buildPartial();
          } else {
            action_ = value;
          }
          onChanged();
        } else {
          actionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public Builder clearAction() {
        if (actionBuilder_ == null) {
          action_ = com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.getDefaultInstance();
          onChanged();
        } else {
          actionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder getActionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getActionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder getActionOrBuilder() {
        if (actionBuilder_ != null) {
          return actionBuilder_.getMessageOrBuilder();
        } else {
          return action_;
        }
      }
      /**
       * <code>required .PlayerAction action = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction, com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder> 
          getActionFieldBuilder() {
        if (actionBuilder_ == null) {
          actionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction, com.mrmq.poker.common.proto.PokerServiceProto.PlayerAction.Builder, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionOrBuilder>(
                  action_,
                  getParentForChildren(),
                  isClean());
          action_ = null;
        }
        return actionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PlayerActionRequest)
    }

    static {
      defaultInstance = new PlayerActionRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerActionRequest)
  }

  public interface PlayerActionResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoundType roundType = 1;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    boolean hasRoundType();
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // required .ActionType actionType = 10;
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    boolean hasActionType();
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType();

    // required int64 remainAmount = 11;
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    boolean hasRemainAmount();
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    long getRemainAmount();

    // required int64 raiseAmount = 12;
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    boolean hasRaiseAmount();
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    long getRaiseAmount();

    // required int64 totalRaiseAmount = 13;
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    boolean hasTotalRaiseAmount();
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    long getTotalRaiseAmount();

    // repeated .Chip centerChips = 20;
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> 
        getCenterChipsList();
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index);
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    int getCenterChipsCount();
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList();
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index);

    // optional string nextPlayerId = 21;
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    boolean hasNextPlayerId();
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    java.lang.String getNextPlayerId();
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    com.google.protobuf.ByteString
        getNextPlayerIdBytes();
  }
  /**
   * Protobuf type {@code PlayerActionResponse}
   */
  public static final class PlayerActionResponse extends
      com.google.protobuf.GeneratedMessage
      implements PlayerActionResponseOrBuilder {
    // Use PlayerActionResponse.newBuilder() to construct.
    private PlayerActionResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerActionResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerActionResponse defaultInstance;
    public static PlayerActionResponse getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerActionResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerActionResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.ActionType value = com.mrmq.poker.common.proto.PokerModelProto.ActionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                actionType_ = value;
              }
              break;
            }
            case 88: {
              bitField0_ |= 0x00000004;
              remainAmount_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000008;
              raiseAmount_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000010;
              totalRaiseAmount_ = input.readInt64();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>();
                mutable_bitField0_ |= 0x00000020;
              }
              centerChips_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Chip.PARSER, extensionRegistry));
              break;
            }
            case 170: {
              bitField0_ |= 0x00000020;
              nextPlayerId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerActionResponse> PARSER =
        new com.google.protobuf.AbstractParser<PlayerActionResponse>() {
      public PlayerActionResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerActionResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerActionResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // required .ActionType actionType = 10;
    public static final int ACTIONTYPE_FIELD_NUMBER = 10;
    private com.mrmq.poker.common.proto.PokerModelProto.ActionType actionType_;
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType() {
      return actionType_;
    }

    // required int64 remainAmount = 11;
    public static final int REMAINAMOUNT_FIELD_NUMBER = 11;
    private long remainAmount_;
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    public boolean hasRemainAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    public long getRemainAmount() {
      return remainAmount_;
    }

    // required int64 raiseAmount = 12;
    public static final int RAISEAMOUNT_FIELD_NUMBER = 12;
    private long raiseAmount_;
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    public boolean hasRaiseAmount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    public long getRaiseAmount() {
      return raiseAmount_;
    }

    // required int64 totalRaiseAmount = 13;
    public static final int TOTALRAISEAMOUNT_FIELD_NUMBER = 13;
    private long totalRaiseAmount_;
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    public boolean hasTotalRaiseAmount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    public long getTotalRaiseAmount() {
      return totalRaiseAmount_;
    }

    // repeated .Chip centerChips = 20;
    public static final int CENTERCHIPS_FIELD_NUMBER = 20;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_;
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public int getCenterChipsCount() {
      return centerChips_.size();
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
      return centerChips_.get(index);
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index) {
      return centerChips_.get(index);
    }

    // optional string nextPlayerId = 21;
    public static final int NEXTPLAYERID_FIELD_NUMBER = 21;
    private java.lang.Object nextPlayerId_;
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    public boolean hasNextPlayerId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    public java.lang.String getNextPlayerId() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextPlayerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    public com.google.protobuf.ByteString
        getNextPlayerIdBytes() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPlayerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      remainAmount_ = 0L;
      raiseAmount_ = 0L;
      totalRaiseAmount_ = 0L;
      centerChips_ = java.util.Collections.emptyList();
      nextPlayerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasActionType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRemainAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRaiseAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalRaiseAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCenterChipsCount(); i++) {
        if (!getCenterChips(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(10, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(11, remainAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(12, raiseAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(13, totalRaiseAmount_);
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        output.writeMessage(20, centerChips_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(21, getNextPlayerIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, remainAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, raiseAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, totalRaiseAmount_);
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, centerChips_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getNextPlayerIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerActionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCenterChipsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        bitField0_ = (bitField0_ & ~0x00000002);
        remainAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        raiseAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalRaiseAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          centerChipsBuilder_.clear();
        }
        nextPlayerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionResponse_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse build() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse result = new com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.actionType_ = actionType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remainAmount_ = remainAmount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.raiseAmount_ = raiseAmount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalRaiseAmount_ = totalRaiseAmount_;
        if (centerChipsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.centerChips_ = centerChips_;
        } else {
          result.centerChips_ = centerChipsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nextPlayerId_ = nextPlayerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (other.hasRemainAmount()) {
          setRemainAmount(other.getRemainAmount());
        }
        if (other.hasRaiseAmount()) {
          setRaiseAmount(other.getRaiseAmount());
        }
        if (other.hasTotalRaiseAmount()) {
          setTotalRaiseAmount(other.getTotalRaiseAmount());
        }
        if (centerChipsBuilder_ == null) {
          if (!other.centerChips_.isEmpty()) {
            if (centerChips_.isEmpty()) {
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCenterChipsIsMutable();
              centerChips_.addAll(other.centerChips_);
            }
            onChanged();
          }
        } else {
          if (!other.centerChips_.isEmpty()) {
            if (centerChipsBuilder_.isEmpty()) {
              centerChipsBuilder_.dispose();
              centerChipsBuilder_ = null;
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000020);
              centerChipsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCenterChipsFieldBuilder() : null;
            } else {
              centerChipsBuilder_.addAllMessages(other.centerChips_);
            }
          }
        }
        if (other.hasNextPlayerId()) {
          bitField0_ |= 0x00000040;
          nextPlayerId_ = other.nextPlayerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasActionType()) {
          
          return false;
        }
        if (!hasRemainAmount()) {
          
          return false;
        }
        if (!hasRaiseAmount()) {
          
          return false;
        }
        if (!hasTotalRaiseAmount()) {
          
          return false;
        }
        for (int i = 0; i < getCenterChipsCount(); i++) {
          if (!getCenterChips(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // required .ActionType actionType = 10;
      private com.mrmq.poker.common.proto.PokerModelProto.ActionType actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType() {
        return actionType_;
      }
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public Builder setActionType(com.mrmq.poker.common.proto.PokerModelProto.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        onChanged();
        return this;
      }

      // required int64 remainAmount = 11;
      private long remainAmount_ ;
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public boolean hasRemainAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public long getRemainAmount() {
        return remainAmount_;
      }
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public Builder setRemainAmount(long value) {
        bitField0_ |= 0x00000004;
        remainAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public Builder clearRemainAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remainAmount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 raiseAmount = 12;
      private long raiseAmount_ ;
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public boolean hasRaiseAmount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public long getRaiseAmount() {
        return raiseAmount_;
      }
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public Builder setRaiseAmount(long value) {
        bitField0_ |= 0x00000008;
        raiseAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public Builder clearRaiseAmount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        raiseAmount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 totalRaiseAmount = 13;
      private long totalRaiseAmount_ ;
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public boolean hasTotalRaiseAmount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public long getTotalRaiseAmount() {
        return totalRaiseAmount_;
      }
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public Builder setTotalRaiseAmount(long value) {
        bitField0_ |= 0x00000010;
        totalRaiseAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public Builder clearTotalRaiseAmount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalRaiseAmount_ = 0L;
        onChanged();
        return this;
      }

      // repeated .Chip centerChips = 20;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_ =
        java.util.Collections.emptyList();
      private void ensureCenterChipsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>(centerChips_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> centerChipsBuilder_;

      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
        if (centerChipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(centerChips_);
        } else {
          return centerChipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public int getCenterChipsCount() {
        if (centerChipsBuilder_ == null) {
          return centerChips_.size();
        } else {
          return centerChipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);
        } else {
          return centerChipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.set(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.set(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(
          com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addAllCenterChips(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Chip> values) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          super.addAll(values, centerChips_);
          onChanged();
        } else {
          centerChipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder clearCenterChips() {
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          centerChipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder removeCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.remove(index);
          onChanged();
        } else {
          centerChipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder getCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
          int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);  } else {
          return centerChipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
           getCenterChipsOrBuilderList() {
        if (centerChipsBuilder_ != null) {
          return centerChipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(centerChips_);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder() {
        return getCenterChipsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder> 
           getCenterChipsBuilderList() {
        return getCenterChipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
          getCenterChipsFieldBuilder() {
        if (centerChipsBuilder_ == null) {
          centerChipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder>(
                  centerChips_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          centerChips_ = null;
        }
        return centerChipsBuilder_;
      }

      // optional string nextPlayerId = 21;
      private java.lang.Object nextPlayerId_ = "";
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public boolean hasNextPlayerId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public java.lang.String getNextPlayerId() {
        java.lang.Object ref = nextPlayerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nextPlayerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public com.google.protobuf.ByteString
          getNextPlayerIdBytes() {
        java.lang.Object ref = nextPlayerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPlayerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public Builder setNextPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public Builder clearNextPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        nextPlayerId_ = getDefaultInstance().getNextPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public Builder setNextPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerActionResponse)
    }

    static {
      defaultInstance = new PlayerActionResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerActionResponse)
  }

  public interface PlayerActionEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .RoundType roundType = 1;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    boolean hasRoundType();
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // required string playerId = 9;
    /**
     * <code>required string playerId = 9;</code>
     */
    boolean hasPlayerId();
    /**
     * <code>required string playerId = 9;</code>
     */
    java.lang.String getPlayerId();
    /**
     * <code>required string playerId = 9;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    // required .ActionType actionType = 10;
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    boolean hasActionType();
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType();

    // required int64 remainAmount = 11;
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    boolean hasRemainAmount();
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    long getRemainAmount();

    // required int64 raiseAmount = 12;
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    boolean hasRaiseAmount();
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    long getRaiseAmount();

    // required int64 totalRaiseAmount = 13;
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    boolean hasTotalRaiseAmount();
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    long getTotalRaiseAmount();

    // repeated .Chip centerChips = 20;
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> 
        getCenterChipsList();
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index);
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    int getCenterChipsCount();
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList();
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index);

    // optional string nextPlayerId = 21;
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    boolean hasNextPlayerId();
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    java.lang.String getNextPlayerId();
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    com.google.protobuf.ByteString
        getNextPlayerIdBytes();
  }
  /**
   * Protobuf type {@code PlayerActionEvent}
   */
  public static final class PlayerActionEvent extends
      com.google.protobuf.GeneratedMessage
      implements PlayerActionEventOrBuilder {
    // Use PlayerActionEvent.newBuilder() to construct.
    private PlayerActionEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerActionEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerActionEvent defaultInstance;
    public static PlayerActionEvent getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerActionEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerActionEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 74: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readBytes();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.ActionType value = com.mrmq.poker.common.proto.PokerModelProto.ActionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                actionType_ = value;
              }
              break;
            }
            case 88: {
              bitField0_ |= 0x00000008;
              remainAmount_ = input.readInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000010;
              raiseAmount_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000020;
              totalRaiseAmount_ = input.readInt64();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>();
                mutable_bitField0_ |= 0x00000040;
              }
              centerChips_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Chip.PARSER, extensionRegistry));
              break;
            }
            case 170: {
              bitField0_ |= 0x00000040;
              nextPlayerId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerActionEvent> PARSER =
        new com.google.protobuf.AbstractParser<PlayerActionEvent>() {
      public PlayerActionEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerActionEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerActionEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .RoundType roundType = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // required string playerId = 9;
    public static final int PLAYERID_FIELD_NUMBER = 9;
    private java.lang.Object playerId_;
    /**
     * <code>required string playerId = 9;</code>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string playerId = 9;</code>
     */
    public java.lang.String getPlayerId() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string playerId = 9;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .ActionType actionType = 10;
    public static final int ACTIONTYPE_FIELD_NUMBER = 10;
    private com.mrmq.poker.common.proto.PokerModelProto.ActionType actionType_;
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .ActionType actionType = 10;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType() {
      return actionType_;
    }

    // required int64 remainAmount = 11;
    public static final int REMAINAMOUNT_FIELD_NUMBER = 11;
    private long remainAmount_;
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    public boolean hasRemainAmount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 remainAmount = 11;</code>
     */
    public long getRemainAmount() {
      return remainAmount_;
    }

    // required int64 raiseAmount = 12;
    public static final int RAISEAMOUNT_FIELD_NUMBER = 12;
    private long raiseAmount_;
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    public boolean hasRaiseAmount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 raiseAmount = 12;</code>
     */
    public long getRaiseAmount() {
      return raiseAmount_;
    }

    // required int64 totalRaiseAmount = 13;
    public static final int TOTALRAISEAMOUNT_FIELD_NUMBER = 13;
    private long totalRaiseAmount_;
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    public boolean hasTotalRaiseAmount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 totalRaiseAmount = 13;</code>
     */
    public long getTotalRaiseAmount() {
      return totalRaiseAmount_;
    }

    // repeated .Chip centerChips = 20;
    public static final int CENTERCHIPS_FIELD_NUMBER = 20;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_;
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public int getCenterChipsCount() {
      return centerChips_.size();
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
      return centerChips_.get(index);
    }
    /**
     * <code>repeated .Chip centerChips = 20;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index) {
      return centerChips_.get(index);
    }

    // optional string nextPlayerId = 21;
    public static final int NEXTPLAYERID_FIELD_NUMBER = 21;
    private java.lang.Object nextPlayerId_;
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    public boolean hasNextPlayerId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    public java.lang.String getNextPlayerId() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextPlayerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nextPlayerId = 21;</code>
     */
    public com.google.protobuf.ByteString
        getNextPlayerIdBytes() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPlayerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      playerId_ = "";
      actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      remainAmount_ = 0L;
      raiseAmount_ = 0L;
      totalRaiseAmount_ = 0L;
      centerChips_ = java.util.Collections.emptyList();
      nextPlayerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActionType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRemainAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRaiseAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalRaiseAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCenterChipsCount(); i++) {
        if (!getCenterChips(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(9, getPlayerIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(10, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(11, remainAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(12, raiseAmount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(13, totalRaiseAmount_);
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        output.writeMessage(20, centerChips_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(21, getNextPlayerIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getPlayerIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, actionType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, remainAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, raiseAmount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, totalRaiseAmount_);
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, centerChips_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getNextPlayerIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerActionEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCenterChipsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        bitField0_ = (bitField0_ & ~0x00000004);
        remainAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        raiseAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        totalRaiseAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          centerChipsBuilder_.clear();
        }
        nextPlayerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_PlayerActionEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.actionType_ = actionType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.remainAmount_ = remainAmount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.raiseAmount_ = raiseAmount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.totalRaiseAmount_ = totalRaiseAmount_;
        if (centerChipsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.centerChips_ = centerChips_;
        } else {
          result.centerChips_ = centerChipsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nextPlayerId_ = nextPlayerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (other.hasPlayerId()) {
          bitField0_ |= 0x00000002;
          playerId_ = other.playerId_;
          onChanged();
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (other.hasRemainAmount()) {
          setRemainAmount(other.getRemainAmount());
        }
        if (other.hasRaiseAmount()) {
          setRaiseAmount(other.getRaiseAmount());
        }
        if (other.hasTotalRaiseAmount()) {
          setTotalRaiseAmount(other.getTotalRaiseAmount());
        }
        if (centerChipsBuilder_ == null) {
          if (!other.centerChips_.isEmpty()) {
            if (centerChips_.isEmpty()) {
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureCenterChipsIsMutable();
              centerChips_.addAll(other.centerChips_);
            }
            onChanged();
          }
        } else {
          if (!other.centerChips_.isEmpty()) {
            if (centerChipsBuilder_.isEmpty()) {
              centerChipsBuilder_.dispose();
              centerChipsBuilder_ = null;
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000040);
              centerChipsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCenterChipsFieldBuilder() : null;
            } else {
              centerChipsBuilder_.addAllMessages(other.centerChips_);
            }
          }
        }
        if (other.hasNextPlayerId()) {
          bitField0_ |= 0x00000080;
          nextPlayerId_ = other.nextPlayerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerId()) {
          
          return false;
        }
        if (!hasActionType()) {
          
          return false;
        }
        if (!hasRemainAmount()) {
          
          return false;
        }
        if (!hasRaiseAmount()) {
          
          return false;
        }
        if (!hasTotalRaiseAmount()) {
          
          return false;
        }
        for (int i = 0; i < getCenterChipsCount(); i++) {
          if (!getCenterChips(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.PlayerActionEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .RoundType roundType = 1;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // required string playerId = 9;
      private java.lang.Object playerId_ = "";
      /**
       * <code>required string playerId = 9;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string playerId = 9;</code>
       */
      public java.lang.String getPlayerId() {
        java.lang.Object ref = playerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          playerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string playerId = 9;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        java.lang.Object ref = playerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string playerId = 9;</code>
       */
      public Builder setPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string playerId = 9;</code>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = getDefaultInstance().getPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string playerId = 9;</code>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }

      // required .ActionType actionType = 10;
      private com.mrmq.poker.common.proto.PokerModelProto.ActionType actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ActionType getActionType() {
        return actionType_;
      }
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public Builder setActionType(com.mrmq.poker.common.proto.PokerModelProto.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        actionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ActionType actionType = 10;</code>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        actionType_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        onChanged();
        return this;
      }

      // required int64 remainAmount = 11;
      private long remainAmount_ ;
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public boolean hasRemainAmount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public long getRemainAmount() {
        return remainAmount_;
      }
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public Builder setRemainAmount(long value) {
        bitField0_ |= 0x00000008;
        remainAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 remainAmount = 11;</code>
       */
      public Builder clearRemainAmount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        remainAmount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 raiseAmount = 12;
      private long raiseAmount_ ;
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public boolean hasRaiseAmount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public long getRaiseAmount() {
        return raiseAmount_;
      }
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public Builder setRaiseAmount(long value) {
        bitField0_ |= 0x00000010;
        raiseAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 raiseAmount = 12;</code>
       */
      public Builder clearRaiseAmount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        raiseAmount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 totalRaiseAmount = 13;
      private long totalRaiseAmount_ ;
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public boolean hasTotalRaiseAmount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public long getTotalRaiseAmount() {
        return totalRaiseAmount_;
      }
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public Builder setTotalRaiseAmount(long value) {
        bitField0_ |= 0x00000020;
        totalRaiseAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 totalRaiseAmount = 13;</code>
       */
      public Builder clearTotalRaiseAmount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        totalRaiseAmount_ = 0L;
        onChanged();
        return this;
      }

      // repeated .Chip centerChips = 20;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_ =
        java.util.Collections.emptyList();
      private void ensureCenterChipsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>(centerChips_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> centerChipsBuilder_;

      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
        if (centerChipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(centerChips_);
        } else {
          return centerChipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public int getCenterChipsCount() {
        if (centerChipsBuilder_ == null) {
          return centerChips_.size();
        } else {
          return centerChipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);
        } else {
          return centerChipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.set(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.set(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(
          com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder addAllCenterChips(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Chip> values) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          super.addAll(values, centerChips_);
          onChanged();
        } else {
          centerChipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder clearCenterChips() {
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          centerChipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public Builder removeCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.remove(index);
          onChanged();
        } else {
          centerChipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder getCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
          int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);  } else {
          return centerChipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
           getCenterChipsOrBuilderList() {
        if (centerChipsBuilder_ != null) {
          return centerChipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(centerChips_);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder() {
        return getCenterChipsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 20;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder> 
           getCenterChipsBuilderList() {
        return getCenterChipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
          getCenterChipsFieldBuilder() {
        if (centerChipsBuilder_ == null) {
          centerChipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder>(
                  centerChips_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          centerChips_ = null;
        }
        return centerChipsBuilder_;
      }

      // optional string nextPlayerId = 21;
      private java.lang.Object nextPlayerId_ = "";
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public boolean hasNextPlayerId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public java.lang.String getNextPlayerId() {
        java.lang.Object ref = nextPlayerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nextPlayerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public com.google.protobuf.ByteString
          getNextPlayerIdBytes() {
        java.lang.Object ref = nextPlayerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPlayerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public Builder setNextPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public Builder clearNextPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nextPlayerId_ = getDefaultInstance().getNextPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayerId = 21;</code>
       */
      public Builder setNextPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerActionEvent)
    }

    static {
      defaultInstance = new PlayerActionEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerActionEvent)
  }

  public interface StartGameEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .RoundType roundType = 1;
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    boolean hasRoundType();
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // required string dealerId = 2;
    /**
     * <code>required string dealerId = 2;</code>
     */
    boolean hasDealerId();
    /**
     * <code>required string dealerId = 2;</code>
     */
    java.lang.String getDealerId();
    /**
     * <code>required string dealerId = 2;</code>
     */
    com.google.protobuf.ByteString
        getDealerIdBytes();

    // required string smallBlindId = 3;
    /**
     * <code>required string smallBlindId = 3;</code>
     */
    boolean hasSmallBlindId();
    /**
     * <code>required string smallBlindId = 3;</code>
     */
    java.lang.String getSmallBlindId();
    /**
     * <code>required string smallBlindId = 3;</code>
     */
    com.google.protobuf.ByteString
        getSmallBlindIdBytes();

    // required string bigBlindId = 4;
    /**
     * <code>required string bigBlindId = 4;</code>
     */
    boolean hasBigBlindId();
    /**
     * <code>required string bigBlindId = 4;</code>
     */
    java.lang.String getBigBlindId();
    /**
     * <code>required string bigBlindId = 4;</code>
     */
    com.google.protobuf.ByteString
        getBigBlindIdBytes();

    // repeated .Player players = 5;
    /**
     * <code>repeated .Player players = 5;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> 
        getPlayersList();
    /**
     * <code>repeated .Player players = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index);
    /**
     * <code>repeated .Player players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .Player players = 5;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .Player players = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    // required string nextPlayerId = 6;
    /**
     * <code>required string nextPlayerId = 6;</code>
     */
    boolean hasNextPlayerId();
    /**
     * <code>required string nextPlayerId = 6;</code>
     */
    java.lang.String getNextPlayerId();
    /**
     * <code>required string nextPlayerId = 6;</code>
     */
    com.google.protobuf.ByteString
        getNextPlayerIdBytes();
  }
  /**
   * Protobuf type {@code StartGameEvent}
   *
   * <pre>
   *[tenvongdau, dear,[[userid,[card*], tiendat, tienconlai, rank, actionid, action]*], nexplayer]
   * </pre>
   */
  public static final class StartGameEvent extends
      com.google.protobuf.GeneratedMessage
      implements StartGameEventOrBuilder {
    // Use StartGameEvent.newBuilder() to construct.
    private StartGameEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StartGameEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StartGameEvent defaultInstance;
    public static StartGameEvent getDefaultInstance() {
      return defaultInstance;
    }

    public StartGameEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StartGameEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              dealerId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              smallBlindId_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              bigBlindId_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>();
                mutable_bitField0_ |= 0x00000010;
              }
              players_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              nextPlayerId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_StartGameEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_StartGameEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<StartGameEvent> PARSER =
        new com.google.protobuf.AbstractParser<StartGameEvent>() {
      public StartGameEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StartGameEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StartGameEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // required string dealerId = 2;
    public static final int DEALERID_FIELD_NUMBER = 2;
    private java.lang.Object dealerId_;
    /**
     * <code>required string dealerId = 2;</code>
     */
    public boolean hasDealerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string dealerId = 2;</code>
     */
    public java.lang.String getDealerId() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dealerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dealerId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDealerIdBytes() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dealerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string smallBlindId = 3;
    public static final int SMALLBLINDID_FIELD_NUMBER = 3;
    private java.lang.Object smallBlindId_;
    /**
     * <code>required string smallBlindId = 3;</code>
     */
    public boolean hasSmallBlindId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string smallBlindId = 3;</code>
     */
    public java.lang.String getSmallBlindId() {
      java.lang.Object ref = smallBlindId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          smallBlindId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string smallBlindId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSmallBlindIdBytes() {
      java.lang.Object ref = smallBlindId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        smallBlindId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string bigBlindId = 4;
    public static final int BIGBLINDID_FIELD_NUMBER = 4;
    private java.lang.Object bigBlindId_;
    /**
     * <code>required string bigBlindId = 4;</code>
     */
    public boolean hasBigBlindId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string bigBlindId = 4;</code>
     */
    public java.lang.String getBigBlindId() {
      java.lang.Object ref = bigBlindId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bigBlindId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string bigBlindId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getBigBlindIdBytes() {
      java.lang.Object ref = bigBlindId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bigBlindId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Player players = 5;
    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_;
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // required string nextPlayerId = 6;
    public static final int NEXTPLAYERID_FIELD_NUMBER = 6;
    private java.lang.Object nextPlayerId_;
    /**
     * <code>required string nextPlayerId = 6;</code>
     */
    public boolean hasNextPlayerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string nextPlayerId = 6;</code>
     */
    public java.lang.String getNextPlayerId() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextPlayerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string nextPlayerId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNextPlayerIdBytes() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPlayerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      dealerId_ = "";
      smallBlindId_ = "";
      bigBlindId_ = "";
      players_ = java.util.Collections.emptyList();
      nextPlayerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoundType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDealerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallBlindId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBigBlindId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayersCount(); i++) {
        if (!getPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSmallBlindIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getBigBlindIdBytes());
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getNextPlayerIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSmallBlindIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getBigBlindIdBytes());
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getNextPlayerIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code StartGameEvent}
     *
     * <pre>
     *[tenvongdau, dear,[[userid,[card*], tiendat, tienconlai, rank, actionid, action]*], nexplayer]
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.StartGameEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_StartGameEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_StartGameEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        dealerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        smallBlindId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        bigBlindId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playersBuilder_.clear();
        }
        nextPlayerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_StartGameEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dealerId_ = dealerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.smallBlindId_ = smallBlindId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bigBlindId_ = bigBlindId_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextPlayerId_ = nextPlayerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (other.hasDealerId()) {
          bitField0_ |= 0x00000002;
          dealerId_ = other.dealerId_;
          onChanged();
        }
        if (other.hasSmallBlindId()) {
          bitField0_ |= 0x00000004;
          smallBlindId_ = other.smallBlindId_;
          onChanged();
        }
        if (other.hasBigBlindId()) {
          bitField0_ |= 0x00000008;
          bigBlindId_ = other.bigBlindId_;
          onChanged();
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasNextPlayerId()) {
          bitField0_ |= 0x00000020;
          nextPlayerId_ = other.nextPlayerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoundType()) {
          
          return false;
        }
        if (!hasDealerId()) {
          
          return false;
        }
        if (!hasSmallBlindId()) {
          
          return false;
        }
        if (!hasBigBlindId()) {
          
          return false;
        }
        if (!hasNextPlayerId()) {
          
          return false;
        }
        for (int i = 0; i < getPlayersCount(); i++) {
          if (!getPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.StartGameEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // required string dealerId = 2;
      private java.lang.Object dealerId_ = "";
      /**
       * <code>required string dealerId = 2;</code>
       */
      public boolean hasDealerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string dealerId = 2;</code>
       */
      public java.lang.String getDealerId() {
        java.lang.Object ref = dealerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dealerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dealerId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDealerIdBytes() {
        java.lang.Object ref = dealerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dealerId = 2;</code>
       */
      public Builder setDealerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dealerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dealerId = 2;</code>
       */
      public Builder clearDealerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dealerId_ = getDefaultInstance().getDealerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string dealerId = 2;</code>
       */
      public Builder setDealerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dealerId_ = value;
        onChanged();
        return this;
      }

      // required string smallBlindId = 3;
      private java.lang.Object smallBlindId_ = "";
      /**
       * <code>required string smallBlindId = 3;</code>
       */
      public boolean hasSmallBlindId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string smallBlindId = 3;</code>
       */
      public java.lang.String getSmallBlindId() {
        java.lang.Object ref = smallBlindId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          smallBlindId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string smallBlindId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSmallBlindIdBytes() {
        java.lang.Object ref = smallBlindId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          smallBlindId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string smallBlindId = 3;</code>
       */
      public Builder setSmallBlindId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        smallBlindId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string smallBlindId = 3;</code>
       */
      public Builder clearSmallBlindId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        smallBlindId_ = getDefaultInstance().getSmallBlindId();
        onChanged();
        return this;
      }
      /**
       * <code>required string smallBlindId = 3;</code>
       */
      public Builder setSmallBlindIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        smallBlindId_ = value;
        onChanged();
        return this;
      }

      // required string bigBlindId = 4;
      private java.lang.Object bigBlindId_ = "";
      /**
       * <code>required string bigBlindId = 4;</code>
       */
      public boolean hasBigBlindId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string bigBlindId = 4;</code>
       */
      public java.lang.String getBigBlindId() {
        java.lang.Object ref = bigBlindId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          bigBlindId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string bigBlindId = 4;</code>
       */
      public com.google.protobuf.ByteString
          getBigBlindIdBytes() {
        java.lang.Object ref = bigBlindId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bigBlindId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string bigBlindId = 4;</code>
       */
      public Builder setBigBlindId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bigBlindId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string bigBlindId = 4;</code>
       */
      public Builder clearBigBlindId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bigBlindId_ = getDefaultInstance().getBigBlindId();
        onChanged();
        return this;
      }
      /**
       * <code>required string bigBlindId = 4;</code>
       */
      public Builder setBigBlindIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        bigBlindId_ = value;
        onChanged();
        return this;
      }

      // repeated .Player players = 5;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>(players_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .Player players = 5;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // required string nextPlayerId = 6;
      private java.lang.Object nextPlayerId_ = "";
      /**
       * <code>required string nextPlayerId = 6;</code>
       */
      public boolean hasNextPlayerId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string nextPlayerId = 6;</code>
       */
      public java.lang.String getNextPlayerId() {
        java.lang.Object ref = nextPlayerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nextPlayerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string nextPlayerId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNextPlayerIdBytes() {
        java.lang.Object ref = nextPlayerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPlayerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string nextPlayerId = 6;</code>
       */
      public Builder setNextPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string nextPlayerId = 6;</code>
       */
      public Builder clearNextPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nextPlayerId_ = getDefaultInstance().getNextPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string nextPlayerId = 6;</code>
       */
      public Builder setNextPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:StartGameEvent)
    }

    static {
      defaultInstance = new StartGameEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:StartGameEvent)
  }

  public interface NewRoundEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .RoundType roundType = 1;
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    boolean hasRoundType();
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // repeated .Chip centerChips = 2;
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> 
        getCenterChipsList();
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index);
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    int getCenterChipsCount();
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList();
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index);

    // repeated .Card addCards = 3;
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getAddCardsList();
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getAddCards(int index);
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    int getAddCardsCount();
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getAddCardsOrBuilderList();
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getAddCardsOrBuilder(
        int index);

    // required .HandValue myRank = 4;
    /**
     * <code>required .HandValue myRank = 4;</code>
     */
    boolean hasMyRank();
    /**
     * <code>required .HandValue myRank = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.HandValue getMyRank();

    // required string firstPlayerId = 5;
    /**
     * <code>required string firstPlayerId = 5;</code>
     */
    boolean hasFirstPlayerId();
    /**
     * <code>required string firstPlayerId = 5;</code>
     */
    java.lang.String getFirstPlayerId();
    /**
     * <code>required string firstPlayerId = 5;</code>
     */
    com.google.protobuf.ByteString
        getFirstPlayerIdBytes();
  }
  /**
   * Protobuf type {@code NewRoundEvent}
   *
   * <pre>
   *[tenvong, [center_chip*],  [addcards*], myrank, firstplayer]
   * </pre>
   */
  public static final class NewRoundEvent extends
      com.google.protobuf.GeneratedMessage
      implements NewRoundEventOrBuilder {
    // Use NewRoundEvent.newBuilder() to construct.
    private NewRoundEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NewRoundEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NewRoundEvent defaultInstance;
    public static NewRoundEvent getDefaultInstance() {
      return defaultInstance;
    }

    public NewRoundEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NewRoundEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>();
                mutable_bitField0_ |= 0x00000002;
              }
              centerChips_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Chip.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                addCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000004;
              }
              addCards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.HandValue value = com.mrmq.poker.common.proto.PokerModelProto.HandValue.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                myRank_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000004;
              firstPlayerId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          addCards_ = java.util.Collections.unmodifiableList(addCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_NewRoundEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_NewRoundEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<NewRoundEvent> PARSER =
        new com.google.protobuf.AbstractParser<NewRoundEvent>() {
      public NewRoundEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NewRoundEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NewRoundEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // repeated .Chip centerChips = 2;
    public static final int CENTERCHIPS_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_;
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public int getCenterChipsCount() {
      return centerChips_.size();
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
      return centerChips_.get(index);
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index) {
      return centerChips_.get(index);
    }

    // repeated .Card addCards = 3;
    public static final int ADDCARDS_FIELD_NUMBER = 3;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> addCards_;
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getAddCardsList() {
      return addCards_;
    }
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getAddCardsOrBuilderList() {
      return addCards_;
    }
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    public int getAddCardsCount() {
      return addCards_.size();
    }
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getAddCards(int index) {
      return addCards_.get(index);
    }
    /**
     * <code>repeated .Card addCards = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getAddCardsOrBuilder(
        int index) {
      return addCards_.get(index);
    }

    // required .HandValue myRank = 4;
    public static final int MYRANK_FIELD_NUMBER = 4;
    private com.mrmq.poker.common.proto.PokerModelProto.HandValue myRank_;
    /**
     * <code>required .HandValue myRank = 4;</code>
     */
    public boolean hasMyRank() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .HandValue myRank = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.HandValue getMyRank() {
      return myRank_;
    }

    // required string firstPlayerId = 5;
    public static final int FIRSTPLAYERID_FIELD_NUMBER = 5;
    private java.lang.Object firstPlayerId_;
    /**
     * <code>required string firstPlayerId = 5;</code>
     */
    public boolean hasFirstPlayerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string firstPlayerId = 5;</code>
     */
    public java.lang.String getFirstPlayerId() {
      java.lang.Object ref = firstPlayerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          firstPlayerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string firstPlayerId = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFirstPlayerIdBytes() {
      java.lang.Object ref = firstPlayerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firstPlayerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      centerChips_ = java.util.Collections.emptyList();
      addCards_ = java.util.Collections.emptyList();
      myRank_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
      firstPlayerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoundType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMyRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFirstPlayerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCenterChipsCount(); i++) {
        if (!getCenterChips(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAddCardsCount(); i++) {
        if (!getAddCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        output.writeMessage(2, centerChips_.get(i));
      }
      for (int i = 0; i < addCards_.size(); i++) {
        output.writeMessage(3, addCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(4, myRank_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(5, getFirstPlayerIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, centerChips_.get(i));
      }
      for (int i = 0; i < addCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, addCards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, myRank_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getFirstPlayerIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NewRoundEvent}
     *
     * <pre>
     *[tenvong, [center_chip*],  [addcards*], myrank, firstplayer]
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_NewRoundEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_NewRoundEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCenterChipsFieldBuilder();
          getAddCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          centerChipsBuilder_.clear();
        }
        if (addCardsBuilder_ == null) {
          addCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          addCardsBuilder_.clear();
        }
        myRank_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
        bitField0_ = (bitField0_ & ~0x00000008);
        firstPlayerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_NewRoundEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (centerChipsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.centerChips_ = centerChips_;
        } else {
          result.centerChips_ = centerChipsBuilder_.build();
        }
        if (addCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            addCards_ = java.util.Collections.unmodifiableList(addCards_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.addCards_ = addCards_;
        } else {
          result.addCards_ = addCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.myRank_ = myRank_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.firstPlayerId_ = firstPlayerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (centerChipsBuilder_ == null) {
          if (!other.centerChips_.isEmpty()) {
            if (centerChips_.isEmpty()) {
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCenterChipsIsMutable();
              centerChips_.addAll(other.centerChips_);
            }
            onChanged();
          }
        } else {
          if (!other.centerChips_.isEmpty()) {
            if (centerChipsBuilder_.isEmpty()) {
              centerChipsBuilder_.dispose();
              centerChipsBuilder_ = null;
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000002);
              centerChipsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCenterChipsFieldBuilder() : null;
            } else {
              centerChipsBuilder_.addAllMessages(other.centerChips_);
            }
          }
        }
        if (addCardsBuilder_ == null) {
          if (!other.addCards_.isEmpty()) {
            if (addCards_.isEmpty()) {
              addCards_ = other.addCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAddCardsIsMutable();
              addCards_.addAll(other.addCards_);
            }
            onChanged();
          }
        } else {
          if (!other.addCards_.isEmpty()) {
            if (addCardsBuilder_.isEmpty()) {
              addCardsBuilder_.dispose();
              addCardsBuilder_ = null;
              addCards_ = other.addCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
              addCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAddCardsFieldBuilder() : null;
            } else {
              addCardsBuilder_.addAllMessages(other.addCards_);
            }
          }
        }
        if (other.hasMyRank()) {
          setMyRank(other.getMyRank());
        }
        if (other.hasFirstPlayerId()) {
          bitField0_ |= 0x00000010;
          firstPlayerId_ = other.firstPlayerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoundType()) {
          
          return false;
        }
        if (!hasMyRank()) {
          
          return false;
        }
        if (!hasFirstPlayerId()) {
          
          return false;
        }
        for (int i = 0; i < getCenterChipsCount(); i++) {
          if (!getCenterChips(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAddCardsCount(); i++) {
          if (!getAddCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.NewRoundEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // repeated .Chip centerChips = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_ =
        java.util.Collections.emptyList();
      private void ensureCenterChipsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>(centerChips_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> centerChipsBuilder_;

      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
        if (centerChipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(centerChips_);
        } else {
          return centerChipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public int getCenterChipsCount() {
        if (centerChipsBuilder_ == null) {
          return centerChips_.size();
        } else {
          return centerChipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);
        } else {
          return centerChipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.set(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.set(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(
          com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addAllCenterChips(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Chip> values) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          super.addAll(values, centerChips_);
          onChanged();
        } else {
          centerChipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder clearCenterChips() {
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          centerChipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder removeCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.remove(index);
          onChanged();
        } else {
          centerChipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder getCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
          int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);  } else {
          return centerChipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
           getCenterChipsOrBuilderList() {
        if (centerChipsBuilder_ != null) {
          return centerChipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(centerChips_);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder() {
        return getCenterChipsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder> 
           getCenterChipsBuilderList() {
        return getCenterChipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
          getCenterChipsFieldBuilder() {
        if (centerChipsBuilder_ == null) {
          centerChipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder>(
                  centerChips_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          centerChips_ = null;
        }
        return centerChipsBuilder_;
      }

      // repeated .Card addCards = 3;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> addCards_ =
        java.util.Collections.emptyList();
      private void ensureAddCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          addCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(addCards_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> addCardsBuilder_;

      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getAddCardsList() {
        if (addCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(addCards_);
        } else {
          return addCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public int getAddCardsCount() {
        if (addCardsBuilder_ == null) {
          return addCards_.size();
        } else {
          return addCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getAddCards(int index) {
        if (addCardsBuilder_ == null) {
          return addCards_.get(index);
        } else {
          return addCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder setAddCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (addCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddCardsIsMutable();
          addCards_.set(index, value);
          onChanged();
        } else {
          addCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder setAddCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (addCardsBuilder_ == null) {
          ensureAddCardsIsMutable();
          addCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          addCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder addAddCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (addCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddCardsIsMutable();
          addCards_.add(value);
          onChanged();
        } else {
          addCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder addAddCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (addCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddCardsIsMutable();
          addCards_.add(index, value);
          onChanged();
        } else {
          addCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder addAddCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (addCardsBuilder_ == null) {
          ensureAddCardsIsMutable();
          addCards_.add(builderForValue.build());
          onChanged();
        } else {
          addCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder addAddCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (addCardsBuilder_ == null) {
          ensureAddCardsIsMutable();
          addCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          addCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder addAllAddCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (addCardsBuilder_ == null) {
          ensureAddCardsIsMutable();
          super.addAll(values, addCards_);
          onChanged();
        } else {
          addCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder clearAddCards() {
        if (addCardsBuilder_ == null) {
          addCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          addCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public Builder removeAddCards(int index) {
        if (addCardsBuilder_ == null) {
          ensureAddCardsIsMutable();
          addCards_.remove(index);
          onChanged();
        } else {
          addCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getAddCardsBuilder(
          int index) {
        return getAddCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getAddCardsOrBuilder(
          int index) {
        if (addCardsBuilder_ == null) {
          return addCards_.get(index);  } else {
          return addCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getAddCardsOrBuilderList() {
        if (addCardsBuilder_ != null) {
          return addCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(addCards_);
        }
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addAddCardsBuilder() {
        return getAddCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addAddCardsBuilder(
          int index) {
        return getAddCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card addCards = 3;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getAddCardsBuilderList() {
        return getAddCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getAddCardsFieldBuilder() {
        if (addCardsBuilder_ == null) {
          addCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  addCards_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          addCards_ = null;
        }
        return addCardsBuilder_;
      }

      // required .HandValue myRank = 4;
      private com.mrmq.poker.common.proto.PokerModelProto.HandValue myRank_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
      /**
       * <code>required .HandValue myRank = 4;</code>
       */
      public boolean hasMyRank() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .HandValue myRank = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.HandValue getMyRank() {
        return myRank_;
      }
      /**
       * <code>required .HandValue myRank = 4;</code>
       */
      public Builder setMyRank(com.mrmq.poker.common.proto.PokerModelProto.HandValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        myRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .HandValue myRank = 4;</code>
       */
      public Builder clearMyRank() {
        bitField0_ = (bitField0_ & ~0x00000008);
        myRank_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
        onChanged();
        return this;
      }

      // required string firstPlayerId = 5;
      private java.lang.Object firstPlayerId_ = "";
      /**
       * <code>required string firstPlayerId = 5;</code>
       */
      public boolean hasFirstPlayerId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string firstPlayerId = 5;</code>
       */
      public java.lang.String getFirstPlayerId() {
        java.lang.Object ref = firstPlayerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          firstPlayerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string firstPlayerId = 5;</code>
       */
      public com.google.protobuf.ByteString
          getFirstPlayerIdBytes() {
        java.lang.Object ref = firstPlayerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firstPlayerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string firstPlayerId = 5;</code>
       */
      public Builder setFirstPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        firstPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string firstPlayerId = 5;</code>
       */
      public Builder clearFirstPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        firstPlayerId_ = getDefaultInstance().getFirstPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string firstPlayerId = 5;</code>
       */
      public Builder setFirstPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        firstPlayerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NewRoundEvent)
    }

    static {
      defaultInstance = new NewRoundEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:NewRoundEvent)
  }

  public interface EndGameEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .RoundType roundType = 1;
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    boolean hasRoundType();
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // repeated .Chip centerChips = 2;
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> 
        getCenterChipsList();
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index);
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    int getCenterChipsCount();
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList();
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index);

    // repeated .Card historyCards = 3;
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getHistoryCardsList();
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getHistoryCards(int index);
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    int getHistoryCardsCount();
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getHistoryCardsOrBuilderList();
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getHistoryCardsOrBuilder(
        int index);

    // repeated .Player players = 4;
    /**
     * <code>repeated .Player players = 4;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> 
        getPlayersList();
    /**
     * <code>repeated .Player players = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index);
    /**
     * <code>repeated .Player players = 4;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .Player players = 4;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .Player players = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code EndGameEvent}
   *
   * <pre>
   *"[endstate,[handcards*],[layer*], [center_chip*],  [history_card*]]
   *handcards = [playerid,[card*]]
   *layer = [[player*], [center_chip*], rank]
   *player = [playerid,[wincard*],hatdeadd,buyMoney,totalMoney]  - trường hợp bình thường 2"
   * </pre>
   */
  public static final class EndGameEvent extends
      com.google.protobuf.GeneratedMessage
      implements EndGameEventOrBuilder {
    // Use EndGameEvent.newBuilder() to construct.
    private EndGameEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EndGameEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EndGameEvent defaultInstance;
    public static EndGameEvent getDefaultInstance() {
      return defaultInstance;
    }

    public EndGameEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EndGameEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                roundType_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>();
                mutable_bitField0_ |= 0x00000002;
              }
              centerChips_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Chip.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                historyCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000004;
              }
              historyCards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>();
                mutable_bitField0_ |= 0x00000008;
              }
              players_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          historyCards_ = java.util.Collections.unmodifiableList(historyCards_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_EndGameEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_EndGameEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<EndGameEvent> PARSER =
        new com.google.protobuf.AbstractParser<EndGameEvent>() {
      public EndGameEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EndGameEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EndGameEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .RoundType roundType = 1;
    public static final int ROUNDTYPE_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .RoundType roundType = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // repeated .Chip centerChips = 2;
    public static final int CENTERCHIPS_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_;
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
        getCenterChipsOrBuilderList() {
      return centerChips_;
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public int getCenterChipsCount() {
      return centerChips_.size();
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
      return centerChips_.get(index);
    }
    /**
     * <code>repeated .Chip centerChips = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
        int index) {
      return centerChips_.get(index);
    }

    // repeated .Card historyCards = 3;
    public static final int HISTORYCARDS_FIELD_NUMBER = 3;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> historyCards_;
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getHistoryCardsList() {
      return historyCards_;
    }
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getHistoryCardsOrBuilderList() {
      return historyCards_;
    }
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    public int getHistoryCardsCount() {
      return historyCards_.size();
    }
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getHistoryCards(int index) {
      return historyCards_.get(index);
    }
    /**
     * <code>repeated .Card historyCards = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getHistoryCardsOrBuilder(
        int index) {
      return historyCards_.get(index);
    }

    // repeated .Player players = 4;
    public static final int PLAYERS_FIELD_NUMBER = 4;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_;
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .Player players = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      centerChips_ = java.util.Collections.emptyList();
      historyCards_ = java.util.Collections.emptyList();
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoundType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCenterChipsCount(); i++) {
        if (!getCenterChips(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHistoryCardsCount(); i++) {
        if (!getHistoryCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPlayersCount(); i++) {
        if (!getPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, roundType_.getNumber());
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        output.writeMessage(2, centerChips_.get(i));
      }
      for (int i = 0; i < historyCards_.size(); i++) {
        output.writeMessage(3, historyCards_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(4, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, roundType_.getNumber());
      }
      for (int i = 0; i < centerChips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, centerChips_.get(i));
      }
      for (int i = 0; i < historyCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, historyCards_.get(i));
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EndGameEvent}
     *
     * <pre>
     *"[endstate,[handcards*],[layer*], [center_chip*],  [history_card*]]
     *handcards = [playerid,[card*]]
     *layer = [[player*], [center_chip*], rank]
     *player = [playerid,[wincard*],hatdeadd,buyMoney,totalMoney]  - trường hợp bình thường 2"
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.EndGameEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_EndGameEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_EndGameEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCenterChipsFieldBuilder();
          getHistoryCardsFieldBuilder();
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          centerChipsBuilder_.clear();
        }
        if (historyCardsBuilder_ == null) {
          historyCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          historyCardsBuilder_.clear();
        }
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_EndGameEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roundType_ = roundType_;
        if (centerChipsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            centerChips_ = java.util.Collections.unmodifiableList(centerChips_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.centerChips_ = centerChips_;
        } else {
          result.centerChips_ = centerChipsBuilder_.build();
        }
        if (historyCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            historyCards_ = java.util.Collections.unmodifiableList(historyCards_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.historyCards_ = historyCards_;
        } else {
          result.historyCards_ = historyCardsBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent.getDefaultInstance()) return this;
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (centerChipsBuilder_ == null) {
          if (!other.centerChips_.isEmpty()) {
            if (centerChips_.isEmpty()) {
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCenterChipsIsMutable();
              centerChips_.addAll(other.centerChips_);
            }
            onChanged();
          }
        } else {
          if (!other.centerChips_.isEmpty()) {
            if (centerChipsBuilder_.isEmpty()) {
              centerChipsBuilder_.dispose();
              centerChipsBuilder_ = null;
              centerChips_ = other.centerChips_;
              bitField0_ = (bitField0_ & ~0x00000002);
              centerChipsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCenterChipsFieldBuilder() : null;
            } else {
              centerChipsBuilder_.addAllMessages(other.centerChips_);
            }
          }
        }
        if (historyCardsBuilder_ == null) {
          if (!other.historyCards_.isEmpty()) {
            if (historyCards_.isEmpty()) {
              historyCards_ = other.historyCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureHistoryCardsIsMutable();
              historyCards_.addAll(other.historyCards_);
            }
            onChanged();
          }
        } else {
          if (!other.historyCards_.isEmpty()) {
            if (historyCardsBuilder_.isEmpty()) {
              historyCardsBuilder_.dispose();
              historyCardsBuilder_ = null;
              historyCards_ = other.historyCards_;
              bitField0_ = (bitField0_ & ~0x00000004);
              historyCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHistoryCardsFieldBuilder() : null;
            } else {
              historyCardsBuilder_.addAllMessages(other.historyCards_);
            }
          }
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoundType()) {
          
          return false;
        }
        for (int i = 0; i < getCenterChipsCount(); i++) {
          if (!getCenterChips(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHistoryCardsCount(); i++) {
          if (!getHistoryCards(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPlayersCount(); i++) {
          if (!getPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.EndGameEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .RoundType roundType = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .RoundType roundType = 1;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // repeated .Chip centerChips = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> centerChips_ =
        java.util.Collections.emptyList();
      private void ensureCenterChipsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          centerChips_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Chip>(centerChips_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> centerChipsBuilder_;

      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip> getCenterChipsList() {
        if (centerChipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(centerChips_);
        } else {
          return centerChipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public int getCenterChipsCount() {
        if (centerChipsBuilder_ == null) {
          return centerChips_.size();
        } else {
          return centerChipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip getCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);
        } else {
          return centerChipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.set(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder setCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.set(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip value) {
        if (centerChipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCenterChipsIsMutable();
          centerChips_.add(index, value);
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(
          com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addCenterChips(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder builderForValue) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.add(index, builderForValue.build());
          onChanged();
        } else {
          centerChipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder addAllCenterChips(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Chip> values) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          super.addAll(values, centerChips_);
          onChanged();
        } else {
          centerChipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder clearCenterChips() {
        if (centerChipsBuilder_ == null) {
          centerChips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          centerChipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public Builder removeCenterChips(int index) {
        if (centerChipsBuilder_ == null) {
          ensureCenterChipsIsMutable();
          centerChips_.remove(index);
          onChanged();
        } else {
          centerChipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder getCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder getCenterChipsOrBuilder(
          int index) {
        if (centerChipsBuilder_ == null) {
          return centerChips_.get(index);  } else {
          return centerChipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
           getCenterChipsOrBuilderList() {
        if (centerChipsBuilder_ != null) {
          return centerChipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(centerChips_);
        }
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder() {
        return getCenterChipsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder addCenterChipsBuilder(
          int index) {
        return getCenterChipsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance());
      }
      /**
       * <code>repeated .Chip centerChips = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder> 
           getCenterChipsBuilderList() {
        return getCenterChipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder> 
          getCenterChipsFieldBuilder() {
        if (centerChipsBuilder_ == null) {
          centerChipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Chip, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder, com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder>(
                  centerChips_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          centerChips_ = null;
        }
        return centerChipsBuilder_;
      }

      // repeated .Card historyCards = 3;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> historyCards_ =
        java.util.Collections.emptyList();
      private void ensureHistoryCardsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          historyCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(historyCards_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> historyCardsBuilder_;

      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getHistoryCardsList() {
        if (historyCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(historyCards_);
        } else {
          return historyCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public int getHistoryCardsCount() {
        if (historyCardsBuilder_ == null) {
          return historyCards_.size();
        } else {
          return historyCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getHistoryCards(int index) {
        if (historyCardsBuilder_ == null) {
          return historyCards_.get(index);
        } else {
          return historyCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder setHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (historyCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryCardsIsMutable();
          historyCards_.set(index, value);
          onChanged();
        } else {
          historyCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder setHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          historyCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder addHistoryCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (historyCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryCardsIsMutable();
          historyCards_.add(value);
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder addHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (historyCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistoryCardsIsMutable();
          historyCards_.add(index, value);
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder addHistoryCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.add(builderForValue.build());
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder addHistoryCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          historyCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder addAllHistoryCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          super.addAll(values, historyCards_);
          onChanged();
        } else {
          historyCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder clearHistoryCards() {
        if (historyCardsBuilder_ == null) {
          historyCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          historyCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public Builder removeHistoryCards(int index) {
        if (historyCardsBuilder_ == null) {
          ensureHistoryCardsIsMutable();
          historyCards_.remove(index);
          onChanged();
        } else {
          historyCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getHistoryCardsBuilder(
          int index) {
        return getHistoryCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getHistoryCardsOrBuilder(
          int index) {
        if (historyCardsBuilder_ == null) {
          return historyCards_.get(index);  } else {
          return historyCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getHistoryCardsOrBuilderList() {
        if (historyCardsBuilder_ != null) {
          return historyCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(historyCards_);
        }
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addHistoryCardsBuilder() {
        return getHistoryCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addHistoryCardsBuilder(
          int index) {
        return getHistoryCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card historyCards = 3;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getHistoryCardsBuilderList() {
        return getHistoryCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getHistoryCardsFieldBuilder() {
        if (historyCardsBuilder_ == null) {
          historyCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  historyCards_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          historyCards_ = null;
        }
        return historyCardsBuilder_;
      }

      // repeated .Player players = 4;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>(players_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .Player players = 4;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 4;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:EndGameEvent)
    }

    static {
      defaultInstance = new EndGameEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:EndGameEvent)
  }

  public interface AllInEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .Player players = 1;
    /**
     * <code>repeated .Player players = 1;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> 
        getPlayersList();
    /**
     * <code>repeated .Player players = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index);
    /**
     * <code>repeated .Player players = 1;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .Player players = 1;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .Player players = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code AllInEvent}
   *
   * <pre>
   *[handcards*]
   *handcards = [playerid,[card*]]
   * </pre>
   */
  public static final class AllInEvent extends
      com.google.protobuf.GeneratedMessage
      implements AllInEventOrBuilder {
    // Use AllInEvent.newBuilder() to construct.
    private AllInEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AllInEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AllInEvent defaultInstance;
    public static AllInEvent getDefaultInstance() {
      return defaultInstance;
    }

    public AllInEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AllInEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>();
                mutable_bitField0_ |= 0x00000001;
              }
              players_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_AllInEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_AllInEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<AllInEvent> PARSER =
        new com.google.protobuf.AbstractParser<AllInEvent>() {
      public AllInEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllInEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AllInEvent> getParserForType() {
      return PARSER;
    }

    // repeated .Player players = 1;
    public static final int PLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_;
    /**
     * <code>repeated .Player players = 1;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 1;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 1;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .Player players = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .Player players = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getPlayersCount(); i++) {
        if (!getPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(1, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AllInEvent}
     *
     * <pre>
     *[handcards*]
     *handcards = [playerid,[card*]]
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.AllInEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_AllInEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_AllInEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_AllInEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent(this);
        int from_bitField0_ = bitField0_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent.getDefaultInstance()) return this;
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPlayersCount(); i++) {
          if (!getPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.AllInEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .Player players = 1;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>(players_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .Player players = 1;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder addPlayers(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder addPlayers(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 1;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:AllInEvent)
    }

    static {
      defaultInstance = new AllInEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AllInEvent)
  }

  public interface DealerEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string dealerId = 1;
    /**
     * <code>required string dealerId = 1;</code>
     */
    boolean hasDealerId();
    /**
     * <code>required string dealerId = 1;</code>
     */
    java.lang.String getDealerId();
    /**
     * <code>required string dealerId = 1;</code>
     */
    com.google.protobuf.ByteString
        getDealerIdBytes();

    // required .Card dealerCard = 2;
    /**
     * <code>required .Card dealerCard = 2;</code>
     */
    boolean hasDealerCard();
    /**
     * <code>required .Card dealerCard = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getDealerCard();
    /**
     * <code>required .Card dealerCard = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getDealerCardOrBuilder();

    // repeated string playerIds = 3;
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    java.util.List<java.lang.String>
    getPlayerIdsList();
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    int getPlayerIdsCount();
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    java.lang.String getPlayerIds(int index);
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdsBytes(int index);

    // repeated .Card playerCards = 4;
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getPlayerCardsList();
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getPlayerCards(int index);
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    int getPlayerCardsCount();
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getPlayerCardsOrBuilderList();
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getPlayerCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DealerEvent}
   *
   * <pre>
   *[[[userid, card]*], ['dealer', card]]
   * </pre>
   */
  public static final class DealerEvent extends
      com.google.protobuf.GeneratedMessage
      implements DealerEventOrBuilder {
    // Use DealerEvent.newBuilder() to construct.
    private DealerEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DealerEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DealerEvent defaultInstance;
    public static DealerEvent getDefaultInstance() {
      return defaultInstance;
    }

    public DealerEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DealerEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              dealerId_ = input.readBytes();
              break;
            }
            case 18: {
              com.mrmq.poker.common.proto.PokerModelProto.Card.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = dealerCard_.toBuilder();
              }
              dealerCard_ = input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dealerCard_);
                dealerCard_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                playerIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              playerIds_.add(input.readBytes());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                playerCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000008;
              }
              playerCards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          playerIds_ = new com.google.protobuf.UnmodifiableLazyStringList(playerIds_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          playerCards_ = java.util.Collections.unmodifiableList(playerCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_DealerEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_DealerEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<DealerEvent> PARSER =
        new com.google.protobuf.AbstractParser<DealerEvent>() {
      public DealerEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealerEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DealerEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string dealerId = 1;
    public static final int DEALERID_FIELD_NUMBER = 1;
    private java.lang.Object dealerId_;
    /**
     * <code>required string dealerId = 1;</code>
     */
    public boolean hasDealerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string dealerId = 1;</code>
     */
    public java.lang.String getDealerId() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dealerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dealerId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDealerIdBytes() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dealerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .Card dealerCard = 2;
    public static final int DEALERCARD_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerModelProto.Card dealerCard_;
    /**
     * <code>required .Card dealerCard = 2;</code>
     */
    public boolean hasDealerCard() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Card dealerCard = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getDealerCard() {
      return dealerCard_;
    }
    /**
     * <code>required .Card dealerCard = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getDealerCardOrBuilder() {
      return dealerCard_;
    }

    // repeated string playerIds = 3;
    public static final int PLAYERIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList playerIds_;
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    public java.util.List<java.lang.String>
        getPlayerIdsList() {
      return playerIds_;
    }
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    public int getPlayerIdsCount() {
      return playerIds_.size();
    }
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    public java.lang.String getPlayerIds(int index) {
      return playerIds_.get(index);
    }
    /**
     * <code>repeated string playerIds = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdsBytes(int index) {
      return playerIds_.getByteString(index);
    }

    // repeated .Card playerCards = 4;
    public static final int PLAYERCARDS_FIELD_NUMBER = 4;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> playerCards_;
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getPlayerCardsList() {
      return playerCards_;
    }
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getPlayerCardsOrBuilderList() {
      return playerCards_;
    }
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    public int getPlayerCardsCount() {
      return playerCards_.size();
    }
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getPlayerCards(int index) {
      return playerCards_.get(index);
    }
    /**
     * <code>repeated .Card playerCards = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getPlayerCardsOrBuilder(
        int index) {
      return playerCards_.get(index);
    }

    private void initFields() {
      dealerId_ = "";
      dealerCard_ = com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance();
      playerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      playerCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDealerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDealerCard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getDealerCard().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayerCardsCount(); i++) {
        if (!getPlayerCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, dealerCard_);
      }
      for (int i = 0; i < playerIds_.size(); i++) {
        output.writeBytes(3, playerIds_.getByteString(i));
      }
      for (int i = 0; i < playerCards_.size(); i++) {
        output.writeMessage(4, playerCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dealerCard_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < playerIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(playerIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPlayerIdsList().size();
      }
      for (int i = 0; i < playerCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, playerCards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DealerEvent}
     *
     * <pre>
     *[[[userid, card]*], ['dealer', card]]
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.DealerEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_DealerEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_DealerEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDealerCardFieldBuilder();
          getPlayerCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        dealerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dealerCardBuilder_ == null) {
          dealerCard_ = com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance();
        } else {
          dealerCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        playerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playerCardsBuilder_ == null) {
          playerCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playerCardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_DealerEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dealerId_ = dealerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (dealerCardBuilder_ == null) {
          result.dealerCard_ = dealerCard_;
        } else {
          result.dealerCard_ = dealerCardBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          playerIds_ = new com.google.protobuf.UnmodifiableLazyStringList(
              playerIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.playerIds_ = playerIds_;
        if (playerCardsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            playerCards_ = java.util.Collections.unmodifiableList(playerCards_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.playerCards_ = playerCards_;
        } else {
          result.playerCards_ = playerCardsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent.getDefaultInstance()) return this;
        if (other.hasDealerId()) {
          bitField0_ |= 0x00000001;
          dealerId_ = other.dealerId_;
          onChanged();
        }
        if (other.hasDealerCard()) {
          mergeDealerCard(other.getDealerCard());
        }
        if (!other.playerIds_.isEmpty()) {
          if (playerIds_.isEmpty()) {
            playerIds_ = other.playerIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePlayerIdsIsMutable();
            playerIds_.addAll(other.playerIds_);
          }
          onChanged();
        }
        if (playerCardsBuilder_ == null) {
          if (!other.playerCards_.isEmpty()) {
            if (playerCards_.isEmpty()) {
              playerCards_ = other.playerCards_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayerCardsIsMutable();
              playerCards_.addAll(other.playerCards_);
            }
            onChanged();
          }
        } else {
          if (!other.playerCards_.isEmpty()) {
            if (playerCardsBuilder_.isEmpty()) {
              playerCardsBuilder_.dispose();
              playerCardsBuilder_ = null;
              playerCards_ = other.playerCards_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playerCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerCardsFieldBuilder() : null;
            } else {
              playerCardsBuilder_.addAllMessages(other.playerCards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDealerId()) {
          
          return false;
        }
        if (!hasDealerCard()) {
          
          return false;
        }
        if (!getDealerCard().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPlayerCardsCount(); i++) {
          if (!getPlayerCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.DealerEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string dealerId = 1;
      private java.lang.Object dealerId_ = "";
      /**
       * <code>required string dealerId = 1;</code>
       */
      public boolean hasDealerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string dealerId = 1;</code>
       */
      public java.lang.String getDealerId() {
        java.lang.Object ref = dealerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dealerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dealerId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDealerIdBytes() {
        java.lang.Object ref = dealerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dealerId = 1;</code>
       */
      public Builder setDealerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dealerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dealerId = 1;</code>
       */
      public Builder clearDealerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dealerId_ = getDefaultInstance().getDealerId();
        onChanged();
        return this;
      }
      /**
       * <code>required string dealerId = 1;</code>
       */
      public Builder setDealerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dealerId_ = value;
        onChanged();
        return this;
      }

      // required .Card dealerCard = 2;
      private com.mrmq.poker.common.proto.PokerModelProto.Card dealerCard_ = com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> dealerCardBuilder_;
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public boolean hasDealerCard() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getDealerCard() {
        if (dealerCardBuilder_ == null) {
          return dealerCard_;
        } else {
          return dealerCardBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public Builder setDealerCard(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (dealerCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dealerCard_ = value;
          onChanged();
        } else {
          dealerCardBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public Builder setDealerCard(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (dealerCardBuilder_ == null) {
          dealerCard_ = builderForValue.build();
          onChanged();
        } else {
          dealerCardBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public Builder mergeDealerCard(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (dealerCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              dealerCard_ != com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance()) {
            dealerCard_ =
              com.mrmq.poker.common.proto.PokerModelProto.Card.newBuilder(dealerCard_).mergeFrom(value).buildPartial();
          } else {
            dealerCard_ = value;
          }
          onChanged();
        } else {
          dealerCardBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public Builder clearDealerCard() {
        if (dealerCardBuilder_ == null) {
          dealerCard_ = com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance();
          onChanged();
        } else {
          dealerCardBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getDealerCardBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDealerCardFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getDealerCardOrBuilder() {
        if (dealerCardBuilder_ != null) {
          return dealerCardBuilder_.getMessageOrBuilder();
        } else {
          return dealerCard_;
        }
      }
      /**
       * <code>required .Card dealerCard = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getDealerCardFieldBuilder() {
        if (dealerCardBuilder_ == null) {
          dealerCardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  dealerCard_,
                  getParentForChildren(),
                  isClean());
          dealerCard_ = null;
        }
        return dealerCardBuilder_;
      }

      // repeated string playerIds = 3;
      private com.google.protobuf.LazyStringList playerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePlayerIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          playerIds_ = new com.google.protobuf.LazyStringArrayList(playerIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public java.util.List<java.lang.String>
          getPlayerIdsList() {
        return java.util.Collections.unmodifiableList(playerIds_);
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public int getPlayerIdsCount() {
        return playerIds_.size();
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public java.lang.String getPlayerIds(int index) {
        return playerIds_.get(index);
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdsBytes(int index) {
        return playerIds_.getByteString(index);
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public Builder setPlayerIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayerIdsIsMutable();
        playerIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public Builder addPlayerIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayerIdsIsMutable();
        playerIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public Builder addAllPlayerIds(
          java.lang.Iterable<java.lang.String> values) {
        ensurePlayerIdsIsMutable();
        super.addAll(values, playerIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public Builder clearPlayerIds() {
        playerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string playerIds = 3;</code>
       */
      public Builder addPlayerIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayerIdsIsMutable();
        playerIds_.add(value);
        onChanged();
        return this;
      }

      // repeated .Card playerCards = 4;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> playerCards_ =
        java.util.Collections.emptyList();
      private void ensurePlayerCardsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          playerCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(playerCards_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> playerCardsBuilder_;

      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getPlayerCardsList() {
        if (playerCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerCards_);
        } else {
          return playerCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public int getPlayerCardsCount() {
        if (playerCardsBuilder_ == null) {
          return playerCards_.size();
        } else {
          return playerCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getPlayerCards(int index) {
        if (playerCardsBuilder_ == null) {
          return playerCards_.get(index);
        } else {
          return playerCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder setPlayerCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (playerCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardsIsMutable();
          playerCards_.set(index, value);
          onChanged();
        } else {
          playerCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder setPlayerCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (playerCardsBuilder_ == null) {
          ensurePlayerCardsIsMutable();
          playerCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder addPlayerCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (playerCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardsIsMutable();
          playerCards_.add(value);
          onChanged();
        } else {
          playerCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder addPlayerCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (playerCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerCardsIsMutable();
          playerCards_.add(index, value);
          onChanged();
        } else {
          playerCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder addPlayerCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (playerCardsBuilder_ == null) {
          ensurePlayerCardsIsMutable();
          playerCards_.add(builderForValue.build());
          onChanged();
        } else {
          playerCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder addPlayerCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (playerCardsBuilder_ == null) {
          ensurePlayerCardsIsMutable();
          playerCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder addAllPlayerCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (playerCardsBuilder_ == null) {
          ensurePlayerCardsIsMutable();
          super.addAll(values, playerCards_);
          onChanged();
        } else {
          playerCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder clearPlayerCards() {
        if (playerCardsBuilder_ == null) {
          playerCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playerCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public Builder removePlayerCards(int index) {
        if (playerCardsBuilder_ == null) {
          ensurePlayerCardsIsMutable();
          playerCards_.remove(index);
          onChanged();
        } else {
          playerCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getPlayerCardsBuilder(
          int index) {
        return getPlayerCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getPlayerCardsOrBuilder(
          int index) {
        if (playerCardsBuilder_ == null) {
          return playerCards_.get(index);  } else {
          return playerCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getPlayerCardsOrBuilderList() {
        if (playerCardsBuilder_ != null) {
          return playerCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerCards_);
        }
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addPlayerCardsBuilder() {
        return getPlayerCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addPlayerCardsBuilder(
          int index) {
        return getPlayerCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card playerCards = 4;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getPlayerCardsBuilderList() {
        return getPlayerCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getPlayerCardsFieldBuilder() {
        if (playerCardsBuilder_ == null) {
          playerCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  playerCards_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          playerCards_ = null;
        }
        return playerCardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DealerEvent)
    }

    static {
      defaultInstance = new DealerEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DealerEvent)
  }

  public interface OutOfMoneyEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string msg = 1;
    /**
     * <code>required string msg = 1;</code>
     */
    boolean hasMsg();
    /**
     * <code>required string msg = 1;</code>
     */
    java.lang.String getMsg();
    /**
     * <code>required string msg = 1;</code>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    // required int64 amount = 2;
    /**
     * <code>required int64 amount = 2;</code>
     */
    boolean hasAmount();
    /**
     * <code>required int64 amount = 2;</code>
     */
    long getAmount();

    // required int64 remainAmount = 3;
    /**
     * <code>required int64 remainAmount = 3;</code>
     */
    boolean hasRemainAmount();
    /**
     * <code>required int64 remainAmount = 3;</code>
     */
    long getRemainAmount();

    // required int64 minAmount = 4;
    /**
     * <code>required int64 minAmount = 4;</code>
     */
    boolean hasMinAmount();
    /**
     * <code>required int64 minAmount = 4;</code>
     */
    long getMinAmount();

    // required int64 maxAmount = 5;
    /**
     * <code>required int64 maxAmount = 5;</code>
     */
    boolean hasMaxAmount();
    /**
     * <code>required int64 maxAmount = 5;</code>
     */
    long getMaxAmount();
  }
  /**
   * Protobuf type {@code OutOfMoneyEvent}
   *
   * <pre>
   *[msg,hatde,hatdeconlai,minmoney,maxmoney]
   * </pre>
   */
  public static final class OutOfMoneyEvent extends
      com.google.protobuf.GeneratedMessage
      implements OutOfMoneyEventOrBuilder {
    // Use OutOfMoneyEvent.newBuilder() to construct.
    private OutOfMoneyEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OutOfMoneyEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OutOfMoneyEvent defaultInstance;
    public static OutOfMoneyEvent getDefaultInstance() {
      return defaultInstance;
    }

    public OutOfMoneyEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OutOfMoneyEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msg_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              amount_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              remainAmount_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              minAmount_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxAmount_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_OutOfMoneyEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_OutOfMoneyEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<OutOfMoneyEvent> PARSER =
        new com.google.protobuf.AbstractParser<OutOfMoneyEvent>() {
      public OutOfMoneyEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutOfMoneyEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OutOfMoneyEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string msg = 1;
    public static final int MSG_FIELD_NUMBER = 1;
    private java.lang.Object msg_;
    /**
     * <code>required string msg = 1;</code>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string msg = 1;</code>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string msg = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int64 amount = 2;
    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <code>required int64 amount = 2;</code>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 amount = 2;</code>
     */
    public long getAmount() {
      return amount_;
    }

    // required int64 remainAmount = 3;
    public static final int REMAINAMOUNT_FIELD_NUMBER = 3;
    private long remainAmount_;
    /**
     * <code>required int64 remainAmount = 3;</code>
     */
    public boolean hasRemainAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 remainAmount = 3;</code>
     */
    public long getRemainAmount() {
      return remainAmount_;
    }

    // required int64 minAmount = 4;
    public static final int MINAMOUNT_FIELD_NUMBER = 4;
    private long minAmount_;
    /**
     * <code>required int64 minAmount = 4;</code>
     */
    public boolean hasMinAmount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 minAmount = 4;</code>
     */
    public long getMinAmount() {
      return minAmount_;
    }

    // required int64 maxAmount = 5;
    public static final int MAXAMOUNT_FIELD_NUMBER = 5;
    private long maxAmount_;
    /**
     * <code>required int64 maxAmount = 5;</code>
     */
    public boolean hasMaxAmount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 maxAmount = 5;</code>
     */
    public long getMaxAmount() {
      return maxAmount_;
    }

    private void initFields() {
      msg_ = "";
      amount_ = 0L;
      remainAmount_ = 0L;
      minAmount_ = 0L;
      maxAmount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMsg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRemainAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, amount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, remainAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, minAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, maxAmount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, amount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, remainAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, minAmount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, maxAmount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OutOfMoneyEvent}
     *
     * <pre>
     *[msg,hatde,hatdeconlai,minmoney,maxmoney]
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_OutOfMoneyEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_OutOfMoneyEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.class, com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        remainAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        minAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.internal_static_OutOfMoneyEvent_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent build() {
        com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent buildPartial() {
        com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent result = new com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remainAmount_ = remainAmount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minAmount_ = minAmount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxAmount_ = maxAmount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent other) {
        if (other == com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent.getDefaultInstance()) return this;
        if (other.hasMsg()) {
          bitField0_ |= 0x00000001;
          msg_ = other.msg_;
          onChanged();
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasRemainAmount()) {
          setRemainAmount(other.getRemainAmount());
        }
        if (other.hasMinAmount()) {
          setMinAmount(other.getMinAmount());
        }
        if (other.hasMaxAmount()) {
          setMaxAmount(other.getMaxAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMsg()) {
          
          return false;
        }
        if (!hasAmount()) {
          
          return false;
        }
        if (!hasRemainAmount()) {
          
          return false;
        }
        if (!hasMinAmount()) {
          
          return false;
        }
        if (!hasMaxAmount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerServiceProto.OutOfMoneyEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string msg = 1;
      private java.lang.Object msg_ = "";
      /**
       * <code>required string msg = 1;</code>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string msg = 1;</code>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string msg = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string msg = 1;</code>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 1;</code>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>required string msg = 1;</code>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msg_ = value;
        onChanged();
        return this;
      }

      // required int64 amount = 2;
      private long amount_ ;
      /**
       * <code>required int64 amount = 2;</code>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 amount = 2;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>required int64 amount = 2;</code>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000002;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 amount = 2;</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 remainAmount = 3;
      private long remainAmount_ ;
      /**
       * <code>required int64 remainAmount = 3;</code>
       */
      public boolean hasRemainAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 remainAmount = 3;</code>
       */
      public long getRemainAmount() {
        return remainAmount_;
      }
      /**
       * <code>required int64 remainAmount = 3;</code>
       */
      public Builder setRemainAmount(long value) {
        bitField0_ |= 0x00000004;
        remainAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 remainAmount = 3;</code>
       */
      public Builder clearRemainAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        remainAmount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 minAmount = 4;
      private long minAmount_ ;
      /**
       * <code>required int64 minAmount = 4;</code>
       */
      public boolean hasMinAmount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 minAmount = 4;</code>
       */
      public long getMinAmount() {
        return minAmount_;
      }
      /**
       * <code>required int64 minAmount = 4;</code>
       */
      public Builder setMinAmount(long value) {
        bitField0_ |= 0x00000008;
        minAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 minAmount = 4;</code>
       */
      public Builder clearMinAmount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minAmount_ = 0L;
        onChanged();
        return this;
      }

      // required int64 maxAmount = 5;
      private long maxAmount_ ;
      /**
       * <code>required int64 maxAmount = 5;</code>
       */
      public boolean hasMaxAmount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 maxAmount = 5;</code>
       */
      public long getMaxAmount() {
        return maxAmount_;
      }
      /**
       * <code>required int64 maxAmount = 5;</code>
       */
      public Builder setMaxAmount(long value) {
        bitField0_ |= 0x00000010;
        maxAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 maxAmount = 5;</code>
       */
      public Builder clearMaxAmount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxAmount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OutOfMoneyEvent)
    }

    static {
      defaultInstance = new OutOfMoneyEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:OutOfMoneyEvent)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoomRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoomRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RoomResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RoomResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TableRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TableRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TableResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TableResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_JoinTableRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_JoinTableRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_JoinTableResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_JoinTableResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_JoinTableEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_JoinTableEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LeaveTableEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LeaveTableEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerAction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerAction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerActionRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerActionRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerActionResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerActionResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerActionEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerActionEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StartGameEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StartGameEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_NewRoundEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_NewRoundEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EndGameEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EndGameEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AllInEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AllInEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DealerEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DealerEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_OutOfMoneyEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_OutOfMoneyEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023poker_service.proto\032\021poker_model.proto" +
      "\"\035\n\013RoomRequest\022\016\n\006hallId\030\001 \002(\t\"4\n\014RoomR" +
      "esponse\022\016\n\006hallId\030\001 \002(\t\022\024\n\005rooms\030\002 \003(\0132\005" +
      ".Room\"\036\n\014TableRequest\022\016\n\006roomId\030\001 \002(\t\"7\n" +
      "\rTableResponse\022\016\n\006roomId\030\001 \002(\t\022\026\n\006tables" +
      "\030\002 \003(\0132\006.Table\"_\n\020JoinTableRequest\022\017\n\007ta" +
      "bleId\030\001 \002(\t\022 \n\010joinType\030\002 \002(\0162\016.JoinTabl" +
      "eType\022\030\n\020selectedPosition\030\003 \002(\005\"\357\001\n\021Join" +
      "TableResponse\022\035\n\troundType\030\001 \001(\0162\n.Round" +
      "Type\022\035\n\ttableRule\030\002 \001(\0132\n.TableRule\022\030\n\007p",
      "layers\030\004 \003(\0132\007.Player\022\016\n\006curbet\030\005 \001(\003\022\023\n" +
      "\013curPlayerId\030\006 \001(\t\022\032\n\013centerCards\030\007 \003(\0132" +
      "\005.Card\022\020\n\010dealerId\030\010 \001(\t\022\022\n\nremainTime\030\t" +
      " \001(\005\022\033\n\014historyCards\030\013 \003(\0132\005.Card\"K\n\016Joi" +
      "nTableEvent\022 \n\010joinType\030\002 \002(\0162\016.JoinTabl" +
      "eType\022\027\n\006player\030\004 \002(\0132\007.Player\"\225\001\n\017Leave" +
      "TableEvent\022\035\n\troundType\030\001 \001(\0162\n.RoundTyp" +
      "e\022\035\n\007inRound\030\002 \001(\0162\014.PlayerState\022\023\n\013user" +
      "LeaveId\030\003 \001(\t\022\022\n\nnextPlayer\030\004 \001(\t\022\016\n\006rea" +
      "son\030\005 \001(\t\022\013\n\003msg\030\006 \001(\t\"Q\n\014PlayerAction\022\020",
      "\n\010playerId\030\001 \002(\t\022\037\n\nactionType\030\002 \002(\0162\013.A" +
      "ctionType\022\016\n\006amount\030\003 \001(\003\"E\n\023PlayerActio" +
      "nRequest\022\017\n\007tableId\030\001 \002(\t\022\035\n\006action\030\002 \002(" +
      "\0132\r.PlayerAction\"\315\001\n\024PlayerActionRespons" +
      "e\022\035\n\troundType\030\001 \001(\0162\n.RoundType\022\037\n\nacti" +
      "onType\030\n \002(\0162\013.ActionType\022\024\n\014remainAmoun" +
      "t\030\013 \002(\003\022\023\n\013raiseAmount\030\014 \002(\003\022\030\n\020totalRai" +
      "seAmount\030\r \002(\003\022\032\n\013centerChips\030\024 \003(\0132\005.Ch" +
      "ip\022\024\n\014nextPlayerId\030\025 \001(\t\"\334\001\n\021PlayerActio" +
      "nEvent\022\035\n\troundType\030\001 \001(\0162\n.RoundType\022\020\n",
      "\010playerId\030\t \002(\t\022\037\n\nactionType\030\n \002(\0162\013.Ac" +
      "tionType\022\024\n\014remainAmount\030\013 \002(\003\022\023\n\013raiseA" +
      "mount\030\014 \002(\003\022\030\n\020totalRaiseAmount\030\r \002(\003\022\032\n" +
      "\013centerChips\030\024 \003(\0132\005.Chip\022\024\n\014nextPlayerI" +
      "d\030\025 \001(\t\"\233\001\n\016StartGameEvent\022\035\n\troundType\030" +
      "\001 \002(\0162\n.RoundType\022\020\n\010dealerId\030\002 \002(\t\022\024\n\014s" +
      "mallBlindId\030\003 \002(\t\022\022\n\nbigBlindId\030\004 \002(\t\022\030\n" +
      "\007players\030\005 \003(\0132\007.Player\022\024\n\014nextPlayerId\030" +
      "\006 \002(\t\"\226\001\n\rNewRoundEvent\022\035\n\troundType\030\001 \002" +
      "(\0162\n.RoundType\022\032\n\013centerChips\030\002 \003(\0132\005.Ch",
      "ip\022\027\n\010addCards\030\003 \003(\0132\005.Card\022\032\n\006myRank\030\004 " +
      "\002(\0162\n.HandValue\022\025\n\rfirstPlayerId\030\005 \002(\t\"\200" +
      "\001\n\014EndGameEvent\022\035\n\troundType\030\001 \002(\0162\n.Rou" +
      "ndType\022\032\n\013centerChips\030\002 \003(\0132\005.Chip\022\033\n\014hi" +
      "storyCards\030\003 \003(\0132\005.Card\022\030\n\007players\030\004 \003(\013" +
      "2\007.Player\"&\n\nAllInEvent\022\030\n\007players\030\001 \003(\013" +
      "2\007.Player\"i\n\013DealerEvent\022\020\n\010dealerId\030\001 \002" +
      "(\t\022\031\n\ndealerCard\030\002 \002(\0132\005.Card\022\021\n\tplayerI" +
      "ds\030\003 \003(\t\022\032\n\013playerCards\030\004 \003(\0132\005.Card\"j\n\017" +
      "OutOfMoneyEvent\022\013\n\003msg\030\001 \002(\t\022\016\n\006amount\030\002",
      " \002(\003\022\024\n\014remainAmount\030\003 \002(\003\022\021\n\tminAmount\030" +
      "\004 \002(\003\022\021\n\tmaxAmount\030\005 \002(\003*<\n\rJoinTableTyp" +
      "e\022\010\n\004PLAY\020\001\022\010\n\004VIEW\020\002\022\014\n\010STAND_UP\020\003\022\t\n\005L" +
      "EAVE\020\004B0\n\033com.mrmq.poker.common.protoB\021P" +
      "okerServiceProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RoomRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RoomRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoomRequest_descriptor,
              new java.lang.String[] { "HallId", });
          internal_static_RoomResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_RoomResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RoomResponse_descriptor,
              new java.lang.String[] { "HallId", "Rooms", });
          internal_static_TableRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_TableRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TableRequest_descriptor,
              new java.lang.String[] { "RoomId", });
          internal_static_TableResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_TableResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TableResponse_descriptor,
              new java.lang.String[] { "RoomId", "Tables", });
          internal_static_JoinTableRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_JoinTableRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_JoinTableRequest_descriptor,
              new java.lang.String[] { "TableId", "JoinType", "SelectedPosition", });
          internal_static_JoinTableResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_JoinTableResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_JoinTableResponse_descriptor,
              new java.lang.String[] { "RoundType", "TableRule", "Players", "Curbet", "CurPlayerId", "CenterCards", "DealerId", "RemainTime", "HistoryCards", });
          internal_static_JoinTableEvent_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_JoinTableEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_JoinTableEvent_descriptor,
              new java.lang.String[] { "JoinType", "Player", });
          internal_static_LeaveTableEvent_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_LeaveTableEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LeaveTableEvent_descriptor,
              new java.lang.String[] { "RoundType", "InRound", "UserLeaveId", "NextPlayer", "Reason", "Msg", });
          internal_static_PlayerAction_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_PlayerAction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerAction_descriptor,
              new java.lang.String[] { "PlayerId", "ActionType", "Amount", });
          internal_static_PlayerActionRequest_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_PlayerActionRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerActionRequest_descriptor,
              new java.lang.String[] { "TableId", "Action", });
          internal_static_PlayerActionResponse_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_PlayerActionResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerActionResponse_descriptor,
              new java.lang.String[] { "RoundType", "ActionType", "RemainAmount", "RaiseAmount", "TotalRaiseAmount", "CenterChips", "NextPlayerId", });
          internal_static_PlayerActionEvent_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_PlayerActionEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PlayerActionEvent_descriptor,
              new java.lang.String[] { "RoundType", "PlayerId", "ActionType", "RemainAmount", "RaiseAmount", "TotalRaiseAmount", "CenterChips", "NextPlayerId", });
          internal_static_StartGameEvent_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_StartGameEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StartGameEvent_descriptor,
              new java.lang.String[] { "RoundType", "DealerId", "SmallBlindId", "BigBlindId", "Players", "NextPlayerId", });
          internal_static_NewRoundEvent_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_NewRoundEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_NewRoundEvent_descriptor,
              new java.lang.String[] { "RoundType", "CenterChips", "AddCards", "MyRank", "FirstPlayerId", });
          internal_static_EndGameEvent_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_EndGameEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EndGameEvent_descriptor,
              new java.lang.String[] { "RoundType", "CenterChips", "HistoryCards", "Players", });
          internal_static_AllInEvent_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_AllInEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AllInEvent_descriptor,
              new java.lang.String[] { "Players", });
          internal_static_DealerEvent_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_DealerEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DealerEvent_descriptor,
              new java.lang.String[] { "DealerId", "DealerCard", "PlayerIds", "PlayerCards", });
          internal_static_OutOfMoneyEvent_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_OutOfMoneyEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_OutOfMoneyEvent_descriptor,
              new java.lang.String[] { "Msg", "Amount", "RemainAmount", "MinAmount", "MaxAmount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.mrmq.poker.common.proto.PokerModelProto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
