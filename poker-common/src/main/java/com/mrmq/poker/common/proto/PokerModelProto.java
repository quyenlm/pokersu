// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: poker_model.proto

package com.mrmq.poker.common.proto;

public final class PokerModelProto {
  private PokerModelProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code RoundType}
   */
  public enum RoundType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SMALL_BLIND = 1;</code>
     */
    SMALL_BLIND(0, 1),
    /**
     * <code>BIG_BLIND = 2;</code>
     */
    BIG_BLIND(1, 2),
    /**
     * <code>PRE_FLOP = 3;</code>
     *
     * <pre>
     * Vòng Bet khi chưa mở lá Community Cards nào.
     * </pre>
     */
    PRE_FLOP(2, 3),
    /**
     * <code>FLOP = 4;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 3 lá.
     * </pre>
     */
    FLOP(3, 4),
    /**
     * <code>TURN = 5;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 4 lá.
     * </pre>
     */
    TURN(4, 5),
    /**
     * <code>RIVER = 6;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 5 lá.
     * </pre>
     */
    RIVER(5, 6),
    /**
     * <code>SHOW_DOWN = 7;</code>
     *
     * <pre>
     * Vòng so bài.
     * </pre>
     */
    SHOW_DOWN(6, 7),
    /**
     * <code>SMALL_BLIND_END = 11;</code>
     */
    SMALL_BLIND_END(7, 11),
    /**
     * <code>BIG_BLIND_END = 12;</code>
     */
    BIG_BLIND_END(8, 12),
    /**
     * <code>PRE_FLOP_END = 13;</code>
     *
     * <pre>
     * Vòng Bet khi chưa mở lá Community Cards nào.
     * </pre>
     */
    PRE_FLOP_END(9, 13),
    /**
     * <code>FLOP_END = 14;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 3 lá.
     * </pre>
     */
    FLOP_END(10, 14),
    /**
     * <code>TURN_END = 15;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 4 lá.
     * </pre>
     */
    TURN_END(11, 15),
    /**
     * <code>RIVER_END = 16;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 5 lá.
     * </pre>
     */
    RIVER_END(12, 16),
    /**
     * <code>SHOW_DOWN_END = 17;</code>
     *
     * <pre>
     * Vòng so bài.
     * </pre>
     */
    SHOW_DOWN_END(13, 17),
    /**
     * <code>WAITTING = 18;</code>
     */
    WAITTING(14, 18),
    ;

    /**
     * <code>SMALL_BLIND = 1;</code>
     */
    public static final int SMALL_BLIND_VALUE = 1;
    /**
     * <code>BIG_BLIND = 2;</code>
     */
    public static final int BIG_BLIND_VALUE = 2;
    /**
     * <code>PRE_FLOP = 3;</code>
     *
     * <pre>
     * Vòng Bet khi chưa mở lá Community Cards nào.
     * </pre>
     */
    public static final int PRE_FLOP_VALUE = 3;
    /**
     * <code>FLOP = 4;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 3 lá.
     * </pre>
     */
    public static final int FLOP_VALUE = 4;
    /**
     * <code>TURN = 5;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 4 lá.
     * </pre>
     */
    public static final int TURN_VALUE = 5;
    /**
     * <code>RIVER = 6;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 5 lá.
     * </pre>
     */
    public static final int RIVER_VALUE = 6;
    /**
     * <code>SHOW_DOWN = 7;</code>
     *
     * <pre>
     * Vòng so bài.
     * </pre>
     */
    public static final int SHOW_DOWN_VALUE = 7;
    /**
     * <code>SMALL_BLIND_END = 11;</code>
     */
    public static final int SMALL_BLIND_END_VALUE = 11;
    /**
     * <code>BIG_BLIND_END = 12;</code>
     */
    public static final int BIG_BLIND_END_VALUE = 12;
    /**
     * <code>PRE_FLOP_END = 13;</code>
     *
     * <pre>
     * Vòng Bet khi chưa mở lá Community Cards nào.
     * </pre>
     */
    public static final int PRE_FLOP_END_VALUE = 13;
    /**
     * <code>FLOP_END = 14;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 3 lá.
     * </pre>
     */
    public static final int FLOP_END_VALUE = 14;
    /**
     * <code>TURN_END = 15;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 4 lá.
     * </pre>
     */
    public static final int TURN_END_VALUE = 15;
    /**
     * <code>RIVER_END = 16;</code>
     *
     * <pre>
     * Vòng Bet khi đã mở 5 lá.
     * </pre>
     */
    public static final int RIVER_END_VALUE = 16;
    /**
     * <code>SHOW_DOWN_END = 17;</code>
     *
     * <pre>
     * Vòng so bài.
     * </pre>
     */
    public static final int SHOW_DOWN_END_VALUE = 17;
    /**
     * <code>WAITTING = 18;</code>
     */
    public static final int WAITTING_VALUE = 18;


    public final int getNumber() { return value; }

    public static RoundType valueOf(int value) {
      switch (value) {
        case 1: return SMALL_BLIND;
        case 2: return BIG_BLIND;
        case 3: return PRE_FLOP;
        case 4: return FLOP;
        case 5: return TURN;
        case 6: return RIVER;
        case 7: return SHOW_DOWN;
        case 11: return SMALL_BLIND_END;
        case 12: return BIG_BLIND_END;
        case 13: return PRE_FLOP_END;
        case 14: return FLOP_END;
        case 15: return TURN_END;
        case 16: return RIVER_END;
        case 17: return SHOW_DOWN_END;
        case 18: return WAITTING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoundType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RoundType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoundType>() {
            public RoundType findValueByNumber(int number) {
              return RoundType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final RoundType[] VALUES = values();

    public static RoundType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RoundType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RoundType)
  }

  /**
   * Protobuf enum {@code ActionType}
   */
  public enum ActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHECK = 1;</code>
     *
     * <pre>
     *Xem
     * </pre>
     */
    CHECK(0, 1),
    /**
     * <code>BET = 2;</code>
     *
     * <pre>
     *Cuoc
     * </pre>
     */
    BET(1, 2),
    /**
     * <code>RAISE = 3;</code>
     *
     * <pre>
     *Nang cuoc
     * </pre>
     */
    RAISE(2, 3),
    /**
     * <code>CALL = 4;</code>
     *
     * <pre>
     *Theo
     * </pre>
     */
    CALL(3, 4),
    /**
     * <code>FOLD = 5;</code>
     *
     * <pre>
     *Bỏ bài
     * </pre>
     */
    FOLD(4, 5),
    /**
     * <code>ALL_IN = 6;</code>
     *
     * <pre>
     *Tat tay
     * </pre>
     */
    ALL_IN(5, 6),
    /**
     * <code>POST_BIG_BLIND = 7;</code>
     */
    POST_BIG_BLIND(6, 7),
    /**
     * <code>CONTINUE = 8;</code>
     */
    CONTINUE(7, 8),
    /**
     * <code>POST_SMALL_BLIND = 9;</code>
     */
    POST_SMALL_BLIND(8, 9),
    ;

    /**
     * <code>CHECK = 1;</code>
     *
     * <pre>
     *Xem
     * </pre>
     */
    public static final int CHECK_VALUE = 1;
    /**
     * <code>BET = 2;</code>
     *
     * <pre>
     *Cuoc
     * </pre>
     */
    public static final int BET_VALUE = 2;
    /**
     * <code>RAISE = 3;</code>
     *
     * <pre>
     *Nang cuoc
     * </pre>
     */
    public static final int RAISE_VALUE = 3;
    /**
     * <code>CALL = 4;</code>
     *
     * <pre>
     *Theo
     * </pre>
     */
    public static final int CALL_VALUE = 4;
    /**
     * <code>FOLD = 5;</code>
     *
     * <pre>
     *Bỏ bài
     * </pre>
     */
    public static final int FOLD_VALUE = 5;
    /**
     * <code>ALL_IN = 6;</code>
     *
     * <pre>
     *Tat tay
     * </pre>
     */
    public static final int ALL_IN_VALUE = 6;
    /**
     * <code>POST_BIG_BLIND = 7;</code>
     */
    public static final int POST_BIG_BLIND_VALUE = 7;
    /**
     * <code>CONTINUE = 8;</code>
     */
    public static final int CONTINUE_VALUE = 8;
    /**
     * <code>POST_SMALL_BLIND = 9;</code>
     */
    public static final int POST_SMALL_BLIND_VALUE = 9;


    public final int getNumber() { return value; }

    public static ActionType valueOf(int value) {
      switch (value) {
        case 1: return CHECK;
        case 2: return BET;
        case 3: return RAISE;
        case 4: return CALL;
        case 5: return FOLD;
        case 6: return ALL_IN;
        case 7: return POST_BIG_BLIND;
        case 8: return CONTINUE;
        case 9: return POST_SMALL_BLIND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActionType>() {
            public ActionType findValueByNumber(int number) {
              return ActionType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final ActionType[] VALUES = values();

    public static ActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ActionType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ActionType)
  }

  /**
   * Protobuf enum {@code PlayerState}
   */
  public enum PlayerState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PLAYER_VIEWING = 0;</code>
     */
    PLAYER_VIEWING(0, 0),
    /**
     * <code>PLAYER_WAITTING = 1;</code>
     */
    PLAYER_WAITTING(1, 1),
    /**
     * <code>PLAYER_PLAYING = 2;</code>
     */
    PLAYER_PLAYING(2, 2),
    /**
     * <code>PLAYER_FOLDED = 3;</code>
     */
    PLAYER_FOLDED(3, 3),
    ;

    /**
     * <code>PLAYER_VIEWING = 0;</code>
     */
    public static final int PLAYER_VIEWING_VALUE = 0;
    /**
     * <code>PLAYER_WAITTING = 1;</code>
     */
    public static final int PLAYER_WAITTING_VALUE = 1;
    /**
     * <code>PLAYER_PLAYING = 2;</code>
     */
    public static final int PLAYER_PLAYING_VALUE = 2;
    /**
     * <code>PLAYER_FOLDED = 3;</code>
     */
    public static final int PLAYER_FOLDED_VALUE = 3;


    public final int getNumber() { return value; }

    public static PlayerState valueOf(int value) {
      switch (value) {
        case 0: return PLAYER_VIEWING;
        case 1: return PLAYER_WAITTING;
        case 2: return PLAYER_PLAYING;
        case 3: return PLAYER_FOLDED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlayerState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PlayerState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlayerState>() {
            public PlayerState findValueByNumber(int number) {
              return PlayerState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final PlayerState[] VALUES = values();

    public static PlayerState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PlayerState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PlayerState)
  }

  /**
   * Protobuf enum {@code HandValue}
   */
  public enum HandValue
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ROYAL_FLUSH = 9;</code>
     */
    ROYAL_FLUSH(0, 9),
    /**
     * <code>STRAIGHT_FLUSH = 8;</code>
     */
    STRAIGHT_FLUSH(1, 8),
    /**
     * <code>FOUR_OF_A_KIND = 7;</code>
     */
    FOUR_OF_A_KIND(2, 7),
    /**
     * <code>FULL_HOUSE = 6;</code>
     */
    FULL_HOUSE(3, 6),
    /**
     * <code>FLUSH = 5;</code>
     */
    FLUSH(4, 5),
    /**
     * <code>STRAIGHT = 4;</code>
     */
    STRAIGHT(5, 4),
    /**
     * <code>THREE_OF_A_KIND = 3;</code>
     */
    THREE_OF_A_KIND(6, 3),
    /**
     * <code>TWO_PAIRS = 2;</code>
     */
    TWO_PAIRS(7, 2),
    /**
     * <code>ONE_PAIR = 1;</code>
     */
    ONE_PAIR(8, 1),
    /**
     * <code>HIGH_CARD = 0;</code>
     */
    HIGH_CARD(9, 0),
    ;

    /**
     * <code>ROYAL_FLUSH = 9;</code>
     */
    public static final int ROYAL_FLUSH_VALUE = 9;
    /**
     * <code>STRAIGHT_FLUSH = 8;</code>
     */
    public static final int STRAIGHT_FLUSH_VALUE = 8;
    /**
     * <code>FOUR_OF_A_KIND = 7;</code>
     */
    public static final int FOUR_OF_A_KIND_VALUE = 7;
    /**
     * <code>FULL_HOUSE = 6;</code>
     */
    public static final int FULL_HOUSE_VALUE = 6;
    /**
     * <code>FLUSH = 5;</code>
     */
    public static final int FLUSH_VALUE = 5;
    /**
     * <code>STRAIGHT = 4;</code>
     */
    public static final int STRAIGHT_VALUE = 4;
    /**
     * <code>THREE_OF_A_KIND = 3;</code>
     */
    public static final int THREE_OF_A_KIND_VALUE = 3;
    /**
     * <code>TWO_PAIRS = 2;</code>
     */
    public static final int TWO_PAIRS_VALUE = 2;
    /**
     * <code>ONE_PAIR = 1;</code>
     */
    public static final int ONE_PAIR_VALUE = 1;
    /**
     * <code>HIGH_CARD = 0;</code>
     */
    public static final int HIGH_CARD_VALUE = 0;


    public final int getNumber() { return value; }

    public static HandValue valueOf(int value) {
      switch (value) {
        case 9: return ROYAL_FLUSH;
        case 8: return STRAIGHT_FLUSH;
        case 7: return FOUR_OF_A_KIND;
        case 6: return FULL_HOUSE;
        case 5: return FLUSH;
        case 4: return STRAIGHT;
        case 3: return THREE_OF_A_KIND;
        case 2: return TWO_PAIRS;
        case 1: return ONE_PAIR;
        case 0: return HIGH_CARD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HandValue>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<HandValue>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HandValue>() {
            public HandValue findValueByNumber(int number) {
              return HandValue.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.getDescriptor().getEnumTypes().get(3);
    }

    private static final HandValue[] VALUES = values();

    public static HandValue valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private HandValue(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:HandValue)
  }

  public interface TableOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string roomId = 1;
    /**
     * <code>required string roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();

    // required string tableId = 2;
    /**
     * <code>required string tableId = 2;</code>
     */
    boolean hasTableId();
    /**
     * <code>required string tableId = 2;</code>
     */
    java.lang.String getTableId();
    /**
     * <code>required string tableId = 2;</code>
     */
    com.google.protobuf.ByteString
        getTableIdBytes();

    // required .RoundType roundType = 3;
    /**
     * <code>required .RoundType roundType = 3;</code>
     */
    boolean hasRoundType();
    /**
     * <code>required .RoundType roundType = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType();

    // required .TableRule tableRule = 4;
    /**
     * <code>required .TableRule tableRule = 4;</code>
     */
    boolean hasTableRule();
    /**
     * <code>required .TableRule tableRule = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.TableRule getTableRule();
    /**
     * <code>required .TableRule tableRule = 4;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder getTableRuleOrBuilder();

    // repeated .Player players = 5;
    /**
     * <code>repeated .Player players = 5;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> 
        getPlayersList();
    /**
     * <code>repeated .Player players = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index);
    /**
     * <code>repeated .Player players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .Player players = 5;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .Player players = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .Card boards = 7;
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getBoardsList();
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getBoards(int index);
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    int getBoardsCount();
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getBoardsOrBuilderList();
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getBoardsOrBuilder(
        int index);

    // optional string dealerId = 8;
    /**
     * <code>optional string dealerId = 8;</code>
     *
     * <pre>
     *current dealer
     * </pre>
     */
    boolean hasDealerId();
    /**
     * <code>optional string dealerId = 8;</code>
     *
     * <pre>
     *current dealer
     * </pre>
     */
    java.lang.String getDealerId();
    /**
     * <code>optional string dealerId = 8;</code>
     *
     * <pre>
     *current dealer
     * </pre>
     */
    com.google.protobuf.ByteString
        getDealerIdBytes();

    // optional string nextPlayerId = 9;
    /**
     * <code>optional string nextPlayerId = 9;</code>
     *
     * <pre>
     *Next Player
     * </pre>
     */
    boolean hasNextPlayerId();
    /**
     * <code>optional string nextPlayerId = 9;</code>
     *
     * <pre>
     *Next Player
     * </pre>
     */
    java.lang.String getNextPlayerId();
    /**
     * <code>optional string nextPlayerId = 9;</code>
     *
     * <pre>
     *Next Player
     * </pre>
     */
    com.google.protobuf.ByteString
        getNextPlayerIdBytes();
  }
  /**
   * Protobuf type {@code Table}
   */
  public static final class Table extends
      com.google.protobuf.GeneratedMessage
      implements TableOrBuilder {
    // Use Table.newBuilder() to construct.
    private Table(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Table(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Table defaultInstance;
    public static Table getDefaultInstance() {
      return defaultInstance;
    }

    public Table getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Table(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tableId_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.RoundType value = com.mrmq.poker.common.proto.PokerModelProto.RoundType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                roundType_ = value;
              }
              break;
            }
            case 34: {
              com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = tableRule_.toBuilder();
              }
              tableRule_ = input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.TableRule.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tableRule_);
                tableRule_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>();
                mutable_bitField0_ |= 0x00000010;
              }
              players_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                boards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000020;
              }
              boards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              bitField0_ |= 0x00000010;
              dealerId_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000020;
              nextPlayerId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          boards_ = java.util.Collections.unmodifiableList(boards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Table_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Table_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Table.class, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder.class);
    }

    public static com.google.protobuf.Parser<Table> PARSER =
        new com.google.protobuf.AbstractParser<Table>() {
      public Table parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Table(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Table> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private java.lang.Object roomId_;
    /**
     * <code>required string roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string tableId = 2;
    public static final int TABLEID_FIELD_NUMBER = 2;
    private java.lang.Object tableId_;
    /**
     * <code>required string tableId = 2;</code>
     */
    public boolean hasTableId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string tableId = 2;</code>
     */
    public java.lang.String getTableId() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string tableId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTableIdBytes() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .RoundType roundType = 3;
    public static final int ROUNDTYPE_FIELD_NUMBER = 3;
    private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_;
    /**
     * <code>required .RoundType roundType = 3;</code>
     */
    public boolean hasRoundType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .RoundType roundType = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
      return roundType_;
    }

    // required .TableRule tableRule = 4;
    public static final int TABLERULE_FIELD_NUMBER = 4;
    private com.mrmq.poker.common.proto.PokerModelProto.TableRule tableRule_;
    /**
     * <code>required .TableRule tableRule = 4;</code>
     */
    public boolean hasTableRule() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .TableRule tableRule = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.TableRule getTableRule() {
      return tableRule_;
    }
    /**
     * <code>required .TableRule tableRule = 4;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder getTableRuleOrBuilder() {
      return tableRule_;
    }

    // repeated .Player players = 5;
    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_;
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .Player players = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .Card boards = 7;
    public static final int BOARDS_FIELD_NUMBER = 7;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> boards_;
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getBoardsList() {
      return boards_;
    }
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getBoardsOrBuilderList() {
      return boards_;
    }
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    public int getBoardsCount() {
      return boards_.size();
    }
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getBoards(int index) {
      return boards_.get(index);
    }
    /**
     * <code>repeated .Card boards = 7;</code>
     *
     * <pre>
     *community-public card
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getBoardsOrBuilder(
        int index) {
      return boards_.get(index);
    }

    // optional string dealerId = 8;
    public static final int DEALERID_FIELD_NUMBER = 8;
    private java.lang.Object dealerId_;
    /**
     * <code>optional string dealerId = 8;</code>
     *
     * <pre>
     *current dealer
     * </pre>
     */
    public boolean hasDealerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string dealerId = 8;</code>
     *
     * <pre>
     *current dealer
     * </pre>
     */
    public java.lang.String getDealerId() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dealerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dealerId = 8;</code>
     *
     * <pre>
     *current dealer
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDealerIdBytes() {
      java.lang.Object ref = dealerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dealerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nextPlayerId = 9;
    public static final int NEXTPLAYERID_FIELD_NUMBER = 9;
    private java.lang.Object nextPlayerId_;
    /**
     * <code>optional string nextPlayerId = 9;</code>
     *
     * <pre>
     *Next Player
     * </pre>
     */
    public boolean hasNextPlayerId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string nextPlayerId = 9;</code>
     *
     * <pre>
     *Next Player
     * </pre>
     */
    public java.lang.String getNextPlayerId() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextPlayerId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nextPlayerId = 9;</code>
     *
     * <pre>
     *Next Player
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNextPlayerIdBytes() {
      java.lang.Object ref = nextPlayerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextPlayerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roomId_ = "";
      tableId_ = "";
      roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
      players_ = java.util.Collections.emptyList();
      boards_ = java.util.Collections.emptyList();
      dealerId_ = "";
      nextPlayerId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTableId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRoundType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTableRule()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTableRule().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayersCount(); i++) {
        if (!getPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBoardsCount(); i++) {
        if (!getBoards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoomIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, tableRule_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      for (int i = 0; i < boards_.size(); i++) {
        output.writeMessage(7, boards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(8, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(9, getNextPlayerIdBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoomIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, roundType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, tableRule_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      for (int i = 0; i < boards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, boards_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getDealerIdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getNextPlayerIdBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Table parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Table prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Table}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Table_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Table_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Table.class, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Table.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableRuleFieldBuilder();
          getPlayersFieldBuilder();
          getBoardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tableId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (tableRuleBuilder_ == null) {
          tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
        } else {
          tableRuleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playersBuilder_.clear();
        }
        if (boardsBuilder_ == null) {
          boards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          boardsBuilder_.clear();
        }
        dealerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        nextPlayerId_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Table_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Table getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Table.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Table build() {
        com.mrmq.poker.common.proto.PokerModelProto.Table result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Table buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Table result = new com.mrmq.poker.common.proto.PokerModelProto.Table(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tableId_ = tableId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roundType_ = roundType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (tableRuleBuilder_ == null) {
          result.tableRule_ = tableRule_;
        } else {
          result.tableRule_ = tableRuleBuilder_.build();
        }
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (boardsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            boards_ = java.util.Collections.unmodifiableList(boards_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.boards_ = boards_;
        } else {
          result.boards_ = boardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dealerId_ = dealerId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nextPlayerId_ = nextPlayerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Table) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Table)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Table other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Table.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          bitField0_ |= 0x00000001;
          roomId_ = other.roomId_;
          onChanged();
        }
        if (other.hasTableId()) {
          bitField0_ |= 0x00000002;
          tableId_ = other.tableId_;
          onChanged();
        }
        if (other.hasRoundType()) {
          setRoundType(other.getRoundType());
        }
        if (other.hasTableRule()) {
          mergeTableRule(other.getTableRule());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (boardsBuilder_ == null) {
          if (!other.boards_.isEmpty()) {
            if (boards_.isEmpty()) {
              boards_ = other.boards_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureBoardsIsMutable();
              boards_.addAll(other.boards_);
            }
            onChanged();
          }
        } else {
          if (!other.boards_.isEmpty()) {
            if (boardsBuilder_.isEmpty()) {
              boardsBuilder_.dispose();
              boardsBuilder_ = null;
              boards_ = other.boards_;
              bitField0_ = (bitField0_ & ~0x00000020);
              boardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBoardsFieldBuilder() : null;
            } else {
              boardsBuilder_.addAllMessages(other.boards_);
            }
          }
        }
        if (other.hasDealerId()) {
          bitField0_ |= 0x00000040;
          dealerId_ = other.dealerId_;
          onChanged();
        }
        if (other.hasNextPlayerId()) {
          bitField0_ |= 0x00000080;
          nextPlayerId_ = other.nextPlayerId_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasTableId()) {
          
          return false;
        }
        if (!hasRoundType()) {
          
          return false;
        }
        if (!hasTableRule()) {
          
          return false;
        }
        if (!getTableRule().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPlayersCount(); i++) {
          if (!getPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBoardsCount(); i++) {
          if (!getBoards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Table parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Table) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string roomId = 1;
      private java.lang.Object roomId_ = "";
      /**
       * <code>required string roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }

      // required string tableId = 2;
      private java.lang.Object tableId_ = "";
      /**
       * <code>required string tableId = 2;</code>
       */
      public boolean hasTableId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string tableId = 2;</code>
       */
      public java.lang.String getTableId() {
        java.lang.Object ref = tableId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tableId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string tableId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTableIdBytes() {
        java.lang.Object ref = tableId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string tableId = 2;</code>
       */
      public Builder setTableId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 2;</code>
       */
      public Builder clearTableId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableId_ = getDefaultInstance().getTableId();
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 2;</code>
       */
      public Builder setTableIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tableId_ = value;
        onChanged();
        return this;
      }

      // required .RoundType roundType = 3;
      private com.mrmq.poker.common.proto.PokerModelProto.RoundType roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
      /**
       * <code>required .RoundType roundType = 3;</code>
       */
      public boolean hasRoundType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .RoundType roundType = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoundType getRoundType() {
        return roundType_;
      }
      /**
       * <code>required .RoundType roundType = 3;</code>
       */
      public Builder setRoundType(com.mrmq.poker.common.proto.PokerModelProto.RoundType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        roundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .RoundType roundType = 3;</code>
       */
      public Builder clearRoundType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roundType_ = com.mrmq.poker.common.proto.PokerModelProto.RoundType.SMALL_BLIND;
        onChanged();
        return this;
      }

      // required .TableRule tableRule = 4;
      private com.mrmq.poker.common.proto.PokerModelProto.TableRule tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.TableRule, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder> tableRuleBuilder_;
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public boolean hasTableRule() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableRule getTableRule() {
        if (tableRuleBuilder_ == null) {
          return tableRule_;
        } else {
          return tableRuleBuilder_.getMessage();
        }
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public Builder setTableRule(com.mrmq.poker.common.proto.PokerModelProto.TableRule value) {
        if (tableRuleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableRule_ = value;
          onChanged();
        } else {
          tableRuleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public Builder setTableRule(
          com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder builderForValue) {
        if (tableRuleBuilder_ == null) {
          tableRule_ = builderForValue.build();
          onChanged();
        } else {
          tableRuleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public Builder mergeTableRule(com.mrmq.poker.common.proto.PokerModelProto.TableRule value) {
        if (tableRuleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              tableRule_ != com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance()) {
            tableRule_ =
              com.mrmq.poker.common.proto.PokerModelProto.TableRule.newBuilder(tableRule_).mergeFrom(value).buildPartial();
          } else {
            tableRule_ = value;
          }
          onChanged();
        } else {
          tableRuleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public Builder clearTableRule() {
        if (tableRuleBuilder_ == null) {
          tableRule_ = com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
          onChanged();
        } else {
          tableRuleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder getTableRuleBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTableRuleFieldBuilder().getBuilder();
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder getTableRuleOrBuilder() {
        if (tableRuleBuilder_ != null) {
          return tableRuleBuilder_.getMessageOrBuilder();
        } else {
          return tableRule_;
        }
      }
      /**
       * <code>required .TableRule tableRule = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.TableRule, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder> 
          getTableRuleFieldBuilder() {
        if (tableRuleBuilder_ == null) {
          tableRuleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.TableRule, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder>(
                  tableRule_,
                  getParentForChildren(),
                  isClean());
          tableRule_ = null;
        }
        return tableRuleBuilder_;
      }

      // repeated .Player players = 5;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>(players_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .Player players = 5;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder setPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addPlayers(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player players = 5;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .Card boards = 7;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> boards_ =
        java.util.Collections.emptyList();
      private void ensureBoardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          boards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(boards_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> boardsBuilder_;

      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getBoardsList() {
        if (boardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boards_);
        } else {
          return boardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public int getBoardsCount() {
        if (boardsBuilder_ == null) {
          return boards_.size();
        } else {
          return boardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getBoards(int index) {
        if (boardsBuilder_ == null) {
          return boards_.get(index);
        } else {
          return boardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder setBoards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (boardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardsIsMutable();
          boards_.set(index, value);
          onChanged();
        } else {
          boardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder setBoards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (boardsBuilder_ == null) {
          ensureBoardsIsMutable();
          boards_.set(index, builderForValue.build());
          onChanged();
        } else {
          boardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder addBoards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (boardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardsIsMutable();
          boards_.add(value);
          onChanged();
        } else {
          boardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder addBoards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (boardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoardsIsMutable();
          boards_.add(index, value);
          onChanged();
        } else {
          boardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder addBoards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (boardsBuilder_ == null) {
          ensureBoardsIsMutable();
          boards_.add(builderForValue.build());
          onChanged();
        } else {
          boardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder addBoards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (boardsBuilder_ == null) {
          ensureBoardsIsMutable();
          boards_.add(index, builderForValue.build());
          onChanged();
        } else {
          boardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder addAllBoards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (boardsBuilder_ == null) {
          ensureBoardsIsMutable();
          super.addAll(values, boards_);
          onChanged();
        } else {
          boardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder clearBoards() {
        if (boardsBuilder_ == null) {
          boards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          boardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public Builder removeBoards(int index) {
        if (boardsBuilder_ == null) {
          ensureBoardsIsMutable();
          boards_.remove(index);
          onChanged();
        } else {
          boardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getBoardsBuilder(
          int index) {
        return getBoardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getBoardsOrBuilder(
          int index) {
        if (boardsBuilder_ == null) {
          return boards_.get(index);  } else {
          return boardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getBoardsOrBuilderList() {
        if (boardsBuilder_ != null) {
          return boardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boards_);
        }
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addBoardsBuilder() {
        return getBoardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addBoardsBuilder(
          int index) {
        return getBoardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card boards = 7;</code>
       *
       * <pre>
       *community-public card
       * </pre>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getBoardsBuilderList() {
        return getBoardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getBoardsFieldBuilder() {
        if (boardsBuilder_ == null) {
          boardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  boards_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          boards_ = null;
        }
        return boardsBuilder_;
      }

      // optional string dealerId = 8;
      private java.lang.Object dealerId_ = "";
      /**
       * <code>optional string dealerId = 8;</code>
       *
       * <pre>
       *current dealer
       * </pre>
       */
      public boolean hasDealerId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string dealerId = 8;</code>
       *
       * <pre>
       *current dealer
       * </pre>
       */
      public java.lang.String getDealerId() {
        java.lang.Object ref = dealerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          dealerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dealerId = 8;</code>
       *
       * <pre>
       *current dealer
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDealerIdBytes() {
        java.lang.Object ref = dealerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dealerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dealerId = 8;</code>
       *
       * <pre>
       *current dealer
       * </pre>
       */
      public Builder setDealerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        dealerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dealerId = 8;</code>
       *
       * <pre>
       *current dealer
       * </pre>
       */
      public Builder clearDealerId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dealerId_ = getDefaultInstance().getDealerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dealerId = 8;</code>
       *
       * <pre>
       *current dealer
       * </pre>
       */
      public Builder setDealerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        dealerId_ = value;
        onChanged();
        return this;
      }

      // optional string nextPlayerId = 9;
      private java.lang.Object nextPlayerId_ = "";
      /**
       * <code>optional string nextPlayerId = 9;</code>
       *
       * <pre>
       *Next Player
       * </pre>
       */
      public boolean hasNextPlayerId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string nextPlayerId = 9;</code>
       *
       * <pre>
       *Next Player
       * </pre>
       */
      public java.lang.String getNextPlayerId() {
        java.lang.Object ref = nextPlayerId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nextPlayerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nextPlayerId = 9;</code>
       *
       * <pre>
       *Next Player
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNextPlayerIdBytes() {
        java.lang.Object ref = nextPlayerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextPlayerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nextPlayerId = 9;</code>
       *
       * <pre>
       *Next Player
       * </pre>
       */
      public Builder setNextPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayerId = 9;</code>
       *
       * <pre>
       *Next Player
       * </pre>
       */
      public Builder clearNextPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nextPlayerId_ = getDefaultInstance().getNextPlayerId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nextPlayerId = 9;</code>
       *
       * <pre>
       *Next Player
       * </pre>
       */
      public Builder setNextPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        nextPlayerId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Table)
    }

    static {
      defaultInstance = new Table(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Table)
  }

  public interface TableRuleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 maxPlayer = 1;
    /**
     * <code>required int32 maxPlayer = 1;</code>
     */
    boolean hasMaxPlayer();
    /**
     * <code>required int32 maxPlayer = 1;</code>
     */
    int getMaxPlayer();

    // required int32 maxViewer = 2;
    /**
     * <code>required int32 maxViewer = 2;</code>
     */
    boolean hasMaxViewer();
    /**
     * <code>required int32 maxViewer = 2;</code>
     */
    int getMaxViewer();

    // required int32 minPlayer = 3;
    /**
     * <code>required int32 minPlayer = 3;</code>
     */
    boolean hasMinPlayer();
    /**
     * <code>required int32 minPlayer = 3;</code>
     */
    int getMinPlayer();

    // required int64 minRaise = 11;
    /**
     * <code>required int64 minRaise = 11;</code>
     */
    boolean hasMinRaise();
    /**
     * <code>required int64 minRaise = 11;</code>
     */
    long getMinRaise();

    // required int64 maxRaise = 13;
    /**
     * <code>required int64 maxRaise = 13;</code>
     */
    boolean hasMaxRaise();
    /**
     * <code>required int64 maxRaise = 13;</code>
     */
    long getMaxRaise();

    // required int64 smallBlind = 14;
    /**
     * <code>required int64 smallBlind = 14;</code>
     */
    boolean hasSmallBlind();
    /**
     * <code>required int64 smallBlind = 14;</code>
     */
    long getSmallBlind();

    // required int64 bigBlind = 15;
    /**
     * <code>required int64 bigBlind = 15;</code>
     */
    boolean hasBigBlind();
    /**
     * <code>required int64 bigBlind = 15;</code>
     */
    long getBigBlind();

    // required int32 timePerTurn = 16;
    /**
     * <code>required int32 timePerTurn = 16;</code>
     */
    boolean hasTimePerTurn();
    /**
     * <code>required int32 timePerTurn = 16;</code>
     */
    int getTimePerTurn();
  }
  /**
   * Protobuf type {@code TableRule}
   */
  public static final class TableRule extends
      com.google.protobuf.GeneratedMessage
      implements TableRuleOrBuilder {
    // Use TableRule.newBuilder() to construct.
    private TableRule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableRule(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableRule defaultInstance;
    public static TableRule getDefaultInstance() {
      return defaultInstance;
    }

    public TableRule getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableRule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxPlayer_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxViewer_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              minPlayer_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000008;
              minRaise_ = input.readInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000010;
              maxRaise_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000020;
              smallBlind_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000040;
              bigBlind_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000080;
              timePerTurn_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_TableRule_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_TableRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.TableRule.class, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder.class);
    }

    public static com.google.protobuf.Parser<TableRule> PARSER =
        new com.google.protobuf.AbstractParser<TableRule>() {
      public TableRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableRule(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableRule> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 maxPlayer = 1;
    public static final int MAXPLAYER_FIELD_NUMBER = 1;
    private int maxPlayer_;
    /**
     * <code>required int32 maxPlayer = 1;</code>
     */
    public boolean hasMaxPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 maxPlayer = 1;</code>
     */
    public int getMaxPlayer() {
      return maxPlayer_;
    }

    // required int32 maxViewer = 2;
    public static final int MAXVIEWER_FIELD_NUMBER = 2;
    private int maxViewer_;
    /**
     * <code>required int32 maxViewer = 2;</code>
     */
    public boolean hasMaxViewer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 maxViewer = 2;</code>
     */
    public int getMaxViewer() {
      return maxViewer_;
    }

    // required int32 minPlayer = 3;
    public static final int MINPLAYER_FIELD_NUMBER = 3;
    private int minPlayer_;
    /**
     * <code>required int32 minPlayer = 3;</code>
     */
    public boolean hasMinPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 minPlayer = 3;</code>
     */
    public int getMinPlayer() {
      return minPlayer_;
    }

    // required int64 minRaise = 11;
    public static final int MINRAISE_FIELD_NUMBER = 11;
    private long minRaise_;
    /**
     * <code>required int64 minRaise = 11;</code>
     */
    public boolean hasMinRaise() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 minRaise = 11;</code>
     */
    public long getMinRaise() {
      return minRaise_;
    }

    // required int64 maxRaise = 13;
    public static final int MAXRAISE_FIELD_NUMBER = 13;
    private long maxRaise_;
    /**
     * <code>required int64 maxRaise = 13;</code>
     */
    public boolean hasMaxRaise() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 maxRaise = 13;</code>
     */
    public long getMaxRaise() {
      return maxRaise_;
    }

    // required int64 smallBlind = 14;
    public static final int SMALLBLIND_FIELD_NUMBER = 14;
    private long smallBlind_;
    /**
     * <code>required int64 smallBlind = 14;</code>
     */
    public boolean hasSmallBlind() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 smallBlind = 14;</code>
     */
    public long getSmallBlind() {
      return smallBlind_;
    }

    // required int64 bigBlind = 15;
    public static final int BIGBLIND_FIELD_NUMBER = 15;
    private long bigBlind_;
    /**
     * <code>required int64 bigBlind = 15;</code>
     */
    public boolean hasBigBlind() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int64 bigBlind = 15;</code>
     */
    public long getBigBlind() {
      return bigBlind_;
    }

    // required int32 timePerTurn = 16;
    public static final int TIMEPERTURN_FIELD_NUMBER = 16;
    private int timePerTurn_;
    /**
     * <code>required int32 timePerTurn = 16;</code>
     */
    public boolean hasTimePerTurn() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 timePerTurn = 16;</code>
     */
    public int getTimePerTurn() {
      return timePerTurn_;
    }

    private void initFields() {
      maxPlayer_ = 0;
      maxViewer_ = 0;
      minPlayer_ = 0;
      minRaise_ = 0L;
      maxRaise_ = 0L;
      smallBlind_ = 0L;
      bigBlind_ = 0L;
      timePerTurn_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMaxPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxViewer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinRaise()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxRaise()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallBlind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBigBlind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimePerTurn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxViewer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, minPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(11, minRaise_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(13, maxRaise_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(14, smallBlind_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(15, bigBlind_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(16, timePerTurn_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxPlayer_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxViewer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, minPlayer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, minRaise_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, maxRaise_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, smallBlind_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, bigBlind_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, timePerTurn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.TableRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.TableRule prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TableRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.TableRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_TableRule_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_TableRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.TableRule.class, com.mrmq.poker.common.proto.PokerModelProto.TableRule.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.TableRule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxViewer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        minPlayer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minRaise_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxRaise_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        smallBlind_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        bigBlind_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        timePerTurn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_TableRule_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.TableRule getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.TableRule build() {
        com.mrmq.poker.common.proto.PokerModelProto.TableRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.TableRule buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.TableRule result = new com.mrmq.poker.common.proto.PokerModelProto.TableRule(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxPlayer_ = maxPlayer_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxViewer_ = maxViewer_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.minPlayer_ = minPlayer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minRaise_ = minRaise_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxRaise_ = maxRaise_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.smallBlind_ = smallBlind_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bigBlind_ = bigBlind_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.timePerTurn_ = timePerTurn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.TableRule) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.TableRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.TableRule other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.TableRule.getDefaultInstance()) return this;
        if (other.hasMaxPlayer()) {
          setMaxPlayer(other.getMaxPlayer());
        }
        if (other.hasMaxViewer()) {
          setMaxViewer(other.getMaxViewer());
        }
        if (other.hasMinPlayer()) {
          setMinPlayer(other.getMinPlayer());
        }
        if (other.hasMinRaise()) {
          setMinRaise(other.getMinRaise());
        }
        if (other.hasMaxRaise()) {
          setMaxRaise(other.getMaxRaise());
        }
        if (other.hasSmallBlind()) {
          setSmallBlind(other.getSmallBlind());
        }
        if (other.hasBigBlind()) {
          setBigBlind(other.getBigBlind());
        }
        if (other.hasTimePerTurn()) {
          setTimePerTurn(other.getTimePerTurn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxPlayer()) {
          
          return false;
        }
        if (!hasMaxViewer()) {
          
          return false;
        }
        if (!hasMinPlayer()) {
          
          return false;
        }
        if (!hasMinRaise()) {
          
          return false;
        }
        if (!hasMaxRaise()) {
          
          return false;
        }
        if (!hasSmallBlind()) {
          
          return false;
        }
        if (!hasBigBlind()) {
          
          return false;
        }
        if (!hasTimePerTurn()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.TableRule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.TableRule) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 maxPlayer = 1;
      private int maxPlayer_ ;
      /**
       * <code>required int32 maxPlayer = 1;</code>
       */
      public boolean hasMaxPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 maxPlayer = 1;</code>
       */
      public int getMaxPlayer() {
        return maxPlayer_;
      }
      /**
       * <code>required int32 maxPlayer = 1;</code>
       */
      public Builder setMaxPlayer(int value) {
        bitField0_ |= 0x00000001;
        maxPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxPlayer = 1;</code>
       */
      public Builder clearMaxPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxPlayer_ = 0;
        onChanged();
        return this;
      }

      // required int32 maxViewer = 2;
      private int maxViewer_ ;
      /**
       * <code>required int32 maxViewer = 2;</code>
       */
      public boolean hasMaxViewer() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 maxViewer = 2;</code>
       */
      public int getMaxViewer() {
        return maxViewer_;
      }
      /**
       * <code>required int32 maxViewer = 2;</code>
       */
      public Builder setMaxViewer(int value) {
        bitField0_ |= 0x00000002;
        maxViewer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxViewer = 2;</code>
       */
      public Builder clearMaxViewer() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxViewer_ = 0;
        onChanged();
        return this;
      }

      // required int32 minPlayer = 3;
      private int minPlayer_ ;
      /**
       * <code>required int32 minPlayer = 3;</code>
       */
      public boolean hasMinPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 minPlayer = 3;</code>
       */
      public int getMinPlayer() {
        return minPlayer_;
      }
      /**
       * <code>required int32 minPlayer = 3;</code>
       */
      public Builder setMinPlayer(int value) {
        bitField0_ |= 0x00000004;
        minPlayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 minPlayer = 3;</code>
       */
      public Builder clearMinPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minPlayer_ = 0;
        onChanged();
        return this;
      }

      // required int64 minRaise = 11;
      private long minRaise_ ;
      /**
       * <code>required int64 minRaise = 11;</code>
       */
      public boolean hasMinRaise() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 minRaise = 11;</code>
       */
      public long getMinRaise() {
        return minRaise_;
      }
      /**
       * <code>required int64 minRaise = 11;</code>
       */
      public Builder setMinRaise(long value) {
        bitField0_ |= 0x00000008;
        minRaise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 minRaise = 11;</code>
       */
      public Builder clearMinRaise() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minRaise_ = 0L;
        onChanged();
        return this;
      }

      // required int64 maxRaise = 13;
      private long maxRaise_ ;
      /**
       * <code>required int64 maxRaise = 13;</code>
       */
      public boolean hasMaxRaise() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 maxRaise = 13;</code>
       */
      public long getMaxRaise() {
        return maxRaise_;
      }
      /**
       * <code>required int64 maxRaise = 13;</code>
       */
      public Builder setMaxRaise(long value) {
        bitField0_ |= 0x00000010;
        maxRaise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 maxRaise = 13;</code>
       */
      public Builder clearMaxRaise() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxRaise_ = 0L;
        onChanged();
        return this;
      }

      // required int64 smallBlind = 14;
      private long smallBlind_ ;
      /**
       * <code>required int64 smallBlind = 14;</code>
       */
      public boolean hasSmallBlind() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 smallBlind = 14;</code>
       */
      public long getSmallBlind() {
        return smallBlind_;
      }
      /**
       * <code>required int64 smallBlind = 14;</code>
       */
      public Builder setSmallBlind(long value) {
        bitField0_ |= 0x00000020;
        smallBlind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 smallBlind = 14;</code>
       */
      public Builder clearSmallBlind() {
        bitField0_ = (bitField0_ & ~0x00000020);
        smallBlind_ = 0L;
        onChanged();
        return this;
      }

      // required int64 bigBlind = 15;
      private long bigBlind_ ;
      /**
       * <code>required int64 bigBlind = 15;</code>
       */
      public boolean hasBigBlind() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 bigBlind = 15;</code>
       */
      public long getBigBlind() {
        return bigBlind_;
      }
      /**
       * <code>required int64 bigBlind = 15;</code>
       */
      public Builder setBigBlind(long value) {
        bitField0_ |= 0x00000040;
        bigBlind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 bigBlind = 15;</code>
       */
      public Builder clearBigBlind() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bigBlind_ = 0L;
        onChanged();
        return this;
      }

      // required int32 timePerTurn = 16;
      private int timePerTurn_ ;
      /**
       * <code>required int32 timePerTurn = 16;</code>
       */
      public boolean hasTimePerTurn() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 timePerTurn = 16;</code>
       */
      public int getTimePerTurn() {
        return timePerTurn_;
      }
      /**
       * <code>required int32 timePerTurn = 16;</code>
       */
      public Builder setTimePerTurn(int value) {
        bitField0_ |= 0x00000080;
        timePerTurn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 timePerTurn = 16;</code>
       */
      public Builder clearTimePerTurn() {
        bitField0_ = (bitField0_ & ~0x00000080);
        timePerTurn_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TableRule)
    }

    static {
      defaultInstance = new TableRule(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TableRule)
  }

  public interface ChipOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 bet = 1;
    /**
     * <code>required int64 bet = 1;</code>
     *
     * <pre>
     *Bet for this Chip
     * </pre>
     */
    boolean hasBet();
    /**
     * <code>required int64 bet = 1;</code>
     *
     * <pre>
     *Bet for this Chip
     * </pre>
     */
    long getBet();

    // repeated .Player contributors = 2;
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> 
        getContributorsList();
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Player getContributors(int index);
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    int getContributorsCount();
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getContributorsOrBuilderList();
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getContributorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Chip}
   */
  public static final class Chip extends
      com.google.protobuf.GeneratedMessage
      implements ChipOrBuilder {
    // Use Chip.newBuilder() to construct.
    private Chip(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Chip(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Chip defaultInstance;
    public static Chip getDefaultInstance() {
      return defaultInstance;
    }

    public Chip getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Chip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              bet_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                contributors_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>();
                mutable_bitField0_ |= 0x00000002;
              }
              contributors_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Player.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          contributors_ = java.util.Collections.unmodifiableList(contributors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Chip_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Chip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Chip.class, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder.class);
    }

    public static com.google.protobuf.Parser<Chip> PARSER =
        new com.google.protobuf.AbstractParser<Chip>() {
      public Chip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Chip(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Chip> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 bet = 1;
    public static final int BET_FIELD_NUMBER = 1;
    private long bet_;
    /**
     * <code>required int64 bet = 1;</code>
     *
     * <pre>
     *Bet for this Chip
     * </pre>
     */
    public boolean hasBet() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 bet = 1;</code>
     *
     * <pre>
     *Bet for this Chip
     * </pre>
     */
    public long getBet() {
      return bet_;
    }

    // repeated .Player contributors = 2;
    public static final int CONTRIBUTORS_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> contributors_;
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getContributorsList() {
      return contributors_;
    }
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
        getContributorsOrBuilderList() {
      return contributors_;
    }
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    public int getContributorsCount() {
      return contributors_.size();
    }
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Player getContributors(int index) {
      return contributors_.get(index);
    }
    /**
     * <code>repeated .Player contributors = 2;</code>
     *
     * <pre>
     *Contributing players to this Chip
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getContributorsOrBuilder(
        int index) {
      return contributors_.get(index);
    }

    private void initFields() {
      bet_ = 0L;
      contributors_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasBet()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getContributorsCount(); i++) {
        if (!getContributors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, bet_);
      }
      for (int i = 0; i < contributors_.size(); i++) {
        output.writeMessage(2, contributors_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, bet_);
      }
      for (int i = 0; i < contributors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, contributors_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Chip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Chip prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Chip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.ChipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Chip_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Chip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Chip.class, com.mrmq.poker.common.proto.PokerModelProto.Chip.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Chip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getContributorsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        bet_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          contributorsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Chip_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Chip getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Chip build() {
        com.mrmq.poker.common.proto.PokerModelProto.Chip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Chip buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Chip result = new com.mrmq.poker.common.proto.PokerModelProto.Chip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.bet_ = bet_;
        if (contributorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            contributors_ = java.util.Collections.unmodifiableList(contributors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.contributors_ = contributors_;
        } else {
          result.contributors_ = contributorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Chip) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Chip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Chip other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Chip.getDefaultInstance()) return this;
        if (other.hasBet()) {
          setBet(other.getBet());
        }
        if (contributorsBuilder_ == null) {
          if (!other.contributors_.isEmpty()) {
            if (contributors_.isEmpty()) {
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureContributorsIsMutable();
              contributors_.addAll(other.contributors_);
            }
            onChanged();
          }
        } else {
          if (!other.contributors_.isEmpty()) {
            if (contributorsBuilder_.isEmpty()) {
              contributorsBuilder_.dispose();
              contributorsBuilder_ = null;
              contributors_ = other.contributors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              contributorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getContributorsFieldBuilder() : null;
            } else {
              contributorsBuilder_.addAllMessages(other.contributors_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBet()) {
          
          return false;
        }
        for (int i = 0; i < getContributorsCount(); i++) {
          if (!getContributors(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Chip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Chip) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 bet = 1;
      private long bet_ ;
      /**
       * <code>required int64 bet = 1;</code>
       *
       * <pre>
       *Bet for this Chip
       * </pre>
       */
      public boolean hasBet() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 bet = 1;</code>
       *
       * <pre>
       *Bet for this Chip
       * </pre>
       */
      public long getBet() {
        return bet_;
      }
      /**
       * <code>required int64 bet = 1;</code>
       *
       * <pre>
       *Bet for this Chip
       * </pre>
       */
      public Builder setBet(long value) {
        bitField0_ |= 0x00000001;
        bet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 bet = 1;</code>
       *
       * <pre>
       *Bet for this Chip
       * </pre>
       */
      public Builder clearBet() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bet_ = 0L;
        onChanged();
        return this;
      }

      // repeated .Player contributors = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> contributors_ =
        java.util.Collections.emptyList();
      private void ensureContributorsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          contributors_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Player>(contributors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> contributorsBuilder_;

      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player> getContributorsList() {
        if (contributorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(contributors_);
        } else {
          return contributorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public int getContributorsCount() {
        if (contributorsBuilder_ == null) {
          return contributors_.size();
        } else {
          return contributorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player getContributors(int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);
        } else {
          return contributorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder setContributors(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.set(index, value);
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder setContributors(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.set(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder addContributors(com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder addContributors(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player value) {
        if (contributorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContributorsIsMutable();
          contributors_.add(index, value);
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder addContributors(
          com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder addContributors(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder builderForValue) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.add(index, builderForValue.build());
          onChanged();
        } else {
          contributorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder addAllContributors(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Player> values) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          super.addAll(values, contributors_);
          onChanged();
        } else {
          contributorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder clearContributors() {
        if (contributorsBuilder_ == null) {
          contributors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          contributorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public Builder removeContributors(int index) {
        if (contributorsBuilder_ == null) {
          ensureContributorsIsMutable();
          contributors_.remove(index);
          onChanged();
        } else {
          contributorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder getContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder getContributorsOrBuilder(
          int index) {
        if (contributorsBuilder_ == null) {
          return contributors_.get(index);  } else {
          return contributorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
           getContributorsOrBuilderList() {
        if (contributorsBuilder_ != null) {
          return contributorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(contributors_);
        }
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addContributorsBuilder() {
        return getContributorsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Player.Builder addContributorsBuilder(
          int index) {
        return getContributorsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .Player contributors = 2;</code>
       *
       * <pre>
       *Contributing players to this Chip
       * </pre>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Player.Builder> 
           getContributorsBuilderList() {
        return getContributorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder> 
          getContributorsFieldBuilder() {
        if (contributorsBuilder_ == null) {
          contributorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Player, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder, com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder>(
                  contributors_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          contributors_ = null;
        }
        return contributorsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Chip)
    }

    static {
      defaultInstance = new Chip(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Chip)
  }

  public interface PlayerOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string loginId = 1;
    /**
     * <code>required string loginId = 1;</code>
     *
     * <pre>
     *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
     * </pre>
     */
    boolean hasLoginId();
    /**
     * <code>required string loginId = 1;</code>
     *
     * <pre>
     *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
     * </pre>
     */
    java.lang.String getLoginId();
    /**
     * <code>required string loginId = 1;</code>
     *
     * <pre>
     *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
     * </pre>
     */
    com.google.protobuf.ByteString
        getLoginIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional string avatarUrl = 3;
    /**
     * <code>optional string avatarUrl = 3;</code>
     */
    boolean hasAvatarUrl();
    /**
     * <code>optional string avatarUrl = 3;</code>
     */
    java.lang.String getAvatarUrl();
    /**
     * <code>optional string avatarUrl = 3;</code>
     */
    com.google.protobuf.ByteString
        getAvatarUrlBytes();

    // optional int64 balance = 4;
    /**
     * <code>optional int64 balance = 4;</code>
     */
    boolean hasBalance();
    /**
     * <code>optional int64 balance = 4;</code>
     */
    long getBalance();

    // optional .PlayerState playerState = 11;
    /**
     * <code>optional .PlayerState playerState = 11;</code>
     */
    boolean hasPlayerState();
    /**
     * <code>optional .PlayerState playerState = 11;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.PlayerState getPlayerState();

    // optional int64 raise = 12;
    /**
     * <code>optional int64 raise = 12;</code>
     */
    boolean hasRaise();
    /**
     * <code>optional int64 raise = 12;</code>
     */
    long getRaise();

    // optional int32 position = 14;
    /**
     * <code>optional int32 position = 14;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional int32 position = 14;</code>
     */
    int getPosition();

    // optional .ActionType lastAction = 16;
    /**
     * <code>optional .ActionType lastAction = 16;</code>
     */
    boolean hasLastAction();
    /**
     * <code>optional .ActionType lastAction = 16;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.ActionType getLastAction();

    // optional .Hand hand = 17;
    /**
     * <code>optional .Hand hand = 17;</code>
     *
     * <pre>
     *Hand of cards
     * </pre>
     */
    boolean hasHand();
    /**
     * <code>optional .Hand hand = 17;</code>
     *
     * <pre>
     *Hand of cards
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Hand getHand();
    /**
     * <code>optional .Hand hand = 17;</code>
     *
     * <pre>
     *Hand of cards
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder getHandOrBuilder();

    // optional .HandValue handValue = 18;
    /**
     * <code>optional .HandValue handValue = 18;</code>
     */
    boolean hasHandValue();
    /**
     * <code>optional .HandValue handValue = 18;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.HandValue getHandValue();

    // optional int32 gift = 19;
    /**
     * <code>optional int32 gift = 19;</code>
     */
    boolean hasGift();
    /**
     * <code>optional int32 gift = 19;</code>
     */
    int getGift();

    // optional int32 straddle = 20;
    /**
     * <code>optional int32 straddle = 20;</code>
     */
    boolean hasStraddle();
    /**
     * <code>optional int32 straddle = 20;</code>
     */
    int getStraddle();

    // repeated .Card winCards = 21;
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getWinCardsList();
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getWinCards(int index);
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    int getWinCardsCount();
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getWinCardsOrBuilderList();
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getWinCardsOrBuilder(
        int index);

    // optional int64 totalAmount = 22;
    /**
     * <code>optional int64 totalAmount = 22;</code>
     */
    boolean hasTotalAmount();
    /**
     * <code>optional int64 totalAmount = 22;</code>
     */
    long getTotalAmount();
  }
  /**
   * Protobuf type {@code Player}
   */
  public static final class Player extends
      com.google.protobuf.GeneratedMessage
      implements PlayerOrBuilder {
    // Use Player.newBuilder() to construct.
    private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Player defaultInstance;
    public static Player getDefaultInstance() {
      return defaultInstance;
    }

    public Player getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Player(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              loginId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              avatarUrl_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              balance_ = input.readInt64();
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.PlayerState value = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                playerState_ = value;
              }
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              raise_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000040;
              position_ = input.readInt32();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.ActionType value = com.mrmq.poker.common.proto.PokerModelProto.ActionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                lastAction_ = value;
              }
              break;
            }
            case 138: {
              com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = hand_.toBuilder();
              }
              hand_ = input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Hand.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hand_);
                hand_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.HandValue value = com.mrmq.poker.common.proto.PokerModelProto.HandValue.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                handValue_ = value;
              }
              break;
            }
            case 152: {
              bitField0_ |= 0x00000400;
              gift_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000800;
              straddle_ = input.readInt32();
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                winCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00001000;
              }
              winCards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
            case 176: {
              bitField0_ |= 0x00001000;
              totalAmount_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          winCards_ = java.util.Collections.unmodifiableList(winCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Player_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Player_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Player.class, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder.class);
    }

    public static com.google.protobuf.Parser<Player> PARSER =
        new com.google.protobuf.AbstractParser<Player>() {
      public Player parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Player(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Player> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string loginId = 1;
    public static final int LOGINID_FIELD_NUMBER = 1;
    private java.lang.Object loginId_;
    /**
     * <code>required string loginId = 1;</code>
     *
     * <pre>
     *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
     * </pre>
     */
    public boolean hasLoginId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string loginId = 1;</code>
     *
     * <pre>
     *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
     * </pre>
     */
    public java.lang.String getLoginId() {
      java.lang.Object ref = loginId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          loginId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string loginId = 1;</code>
     *
     * <pre>
     *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLoginIdBytes() {
      java.lang.Object ref = loginId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        loginId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string avatarUrl = 3;
    public static final int AVATARURL_FIELD_NUMBER = 3;
    private java.lang.Object avatarUrl_;
    /**
     * <code>optional string avatarUrl = 3;</code>
     */
    public boolean hasAvatarUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string avatarUrl = 3;</code>
     */
    public java.lang.String getAvatarUrl() {
      java.lang.Object ref = avatarUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          avatarUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string avatarUrl = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAvatarUrlBytes() {
      java.lang.Object ref = avatarUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        avatarUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 balance = 4;
    public static final int BALANCE_FIELD_NUMBER = 4;
    private long balance_;
    /**
     * <code>optional int64 balance = 4;</code>
     */
    public boolean hasBalance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 balance = 4;</code>
     */
    public long getBalance() {
      return balance_;
    }

    // optional .PlayerState playerState = 11;
    public static final int PLAYERSTATE_FIELD_NUMBER = 11;
    private com.mrmq.poker.common.proto.PokerModelProto.PlayerState playerState_;
    /**
     * <code>optional .PlayerState playerState = 11;</code>
     */
    public boolean hasPlayerState() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .PlayerState playerState = 11;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.PlayerState getPlayerState() {
      return playerState_;
    }

    // optional int64 raise = 12;
    public static final int RAISE_FIELD_NUMBER = 12;
    private long raise_;
    /**
     * <code>optional int64 raise = 12;</code>
     */
    public boolean hasRaise() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 raise = 12;</code>
     */
    public long getRaise() {
      return raise_;
    }

    // optional int32 position = 14;
    public static final int POSITION_FIELD_NUMBER = 14;
    private int position_;
    /**
     * <code>optional int32 position = 14;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 position = 14;</code>
     */
    public int getPosition() {
      return position_;
    }

    // optional .ActionType lastAction = 16;
    public static final int LASTACTION_FIELD_NUMBER = 16;
    private com.mrmq.poker.common.proto.PokerModelProto.ActionType lastAction_;
    /**
     * <code>optional .ActionType lastAction = 16;</code>
     */
    public boolean hasLastAction() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .ActionType lastAction = 16;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.ActionType getLastAction() {
      return lastAction_;
    }

    // optional .Hand hand = 17;
    public static final int HAND_FIELD_NUMBER = 17;
    private com.mrmq.poker.common.proto.PokerModelProto.Hand hand_;
    /**
     * <code>optional .Hand hand = 17;</code>
     *
     * <pre>
     *Hand of cards
     * </pre>
     */
    public boolean hasHand() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .Hand hand = 17;</code>
     *
     * <pre>
     *Hand of cards
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Hand getHand() {
      return hand_;
    }
    /**
     * <code>optional .Hand hand = 17;</code>
     *
     * <pre>
     *Hand of cards
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder getHandOrBuilder() {
      return hand_;
    }

    // optional .HandValue handValue = 18;
    public static final int HANDVALUE_FIELD_NUMBER = 18;
    private com.mrmq.poker.common.proto.PokerModelProto.HandValue handValue_;
    /**
     * <code>optional .HandValue handValue = 18;</code>
     */
    public boolean hasHandValue() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .HandValue handValue = 18;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.HandValue getHandValue() {
      return handValue_;
    }

    // optional int32 gift = 19;
    public static final int GIFT_FIELD_NUMBER = 19;
    private int gift_;
    /**
     * <code>optional int32 gift = 19;</code>
     */
    public boolean hasGift() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 gift = 19;</code>
     */
    public int getGift() {
      return gift_;
    }

    // optional int32 straddle = 20;
    public static final int STRADDLE_FIELD_NUMBER = 20;
    private int straddle_;
    /**
     * <code>optional int32 straddle = 20;</code>
     */
    public boolean hasStraddle() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 straddle = 20;</code>
     */
    public int getStraddle() {
      return straddle_;
    }

    // repeated .Card winCards = 21;
    public static final int WINCARDS_FIELD_NUMBER = 21;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> winCards_;
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getWinCardsList() {
      return winCards_;
    }
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getWinCardsOrBuilderList() {
      return winCards_;
    }
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    public int getWinCardsCount() {
      return winCards_.size();
    }
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getWinCards(int index) {
      return winCards_.get(index);
    }
    /**
     * <code>repeated .Card winCards = 21;</code>
     *
     * <pre>
     *when endGame
     * </pre>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getWinCardsOrBuilder(
        int index) {
      return winCards_.get(index);
    }

    // optional int64 totalAmount = 22;
    public static final int TOTALAMOUNT_FIELD_NUMBER = 22;
    private long totalAmount_;
    /**
     * <code>optional int64 totalAmount = 22;</code>
     */
    public boolean hasTotalAmount() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 totalAmount = 22;</code>
     */
    public long getTotalAmount() {
      return totalAmount_;
    }

    private void initFields() {
      loginId_ = "";
      name_ = "";
      avatarUrl_ = "";
      balance_ = 0L;
      playerState_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
      raise_ = 0L;
      position_ = 0;
      lastAction_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      hand_ = com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance();
      handValue_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
      gift_ = 0;
      straddle_ = 0;
      winCards_ = java.util.Collections.emptyList();
      totalAmount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasLoginId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHand()) {
        if (!getHand().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getWinCardsCount(); i++) {
        if (!getWinCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLoginIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAvatarUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, balance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(11, playerState_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(12, raise_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(14, position_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(16, lastAction_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(17, hand_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(18, handValue_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(19, gift_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(20, straddle_);
      }
      for (int i = 0; i < winCards_.size(); i++) {
        output.writeMessage(21, winCards_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(22, totalAmount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLoginIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAvatarUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, balance_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, playerState_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, raise_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, position_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, lastAction_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, hand_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, handValue_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, gift_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, straddle_);
      }
      for (int i = 0; i < winCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, winCards_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, totalAmount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Player prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Player}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.PlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Player_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Player.class, com.mrmq.poker.common.proto.PokerModelProto.Player.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Player.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHandFieldBuilder();
          getWinCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        loginId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        avatarUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        balance_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        playerState_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
        bitField0_ = (bitField0_ & ~0x00000010);
        raise_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        position_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        lastAction_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (handBuilder_ == null) {
          hand_ = com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance();
        } else {
          handBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        handValue_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
        bitField0_ = (bitField0_ & ~0x00000200);
        gift_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        straddle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (winCardsBuilder_ == null) {
          winCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          winCardsBuilder_.clear();
        }
        totalAmount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Player_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Player getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Player build() {
        com.mrmq.poker.common.proto.PokerModelProto.Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Player buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Player result = new com.mrmq.poker.common.proto.PokerModelProto.Player(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.loginId_ = loginId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.avatarUrl_ = avatarUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.balance_ = balance_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.playerState_ = playerState_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.raise_ = raise_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.position_ = position_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lastAction_ = lastAction_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (handBuilder_ == null) {
          result.hand_ = hand_;
        } else {
          result.hand_ = handBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.handValue_ = handValue_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.gift_ = gift_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.straddle_ = straddle_;
        if (winCardsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            winCards_ = java.util.Collections.unmodifiableList(winCards_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.winCards_ = winCards_;
        } else {
          result.winCards_ = winCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.totalAmount_ = totalAmount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Player) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Player other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Player.getDefaultInstance()) return this;
        if (other.hasLoginId()) {
          bitField0_ |= 0x00000001;
          loginId_ = other.loginId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasAvatarUrl()) {
          bitField0_ |= 0x00000004;
          avatarUrl_ = other.avatarUrl_;
          onChanged();
        }
        if (other.hasBalance()) {
          setBalance(other.getBalance());
        }
        if (other.hasPlayerState()) {
          setPlayerState(other.getPlayerState());
        }
        if (other.hasRaise()) {
          setRaise(other.getRaise());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasLastAction()) {
          setLastAction(other.getLastAction());
        }
        if (other.hasHand()) {
          mergeHand(other.getHand());
        }
        if (other.hasHandValue()) {
          setHandValue(other.getHandValue());
        }
        if (other.hasGift()) {
          setGift(other.getGift());
        }
        if (other.hasStraddle()) {
          setStraddle(other.getStraddle());
        }
        if (winCardsBuilder_ == null) {
          if (!other.winCards_.isEmpty()) {
            if (winCards_.isEmpty()) {
              winCards_ = other.winCards_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureWinCardsIsMutable();
              winCards_.addAll(other.winCards_);
            }
            onChanged();
          }
        } else {
          if (!other.winCards_.isEmpty()) {
            if (winCardsBuilder_.isEmpty()) {
              winCardsBuilder_.dispose();
              winCardsBuilder_ = null;
              winCards_ = other.winCards_;
              bitField0_ = (bitField0_ & ~0x00001000);
              winCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWinCardsFieldBuilder() : null;
            } else {
              winCardsBuilder_.addAllMessages(other.winCards_);
            }
          }
        }
        if (other.hasTotalAmount()) {
          setTotalAmount(other.getTotalAmount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLoginId()) {
          
          return false;
        }
        if (hasHand()) {
          if (!getHand().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getWinCardsCount(); i++) {
          if (!getWinCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Player parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Player) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string loginId = 1;
      private java.lang.Object loginId_ = "";
      /**
       * <code>required string loginId = 1;</code>
       *
       * <pre>
       *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
       * </pre>
       */
      public boolean hasLoginId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string loginId = 1;</code>
       *
       * <pre>
       *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
       * </pre>
       */
      public java.lang.String getLoginId() {
        java.lang.Object ref = loginId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          loginId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string loginId = 1;</code>
       *
       * <pre>
       *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLoginIdBytes() {
        java.lang.Object ref = loginId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          loginId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string loginId = 1;</code>
       *
       * <pre>
       *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
       * </pre>
       */
      public Builder setLoginId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        loginId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string loginId = 1;</code>
       *
       * <pre>
       *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
       * </pre>
       */
      public Builder clearLoginId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loginId_ = getDefaultInstance().getLoginId();
        onChanged();
        return this;
      }
      /**
       * <code>required string loginId = 1;</code>
       *
       * <pre>
       *me = [inround,hatde,hatdebuy,position,avatarUrl,lastAction,[handcard*], rankname, gift];
       * </pre>
       */
      public Builder setLoginIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        loginId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional string avatarUrl = 3;
      private java.lang.Object avatarUrl_ = "";
      /**
       * <code>optional string avatarUrl = 3;</code>
       */
      public boolean hasAvatarUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string avatarUrl = 3;</code>
       */
      public java.lang.String getAvatarUrl() {
        java.lang.Object ref = avatarUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          avatarUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string avatarUrl = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAvatarUrlBytes() {
        java.lang.Object ref = avatarUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          avatarUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string avatarUrl = 3;</code>
       */
      public Builder setAvatarUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        avatarUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string avatarUrl = 3;</code>
       */
      public Builder clearAvatarUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        avatarUrl_ = getDefaultInstance().getAvatarUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string avatarUrl = 3;</code>
       */
      public Builder setAvatarUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        avatarUrl_ = value;
        onChanged();
        return this;
      }

      // optional int64 balance = 4;
      private long balance_ ;
      /**
       * <code>optional int64 balance = 4;</code>
       */
      public boolean hasBalance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 balance = 4;</code>
       */
      public long getBalance() {
        return balance_;
      }
      /**
       * <code>optional int64 balance = 4;</code>
       */
      public Builder setBalance(long value) {
        bitField0_ |= 0x00000008;
        balance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 balance = 4;</code>
       */
      public Builder clearBalance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        balance_ = 0L;
        onChanged();
        return this;
      }

      // optional .PlayerState playerState = 11;
      private com.mrmq.poker.common.proto.PokerModelProto.PlayerState playerState_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
      /**
       * <code>optional .PlayerState playerState = 11;</code>
       */
      public boolean hasPlayerState() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .PlayerState playerState = 11;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.PlayerState getPlayerState() {
        return playerState_;
      }
      /**
       * <code>optional .PlayerState playerState = 11;</code>
       */
      public Builder setPlayerState(com.mrmq.poker.common.proto.PokerModelProto.PlayerState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        playerState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PlayerState playerState = 11;</code>
       */
      public Builder clearPlayerState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playerState_ = com.mrmq.poker.common.proto.PokerModelProto.PlayerState.PLAYER_VIEWING;
        onChanged();
        return this;
      }

      // optional int64 raise = 12;
      private long raise_ ;
      /**
       * <code>optional int64 raise = 12;</code>
       */
      public boolean hasRaise() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 raise = 12;</code>
       */
      public long getRaise() {
        return raise_;
      }
      /**
       * <code>optional int64 raise = 12;</code>
       */
      public Builder setRaise(long value) {
        bitField0_ |= 0x00000020;
        raise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 raise = 12;</code>
       */
      public Builder clearRaise() {
        bitField0_ = (bitField0_ & ~0x00000020);
        raise_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 position = 14;
      private int position_ ;
      /**
       * <code>optional int32 position = 14;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 position = 14;</code>
       */
      public int getPosition() {
        return position_;
      }
      /**
       * <code>optional int32 position = 14;</code>
       */
      public Builder setPosition(int value) {
        bitField0_ |= 0x00000040;
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 position = 14;</code>
       */
      public Builder clearPosition() {
        bitField0_ = (bitField0_ & ~0x00000040);
        position_ = 0;
        onChanged();
        return this;
      }

      // optional .ActionType lastAction = 16;
      private com.mrmq.poker.common.proto.PokerModelProto.ActionType lastAction_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
      /**
       * <code>optional .ActionType lastAction = 16;</code>
       */
      public boolean hasLastAction() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .ActionType lastAction = 16;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.ActionType getLastAction() {
        return lastAction_;
      }
      /**
       * <code>optional .ActionType lastAction = 16;</code>
       */
      public Builder setLastAction(com.mrmq.poker.common.proto.PokerModelProto.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        lastAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ActionType lastAction = 16;</code>
       */
      public Builder clearLastAction() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lastAction_ = com.mrmq.poker.common.proto.PokerModelProto.ActionType.CHECK;
        onChanged();
        return this;
      }

      // optional .Hand hand = 17;
      private com.mrmq.poker.common.proto.PokerModelProto.Hand hand_ = com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Hand, com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder, com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder> handBuilder_;
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public boolean hasHand() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Hand getHand() {
        if (handBuilder_ == null) {
          return hand_;
        } else {
          return handBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public Builder setHand(com.mrmq.poker.common.proto.PokerModelProto.Hand value) {
        if (handBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hand_ = value;
          onChanged();
        } else {
          handBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public Builder setHand(
          com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder builderForValue) {
        if (handBuilder_ == null) {
          hand_ = builderForValue.build();
          onChanged();
        } else {
          handBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public Builder mergeHand(com.mrmq.poker.common.proto.PokerModelProto.Hand value) {
        if (handBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              hand_ != com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance()) {
            hand_ =
              com.mrmq.poker.common.proto.PokerModelProto.Hand.newBuilder(hand_).mergeFrom(value).buildPartial();
          } else {
            hand_ = value;
          }
          onChanged();
        } else {
          handBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public Builder clearHand() {
        if (handBuilder_ == null) {
          hand_ = com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance();
          onChanged();
        } else {
          handBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder getHandBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getHandFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder getHandOrBuilder() {
        if (handBuilder_ != null) {
          return handBuilder_.getMessageOrBuilder();
        } else {
          return hand_;
        }
      }
      /**
       * <code>optional .Hand hand = 17;</code>
       *
       * <pre>
       *Hand of cards
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Hand, com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder, com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder> 
          getHandFieldBuilder() {
        if (handBuilder_ == null) {
          handBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Hand, com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder, com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder>(
                  hand_,
                  getParentForChildren(),
                  isClean());
          hand_ = null;
        }
        return handBuilder_;
      }

      // optional .HandValue handValue = 18;
      private com.mrmq.poker.common.proto.PokerModelProto.HandValue handValue_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
      /**
       * <code>optional .HandValue handValue = 18;</code>
       */
      public boolean hasHandValue() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .HandValue handValue = 18;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.HandValue getHandValue() {
        return handValue_;
      }
      /**
       * <code>optional .HandValue handValue = 18;</code>
       */
      public Builder setHandValue(com.mrmq.poker.common.proto.PokerModelProto.HandValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        handValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .HandValue handValue = 18;</code>
       */
      public Builder clearHandValue() {
        bitField0_ = (bitField0_ & ~0x00000200);
        handValue_ = com.mrmq.poker.common.proto.PokerModelProto.HandValue.ROYAL_FLUSH;
        onChanged();
        return this;
      }

      // optional int32 gift = 19;
      private int gift_ ;
      /**
       * <code>optional int32 gift = 19;</code>
       */
      public boolean hasGift() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 gift = 19;</code>
       */
      public int getGift() {
        return gift_;
      }
      /**
       * <code>optional int32 gift = 19;</code>
       */
      public Builder setGift(int value) {
        bitField0_ |= 0x00000400;
        gift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gift = 19;</code>
       */
      public Builder clearGift() {
        bitField0_ = (bitField0_ & ~0x00000400);
        gift_ = 0;
        onChanged();
        return this;
      }

      // optional int32 straddle = 20;
      private int straddle_ ;
      /**
       * <code>optional int32 straddle = 20;</code>
       */
      public boolean hasStraddle() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 straddle = 20;</code>
       */
      public int getStraddle() {
        return straddle_;
      }
      /**
       * <code>optional int32 straddle = 20;</code>
       */
      public Builder setStraddle(int value) {
        bitField0_ |= 0x00000800;
        straddle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 straddle = 20;</code>
       */
      public Builder clearStraddle() {
        bitField0_ = (bitField0_ & ~0x00000800);
        straddle_ = 0;
        onChanged();
        return this;
      }

      // repeated .Card winCards = 21;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> winCards_ =
        java.util.Collections.emptyList();
      private void ensureWinCardsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          winCards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(winCards_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> winCardsBuilder_;

      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getWinCardsList() {
        if (winCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(winCards_);
        } else {
          return winCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public int getWinCardsCount() {
        if (winCardsBuilder_ == null) {
          return winCards_.size();
        } else {
          return winCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getWinCards(int index) {
        if (winCardsBuilder_ == null) {
          return winCards_.get(index);
        } else {
          return winCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder setWinCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (winCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWinCardsIsMutable();
          winCards_.set(index, value);
          onChanged();
        } else {
          winCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder setWinCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (winCardsBuilder_ == null) {
          ensureWinCardsIsMutable();
          winCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          winCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder addWinCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (winCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWinCardsIsMutable();
          winCards_.add(value);
          onChanged();
        } else {
          winCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder addWinCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (winCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWinCardsIsMutable();
          winCards_.add(index, value);
          onChanged();
        } else {
          winCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder addWinCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (winCardsBuilder_ == null) {
          ensureWinCardsIsMutable();
          winCards_.add(builderForValue.build());
          onChanged();
        } else {
          winCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder addWinCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (winCardsBuilder_ == null) {
          ensureWinCardsIsMutable();
          winCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          winCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder addAllWinCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (winCardsBuilder_ == null) {
          ensureWinCardsIsMutable();
          super.addAll(values, winCards_);
          onChanged();
        } else {
          winCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder clearWinCards() {
        if (winCardsBuilder_ == null) {
          winCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          winCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public Builder removeWinCards(int index) {
        if (winCardsBuilder_ == null) {
          ensureWinCardsIsMutable();
          winCards_.remove(index);
          onChanged();
        } else {
          winCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getWinCardsBuilder(
          int index) {
        return getWinCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getWinCardsOrBuilder(
          int index) {
        if (winCardsBuilder_ == null) {
          return winCards_.get(index);  } else {
          return winCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getWinCardsOrBuilderList() {
        if (winCardsBuilder_ != null) {
          return winCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(winCards_);
        }
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addWinCardsBuilder() {
        return getWinCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addWinCardsBuilder(
          int index) {
        return getWinCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card winCards = 21;</code>
       *
       * <pre>
       *when endGame
       * </pre>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getWinCardsBuilderList() {
        return getWinCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getWinCardsFieldBuilder() {
        if (winCardsBuilder_ == null) {
          winCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  winCards_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          winCards_ = null;
        }
        return winCardsBuilder_;
      }

      // optional int64 totalAmount = 22;
      private long totalAmount_ ;
      /**
       * <code>optional int64 totalAmount = 22;</code>
       */
      public boolean hasTotalAmount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 totalAmount = 22;</code>
       */
      public long getTotalAmount() {
        return totalAmount_;
      }
      /**
       * <code>optional int64 totalAmount = 22;</code>
       */
      public Builder setTotalAmount(long value) {
        bitField0_ |= 0x00002000;
        totalAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 totalAmount = 22;</code>
       */
      public Builder clearTotalAmount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalAmount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Player)
    }

    static {
      defaultInstance = new Player(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Player)
  }

  public interface HandOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 maxCard = 1;
    /**
     * <code>required int32 maxCard = 1;</code>
     */
    boolean hasMaxCard();
    /**
     * <code>required int32 maxCard = 1;</code>
     */
    int getMaxCard();

    // repeated .Card cards = 2;
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getCardsList();
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getCards(int index);
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Hand}
   */
  public static final class Hand extends
      com.google.protobuf.GeneratedMessage
      implements HandOrBuilder {
    // Use Hand.newBuilder() to construct.
    private Hand(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Hand(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Hand defaultInstance;
    public static Hand getDefaultInstance() {
      return defaultInstance;
    }

    public Hand getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Hand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxCard_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hand_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Hand.class, com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder.class);
    }

    public static com.google.protobuf.Parser<Hand> PARSER =
        new com.google.protobuf.AbstractParser<Hand>() {
      public Hand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hand(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Hand> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 maxCard = 1;
    public static final int MAXCARD_FIELD_NUMBER = 1;
    private int maxCard_;
    /**
     * <code>required int32 maxCard = 1;</code>
     */
    public boolean hasMaxCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 maxCard = 1;</code>
     */
    public int getMaxCard() {
      return maxCard_;
    }

    // repeated .Card cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> cards_;
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    private void initFields() {
      maxCard_ = 0;
      cards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMaxCard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCardsCount(); i++) {
        if (!getCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxCard_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(2, cards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxCard_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cards_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Hand prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Hand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.HandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hand_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Hand.class, com.mrmq.poker.common.proto.PokerModelProto.Hand.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Hand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hand_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Hand getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Hand build() {
        com.mrmq.poker.common.proto.PokerModelProto.Hand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Hand buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Hand result = new com.mrmq.poker.common.proto.PokerModelProto.Hand(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxCard_ = maxCard_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Hand) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Hand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Hand other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Hand.getDefaultInstance()) return this;
        if (other.hasMaxCard()) {
          setMaxCard(other.getMaxCard());
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxCard()) {
          
          return false;
        }
        for (int i = 0; i < getCardsCount(); i++) {
          if (!getCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Hand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Hand) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 maxCard = 1;
      private int maxCard_ ;
      /**
       * <code>required int32 maxCard = 1;</code>
       */
      public boolean hasMaxCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 maxCard = 1;</code>
       */
      public int getMaxCard() {
        return maxCard_;
      }
      /**
       * <code>required int32 maxCard = 1;</code>
       */
      public Builder setMaxCard(int value) {
        bitField0_ |= 0x00000001;
        maxCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxCard = 1;</code>
       */
      public Builder clearMaxCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxCard_ = 0;
        onChanged();
        return this;
      }

      // repeated .Card cards = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(cards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder setCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder setCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Hand)
    }

    static {
      defaultInstance = new Hand(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Hand)
  }

  public interface DeckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 total_card = 52;
    /**
     * <code>required int32 total_card = 52;</code>
     */
    boolean hasTotalCard();
    /**
     * <code>required int32 total_card = 52;</code>
     */
    int getTotalCard();

    // repeated .Card cards = 2;
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> 
        getCardsList();
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card getCards(int index);
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    int getCardsCount();
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCardsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Deck}
   */
  public static final class Deck extends
      com.google.protobuf.GeneratedMessage
      implements DeckOrBuilder {
    // Use Deck.newBuilder() to construct.
    private Deck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Deck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Deck defaultInstance;
    public static Deck getDefaultInstance() {
      return defaultInstance;
    }

    public Deck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Deck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Card.PARSER, extensionRegistry));
              break;
            }
            case 416: {
              bitField0_ |= 0x00000001;
              totalCard_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Deck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Deck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Deck.class, com.mrmq.poker.common.proto.PokerModelProto.Deck.Builder.class);
    }

    public static com.google.protobuf.Parser<Deck> PARSER =
        new com.google.protobuf.AbstractParser<Deck>() {
      public Deck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Deck(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Deck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 total_card = 52;
    public static final int TOTAL_CARD_FIELD_NUMBER = 52;
    private int totalCard_;
    /**
     * <code>required int32 total_card = 52;</code>
     */
    public boolean hasTotalCard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 total_card = 52;</code>
     */
    public int getTotalCard() {
      return totalCard_;
    }

    // repeated .Card cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> cards_;
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .Card cards = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    private void initFields() {
      totalCard_ = 0;
      cards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTotalCard()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCardsCount(); i++) {
        if (!getCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(52, totalCard_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(52, totalCard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Deck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Deck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Deck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.DeckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Deck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Deck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Deck.class, com.mrmq.poker.common.proto.PokerModelProto.Deck.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Deck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        totalCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Deck_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Deck getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Deck.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Deck build() {
        com.mrmq.poker.common.proto.PokerModelProto.Deck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Deck buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Deck result = new com.mrmq.poker.common.proto.PokerModelProto.Deck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.totalCard_ = totalCard_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Deck) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Deck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Deck other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Deck.getDefaultInstance()) return this;
        if (other.hasTotalCard()) {
          setTotalCard(other.getTotalCard());
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTotalCard()) {
          
          return false;
        }
        for (int i = 0; i < getCardsCount(); i++) {
          if (!getCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Deck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Deck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 total_card = 52;
      private int totalCard_ ;
      /**
       * <code>required int32 total_card = 52;</code>
       */
      public boolean hasTotalCard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 total_card = 52;</code>
       */
      public int getTotalCard() {
        return totalCard_;
      }
      /**
       * <code>required int32 total_card = 52;</code>
       */
      public Builder setTotalCard(int value) {
        bitField0_ |= 0x00000001;
        totalCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 total_card = 52;</code>
       */
      public Builder clearTotalCard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        totalCard_ = 0;
        onChanged();
        return this;
      }

      // repeated .Card cards = 2;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Card>(cards_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder setCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder setCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(
          com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addCards(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Card> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .Card cards = 2;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Card.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Card, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder, com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Deck)
    }

    static {
      defaultInstance = new Deck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Deck)
  }

  public interface CardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .Card.CardRank cardRank = 1;
    /**
     * <code>required .Card.CardRank cardRank = 1;</code>
     */
    boolean hasCardRank();
    /**
     * <code>required .Card.CardRank cardRank = 1;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank getCardRank();

    // required .Card.Suits suit = 2;
    /**
     * <code>required .Card.Suits suit = 2;</code>
     */
    boolean hasSuit();
    /**
     * <code>required .Card.Suits suit = 2;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Card.Suits getSuit();
  }
  /**
   * Protobuf type {@code Card}
   */
  public static final class Card extends
      com.google.protobuf.GeneratedMessage
      implements CardOrBuilder {
    // Use Card.newBuilder() to construct.
    private Card(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Card(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Card defaultInstance;
    public static Card getDefaultInstance() {
      return defaultInstance;
    }

    public Card getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Card(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank value = com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cardRank_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.Card.Suits value = com.mrmq.poker.common.proto.PokerModelProto.Card.Suits.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                suit_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Card_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Card.class, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder.class);
    }

    public static com.google.protobuf.Parser<Card> PARSER =
        new com.google.protobuf.AbstractParser<Card>() {
      public Card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Card(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Card> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Card.CardRank}
     */
    public enum CardRank
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DEUCE = 0;</code>
       *
       * <pre>
       *2
       * </pre>
       */
      DEUCE(0, 0),
      /**
       * <code>THREE = 1;</code>
       *
       * <pre>
       *3
       * </pre>
       */
      THREE(1, 1),
      /**
       * <code>FOUR = 2;</code>
       *
       * <pre>
       *4
       * </pre>
       */
      FOUR(2, 2),
      /**
       * <code>FIVE = 3;</code>
       *
       * <pre>
       *5
       * </pre>
       */
      FIVE(3, 3),
      /**
       * <code>SIX = 4;</code>
       *
       * <pre>
       *6
       * </pre>
       */
      SIX(4, 4),
      /**
       * <code>SEVEN = 5;</code>
       *
       * <pre>
       *7
       * </pre>
       */
      SEVEN(5, 5),
      /**
       * <code>EIGHT = 6;</code>
       *
       * <pre>
       *8
       * </pre>
       */
      EIGHT(6, 6),
      /**
       * <code>NINE = 7;</code>
       *
       * <pre>
       *9
       * </pre>
       */
      NINE(7, 7),
      /**
       * <code>TEN = 8;</code>
       *
       * <pre>
       *10
       * </pre>
       */
      TEN(8, 8),
      /**
       * <code>JACK = 9;</code>
       *
       * <pre>
       *J
       * </pre>
       */
      JACK(9, 9),
      /**
       * <code>QUEEN = 10;</code>
       *
       * <pre>
       *Q
       * </pre>
       */
      QUEEN(10, 10),
      /**
       * <code>KING = 11;</code>
       *
       * <pre>
       *K
       * </pre>
       */
      KING(11, 11),
      /**
       * <code>ACE = 12;</code>
       *
       * <pre>
       *A
       * </pre>
       */
      ACE(12, 12),
      ;

      /**
       * <code>DEUCE = 0;</code>
       *
       * <pre>
       *2
       * </pre>
       */
      public static final int DEUCE_VALUE = 0;
      /**
       * <code>THREE = 1;</code>
       *
       * <pre>
       *3
       * </pre>
       */
      public static final int THREE_VALUE = 1;
      /**
       * <code>FOUR = 2;</code>
       *
       * <pre>
       *4
       * </pre>
       */
      public static final int FOUR_VALUE = 2;
      /**
       * <code>FIVE = 3;</code>
       *
       * <pre>
       *5
       * </pre>
       */
      public static final int FIVE_VALUE = 3;
      /**
       * <code>SIX = 4;</code>
       *
       * <pre>
       *6
       * </pre>
       */
      public static final int SIX_VALUE = 4;
      /**
       * <code>SEVEN = 5;</code>
       *
       * <pre>
       *7
       * </pre>
       */
      public static final int SEVEN_VALUE = 5;
      /**
       * <code>EIGHT = 6;</code>
       *
       * <pre>
       *8
       * </pre>
       */
      public static final int EIGHT_VALUE = 6;
      /**
       * <code>NINE = 7;</code>
       *
       * <pre>
       *9
       * </pre>
       */
      public static final int NINE_VALUE = 7;
      /**
       * <code>TEN = 8;</code>
       *
       * <pre>
       *10
       * </pre>
       */
      public static final int TEN_VALUE = 8;
      /**
       * <code>JACK = 9;</code>
       *
       * <pre>
       *J
       * </pre>
       */
      public static final int JACK_VALUE = 9;
      /**
       * <code>QUEEN = 10;</code>
       *
       * <pre>
       *Q
       * </pre>
       */
      public static final int QUEEN_VALUE = 10;
      /**
       * <code>KING = 11;</code>
       *
       * <pre>
       *K
       * </pre>
       */
      public static final int KING_VALUE = 11;
      /**
       * <code>ACE = 12;</code>
       *
       * <pre>
       *A
       * </pre>
       */
      public static final int ACE_VALUE = 12;


      public final int getNumber() { return value; }

      public static CardRank valueOf(int value) {
        switch (value) {
          case 0: return DEUCE;
          case 1: return THREE;
          case 2: return FOUR;
          case 3: return FIVE;
          case 4: return SIX;
          case 5: return SEVEN;
          case 6: return EIGHT;
          case 7: return NINE;
          case 8: return TEN;
          case 9: return JACK;
          case 10: return QUEEN;
          case 11: return KING;
          case 12: return ACE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CardRank>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CardRank>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CardRank>() {
              public CardRank findValueByNumber(int number) {
                return CardRank.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.Card.getDescriptor().getEnumTypes().get(0);
      }

      private static final CardRank[] VALUES = values();

      public static CardRank valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private CardRank(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Card.CardRank)
    }

    /**
     * Protobuf enum {@code Card.Suits}
     */
    public enum Suits
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DIAMONDS = 0;</code>
       *
       * <pre>
       *Ro
       * </pre>
       */
      DIAMONDS(0, 0),
      /**
       * <code>CLUBS = 1;</code>
       *
       * <pre>
       *Tep
       * </pre>
       */
      CLUBS(1, 1),
      /**
       * <code>HEARTS = 2;</code>
       *
       * <pre>
       *Co
       * </pre>
       */
      HEARTS(2, 2),
      /**
       * <code>SPADES = 3;</code>
       *
       * <pre>
       *Bich
       * </pre>
       */
      SPADES(3, 3),
      ;

      /**
       * <code>DIAMONDS = 0;</code>
       *
       * <pre>
       *Ro
       * </pre>
       */
      public static final int DIAMONDS_VALUE = 0;
      /**
       * <code>CLUBS = 1;</code>
       *
       * <pre>
       *Tep
       * </pre>
       */
      public static final int CLUBS_VALUE = 1;
      /**
       * <code>HEARTS = 2;</code>
       *
       * <pre>
       *Co
       * </pre>
       */
      public static final int HEARTS_VALUE = 2;
      /**
       * <code>SPADES = 3;</code>
       *
       * <pre>
       *Bich
       * </pre>
       */
      public static final int SPADES_VALUE = 3;


      public final int getNumber() { return value; }

      public static Suits valueOf(int value) {
        switch (value) {
          case 0: return DIAMONDS;
          case 1: return CLUBS;
          case 2: return HEARTS;
          case 3: return SPADES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Suits>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Suits>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Suits>() {
              public Suits findValueByNumber(int number) {
                return Suits.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.Card.getDescriptor().getEnumTypes().get(1);
      }

      private static final Suits[] VALUES = values();

      public static Suits valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Suits(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Card.Suits)
    }

    private int bitField0_;
    // required .Card.CardRank cardRank = 1;
    public static final int CARDRANK_FIELD_NUMBER = 1;
    private com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank cardRank_;
    /**
     * <code>required .Card.CardRank cardRank = 1;</code>
     */
    public boolean hasCardRank() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Card.CardRank cardRank = 1;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank getCardRank() {
      return cardRank_;
    }

    // required .Card.Suits suit = 2;
    public static final int SUIT_FIELD_NUMBER = 2;
    private com.mrmq.poker.common.proto.PokerModelProto.Card.Suits suit_;
    /**
     * <code>required .Card.Suits suit = 2;</code>
     */
    public boolean hasSuit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .Card.Suits suit = 2;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Card.Suits getSuit() {
      return suit_;
    }

    private void initFields() {
      cardRank_ = com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank.DEUCE;
      suit_ = com.mrmq.poker.common.proto.PokerModelProto.Card.Suits.DIAMONDS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCardRank()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSuit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cardRank_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, suit_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cardRank_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, suit_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Card prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.CardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Card_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Card.class, com.mrmq.poker.common.proto.PokerModelProto.Card.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardRank_ = com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank.DEUCE;
        bitField0_ = (bitField0_ & ~0x00000001);
        suit_ = com.mrmq.poker.common.proto.PokerModelProto.Card.Suits.DIAMONDS;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Card_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Card getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Card build() {
        com.mrmq.poker.common.proto.PokerModelProto.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Card buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Card result = new com.mrmq.poker.common.proto.PokerModelProto.Card(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardRank_ = cardRank_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.suit_ = suit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Card) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Card other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Card.getDefaultInstance()) return this;
        if (other.hasCardRank()) {
          setCardRank(other.getCardRank());
        }
        if (other.hasSuit()) {
          setSuit(other.getSuit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCardRank()) {
          
          return false;
        }
        if (!hasSuit()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Card parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Card) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .Card.CardRank cardRank = 1;
      private com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank cardRank_ = com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank.DEUCE;
      /**
       * <code>required .Card.CardRank cardRank = 1;</code>
       */
      public boolean hasCardRank() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Card.CardRank cardRank = 1;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank getCardRank() {
        return cardRank_;
      }
      /**
       * <code>required .Card.CardRank cardRank = 1;</code>
       */
      public Builder setCardRank(com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cardRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Card.CardRank cardRank = 1;</code>
       */
      public Builder clearCardRank() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardRank_ = com.mrmq.poker.common.proto.PokerModelProto.Card.CardRank.DEUCE;
        onChanged();
        return this;
      }

      // required .Card.Suits suit = 2;
      private com.mrmq.poker.common.proto.PokerModelProto.Card.Suits suit_ = com.mrmq.poker.common.proto.PokerModelProto.Card.Suits.DIAMONDS;
      /**
       * <code>required .Card.Suits suit = 2;</code>
       */
      public boolean hasSuit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .Card.Suits suit = 2;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Card.Suits getSuit() {
        return suit_;
      }
      /**
       * <code>required .Card.Suits suit = 2;</code>
       */
      public Builder setSuit(com.mrmq.poker.common.proto.PokerModelProto.Card.Suits value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        suit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Card.Suits suit = 2;</code>
       */
      public Builder clearSuit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        suit_ = com.mrmq.poker.common.proto.PokerModelProto.Card.Suits.DIAMONDS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Card)
    }

    static {
      defaultInstance = new Card(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Card)
  }

  public interface DoorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string doorId = 1;
    /**
     * <code>required string doorId = 1;</code>
     */
    boolean hasDoorId();
    /**
     * <code>required string doorId = 1;</code>
     */
    java.lang.String getDoorId();
    /**
     * <code>required string doorId = 1;</code>
     */
    com.google.protobuf.ByteString
        getDoorIdBytes();

    // optional string doorUrl = 2;
    /**
     * <code>optional string doorUrl = 2;</code>
     */
    boolean hasDoorUrl();
    /**
     * <code>optional string doorUrl = 2;</code>
     */
    java.lang.String getDoorUrl();
    /**
     * <code>optional string doorUrl = 2;</code>
     */
    com.google.protobuf.ByteString
        getDoorUrlBytes();

    // repeated .Hall halls = 3;
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Hall> 
        getHallsList();
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Hall getHalls(int index);
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    int getHallsCount();
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder> 
        getHallsOrBuilderList();
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder getHallsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Door}
   */
  public static final class Door extends
      com.google.protobuf.GeneratedMessage
      implements DoorOrBuilder {
    // Use Door.newBuilder() to construct.
    private Door(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Door(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Door defaultInstance;
    public static Door getDefaultInstance() {
      return defaultInstance;
    }

    public Door getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Door(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              doorId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              doorUrl_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                halls_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Hall>();
                mutable_bitField0_ |= 0x00000004;
              }
              halls_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Hall.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          halls_ = java.util.Collections.unmodifiableList(halls_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Door_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Door_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Door.class, com.mrmq.poker.common.proto.PokerModelProto.Door.Builder.class);
    }

    public static com.google.protobuf.Parser<Door> PARSER =
        new com.google.protobuf.AbstractParser<Door>() {
      public Door parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Door(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Door> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string doorId = 1;
    public static final int DOORID_FIELD_NUMBER = 1;
    private java.lang.Object doorId_;
    /**
     * <code>required string doorId = 1;</code>
     */
    public boolean hasDoorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string doorId = 1;</code>
     */
    public java.lang.String getDoorId() {
      java.lang.Object ref = doorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          doorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string doorId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDoorIdBytes() {
      java.lang.Object ref = doorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        doorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string doorUrl = 2;
    public static final int DOORURL_FIELD_NUMBER = 2;
    private java.lang.Object doorUrl_;
    /**
     * <code>optional string doorUrl = 2;</code>
     */
    public boolean hasDoorUrl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string doorUrl = 2;</code>
     */
    public java.lang.String getDoorUrl() {
      java.lang.Object ref = doorUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          doorUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string doorUrl = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDoorUrlBytes() {
      java.lang.Object ref = doorUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        doorUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Hall halls = 3;
    public static final int HALLS_FIELD_NUMBER = 3;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Hall> halls_;
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Hall> getHallsList() {
      return halls_;
    }
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder> 
        getHallsOrBuilderList() {
      return halls_;
    }
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    public int getHallsCount() {
      return halls_.size();
    }
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Hall getHalls(int index) {
      return halls_.get(index);
    }
    /**
     * <code>repeated .Hall halls = 3;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder getHallsOrBuilder(
        int index) {
      return halls_.get(index);
    }

    private void initFields() {
      doorId_ = "";
      doorUrl_ = "";
      halls_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDoorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHallsCount(); i++) {
        if (!getHalls(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDoorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDoorUrlBytes());
      }
      for (int i = 0; i < halls_.size(); i++) {
        output.writeMessage(3, halls_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDoorIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDoorUrlBytes());
      }
      for (int i = 0; i < halls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, halls_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Door parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Door prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Door}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.DoorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Door_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Door_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Door.class, com.mrmq.poker.common.proto.PokerModelProto.Door.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Door.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHallsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        doorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        doorUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (hallsBuilder_ == null) {
          halls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          hallsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Door_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Door getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Door.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Door build() {
        com.mrmq.poker.common.proto.PokerModelProto.Door result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Door buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Door result = new com.mrmq.poker.common.proto.PokerModelProto.Door(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.doorId_ = doorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.doorUrl_ = doorUrl_;
        if (hallsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            halls_ = java.util.Collections.unmodifiableList(halls_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.halls_ = halls_;
        } else {
          result.halls_ = hallsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Door) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Door)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Door other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Door.getDefaultInstance()) return this;
        if (other.hasDoorId()) {
          bitField0_ |= 0x00000001;
          doorId_ = other.doorId_;
          onChanged();
        }
        if (other.hasDoorUrl()) {
          bitField0_ |= 0x00000002;
          doorUrl_ = other.doorUrl_;
          onChanged();
        }
        if (hallsBuilder_ == null) {
          if (!other.halls_.isEmpty()) {
            if (halls_.isEmpty()) {
              halls_ = other.halls_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureHallsIsMutable();
              halls_.addAll(other.halls_);
            }
            onChanged();
          }
        } else {
          if (!other.halls_.isEmpty()) {
            if (hallsBuilder_.isEmpty()) {
              hallsBuilder_.dispose();
              hallsBuilder_ = null;
              halls_ = other.halls_;
              bitField0_ = (bitField0_ & ~0x00000004);
              hallsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHallsFieldBuilder() : null;
            } else {
              hallsBuilder_.addAllMessages(other.halls_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDoorId()) {
          
          return false;
        }
        for (int i = 0; i < getHallsCount(); i++) {
          if (!getHalls(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Door parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Door) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string doorId = 1;
      private java.lang.Object doorId_ = "";
      /**
       * <code>required string doorId = 1;</code>
       */
      public boolean hasDoorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string doorId = 1;</code>
       */
      public java.lang.String getDoorId() {
        java.lang.Object ref = doorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          doorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string doorId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDoorIdBytes() {
        java.lang.Object ref = doorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          doorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string doorId = 1;</code>
       */
      public Builder setDoorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        doorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string doorId = 1;</code>
       */
      public Builder clearDoorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        doorId_ = getDefaultInstance().getDoorId();
        onChanged();
        return this;
      }
      /**
       * <code>required string doorId = 1;</code>
       */
      public Builder setDoorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        doorId_ = value;
        onChanged();
        return this;
      }

      // optional string doorUrl = 2;
      private java.lang.Object doorUrl_ = "";
      /**
       * <code>optional string doorUrl = 2;</code>
       */
      public boolean hasDoorUrl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string doorUrl = 2;</code>
       */
      public java.lang.String getDoorUrl() {
        java.lang.Object ref = doorUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          doorUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string doorUrl = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDoorUrlBytes() {
        java.lang.Object ref = doorUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          doorUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string doorUrl = 2;</code>
       */
      public Builder setDoorUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        doorUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string doorUrl = 2;</code>
       */
      public Builder clearDoorUrl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        doorUrl_ = getDefaultInstance().getDoorUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string doorUrl = 2;</code>
       */
      public Builder setDoorUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        doorUrl_ = value;
        onChanged();
        return this;
      }

      // repeated .Hall halls = 3;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Hall> halls_ =
        java.util.Collections.emptyList();
      private void ensureHallsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          halls_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Hall>(halls_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Hall, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder, com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder> hallsBuilder_;

      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Hall> getHallsList() {
        if (hallsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(halls_);
        } else {
          return hallsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public int getHallsCount() {
        if (hallsBuilder_ == null) {
          return halls_.size();
        } else {
          return hallsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Hall getHalls(int index) {
        if (hallsBuilder_ == null) {
          return halls_.get(index);
        } else {
          return hallsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder setHalls(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Hall value) {
        if (hallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHallsIsMutable();
          halls_.set(index, value);
          onChanged();
        } else {
          hallsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder setHalls(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder builderForValue) {
        if (hallsBuilder_ == null) {
          ensureHallsIsMutable();
          halls_.set(index, builderForValue.build());
          onChanged();
        } else {
          hallsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder addHalls(com.mrmq.poker.common.proto.PokerModelProto.Hall value) {
        if (hallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHallsIsMutable();
          halls_.add(value);
          onChanged();
        } else {
          hallsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder addHalls(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Hall value) {
        if (hallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHallsIsMutable();
          halls_.add(index, value);
          onChanged();
        } else {
          hallsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder addHalls(
          com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder builderForValue) {
        if (hallsBuilder_ == null) {
          ensureHallsIsMutable();
          halls_.add(builderForValue.build());
          onChanged();
        } else {
          hallsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder addHalls(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder builderForValue) {
        if (hallsBuilder_ == null) {
          ensureHallsIsMutable();
          halls_.add(index, builderForValue.build());
          onChanged();
        } else {
          hallsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder addAllHalls(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Hall> values) {
        if (hallsBuilder_ == null) {
          ensureHallsIsMutable();
          super.addAll(values, halls_);
          onChanged();
        } else {
          hallsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder clearHalls() {
        if (hallsBuilder_ == null) {
          halls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          hallsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public Builder removeHalls(int index) {
        if (hallsBuilder_ == null) {
          ensureHallsIsMutable();
          halls_.remove(index);
          onChanged();
        } else {
          hallsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder getHallsBuilder(
          int index) {
        return getHallsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder getHallsOrBuilder(
          int index) {
        if (hallsBuilder_ == null) {
          return halls_.get(index);  } else {
          return hallsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder> 
           getHallsOrBuilderList() {
        if (hallsBuilder_ != null) {
          return hallsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(halls_);
        }
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder addHallsBuilder() {
        return getHallsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Hall.getDefaultInstance());
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder addHallsBuilder(
          int index) {
        return getHallsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Hall.getDefaultInstance());
      }
      /**
       * <code>repeated .Hall halls = 3;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder> 
           getHallsBuilderList() {
        return getHallsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Hall, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder, com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder> 
          getHallsFieldBuilder() {
        if (hallsBuilder_ == null) {
          hallsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Hall, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder, com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder>(
                  halls_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          halls_ = null;
        }
        return hallsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Door)
    }

    static {
      defaultInstance = new Door(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Door)
  }

  public interface HallOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string hallId = 1;
    /**
     * <code>required string hallId = 1;</code>
     */
    boolean hasHallId();
    /**
     * <code>required string hallId = 1;</code>
     */
    java.lang.String getHallId();
    /**
     * <code>required string hallId = 1;</code>
     */
    com.google.protobuf.ByteString
        getHallIdBytes();

    // optional string title = 2;
    /**
     * <code>optional string title = 2;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 2;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 2;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string hallUrl = 3;
    /**
     * <code>optional string hallUrl = 3;</code>
     */
    boolean hasHallUrl();
    /**
     * <code>optional string hallUrl = 3;</code>
     */
    java.lang.String getHallUrl();
    /**
     * <code>optional string hallUrl = 3;</code>
     */
    com.google.protobuf.ByteString
        getHallUrlBytes();

    // optional string doorId = 4;
    /**
     * <code>optional string doorId = 4;</code>
     */
    boolean hasDoorId();
    /**
     * <code>optional string doorId = 4;</code>
     */
    java.lang.String getDoorId();
    /**
     * <code>optional string doorId = 4;</code>
     */
    com.google.protobuf.ByteString
        getDoorIdBytes();

    // repeated .Room rooms = 5;
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> 
        getRoomsList();
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Room getRooms(int index);
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    int getRoomsCount();
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
        getRoomsOrBuilderList();
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder getRoomsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Hall}
   */
  public static final class Hall extends
      com.google.protobuf.GeneratedMessage
      implements HallOrBuilder {
    // Use Hall.newBuilder() to construct.
    private Hall(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Hall(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Hall defaultInstance;
    public static Hall getDefaultInstance() {
      return defaultInstance;
    }

    public Hall getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Hall(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hallId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              title_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              hallUrl_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              doorId_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                rooms_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Room>();
                mutable_bitField0_ |= 0x00000010;
              }
              rooms_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Room.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          rooms_ = java.util.Collections.unmodifiableList(rooms_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hall_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hall_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Hall.class, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder.class);
    }

    public static com.google.protobuf.Parser<Hall> PARSER =
        new com.google.protobuf.AbstractParser<Hall>() {
      public Hall parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hall(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Hall> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string hallId = 1;
    public static final int HALLID_FIELD_NUMBER = 1;
    private java.lang.Object hallId_;
    /**
     * <code>required string hallId = 1;</code>
     */
    public boolean hasHallId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string hallId = 1;</code>
     */
    public java.lang.String getHallId() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hallId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string hallId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHallIdBytes() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hallId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 2;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string title = 2;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string hallUrl = 3;
    public static final int HALLURL_FIELD_NUMBER = 3;
    private java.lang.Object hallUrl_;
    /**
     * <code>optional string hallUrl = 3;</code>
     */
    public boolean hasHallUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string hallUrl = 3;</code>
     */
    public java.lang.String getHallUrl() {
      java.lang.Object ref = hallUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hallUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hallUrl = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHallUrlBytes() {
      java.lang.Object ref = hallUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hallUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string doorId = 4;
    public static final int DOORID_FIELD_NUMBER = 4;
    private java.lang.Object doorId_;
    /**
     * <code>optional string doorId = 4;</code>
     */
    public boolean hasDoorId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string doorId = 4;</code>
     */
    public java.lang.String getDoorId() {
      java.lang.Object ref = doorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          doorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string doorId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDoorIdBytes() {
      java.lang.Object ref = doorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        doorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .Room rooms = 5;
    public static final int ROOMS_FIELD_NUMBER = 5;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> rooms_;
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> getRoomsList() {
      return rooms_;
    }
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
        getRoomsOrBuilderList() {
      return rooms_;
    }
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    public int getRoomsCount() {
      return rooms_.size();
    }
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Room getRooms(int index) {
      return rooms_.get(index);
    }
    /**
     * <code>repeated .Room rooms = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder getRoomsOrBuilder(
        int index) {
      return rooms_.get(index);
    }

    private void initFields() {
      hallId_ = "";
      title_ = "";
      hallUrl_ = "";
      doorId_ = "";
      rooms_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHallId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRoomsCount(); i++) {
        if (!getRooms(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHallIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHallUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDoorIdBytes());
      }
      for (int i = 0; i < rooms_.size(); i++) {
        output.writeMessage(5, rooms_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHallIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHallUrlBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDoorIdBytes());
      }
      for (int i = 0; i < rooms_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, rooms_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Hall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Hall prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Hall}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.HallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hall_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hall_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Hall.class, com.mrmq.poker.common.proto.PokerModelProto.Hall.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Hall.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hallId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        hallUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        doorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (roomsBuilder_ == null) {
          rooms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          roomsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Hall_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Hall getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Hall.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Hall build() {
        com.mrmq.poker.common.proto.PokerModelProto.Hall result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Hall buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Hall result = new com.mrmq.poker.common.proto.PokerModelProto.Hall(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hallId_ = hallId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hallUrl_ = hallUrl_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.doorId_ = doorId_;
        if (roomsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            rooms_ = java.util.Collections.unmodifiableList(rooms_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rooms_ = rooms_;
        } else {
          result.rooms_ = roomsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Hall) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Hall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Hall other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Hall.getDefaultInstance()) return this;
        if (other.hasHallId()) {
          bitField0_ |= 0x00000001;
          hallId_ = other.hallId_;
          onChanged();
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000002;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasHallUrl()) {
          bitField0_ |= 0x00000004;
          hallUrl_ = other.hallUrl_;
          onChanged();
        }
        if (other.hasDoorId()) {
          bitField0_ |= 0x00000008;
          doorId_ = other.doorId_;
          onChanged();
        }
        if (roomsBuilder_ == null) {
          if (!other.rooms_.isEmpty()) {
            if (rooms_.isEmpty()) {
              rooms_ = other.rooms_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRoomsIsMutable();
              rooms_.addAll(other.rooms_);
            }
            onChanged();
          }
        } else {
          if (!other.rooms_.isEmpty()) {
            if (roomsBuilder_.isEmpty()) {
              roomsBuilder_.dispose();
              roomsBuilder_ = null;
              rooms_ = other.rooms_;
              bitField0_ = (bitField0_ & ~0x00000010);
              roomsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomsFieldBuilder() : null;
            } else {
              roomsBuilder_.addAllMessages(other.rooms_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHallId()) {
          
          return false;
        }
        for (int i = 0; i < getRoomsCount(); i++) {
          if (!getRooms(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Hall parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Hall) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string hallId = 1;
      private java.lang.Object hallId_ = "";
      /**
       * <code>required string hallId = 1;</code>
       */
      public boolean hasHallId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public java.lang.String getHallId() {
        java.lang.Object ref = hallId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hallId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHallIdBytes() {
        java.lang.Object ref = hallId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hallId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder setHallId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hallId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder clearHallId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hallId_ = getDefaultInstance().getHallId();
        onChanged();
        return this;
      }
      /**
       * <code>required string hallId = 1;</code>
       */
      public Builder setHallIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hallId_ = value;
        onChanged();
        return this;
      }

      // optional string title = 2;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 2;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string hallUrl = 3;
      private java.lang.Object hallUrl_ = "";
      /**
       * <code>optional string hallUrl = 3;</code>
       */
      public boolean hasHallUrl() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string hallUrl = 3;</code>
       */
      public java.lang.String getHallUrl() {
        java.lang.Object ref = hallUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hallUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hallUrl = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHallUrlBytes() {
        java.lang.Object ref = hallUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hallUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hallUrl = 3;</code>
       */
      public Builder setHallUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        hallUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hallUrl = 3;</code>
       */
      public Builder clearHallUrl() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hallUrl_ = getDefaultInstance().getHallUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hallUrl = 3;</code>
       */
      public Builder setHallUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        hallUrl_ = value;
        onChanged();
        return this;
      }

      // optional string doorId = 4;
      private java.lang.Object doorId_ = "";
      /**
       * <code>optional string doorId = 4;</code>
       */
      public boolean hasDoorId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string doorId = 4;</code>
       */
      public java.lang.String getDoorId() {
        java.lang.Object ref = doorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          doorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string doorId = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDoorIdBytes() {
        java.lang.Object ref = doorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          doorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string doorId = 4;</code>
       */
      public Builder setDoorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        doorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string doorId = 4;</code>
       */
      public Builder clearDoorId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        doorId_ = getDefaultInstance().getDoorId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string doorId = 4;</code>
       */
      public Builder setDoorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        doorId_ = value;
        onChanged();
        return this;
      }

      // repeated .Room rooms = 5;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> rooms_ =
        java.util.Collections.emptyList();
      private void ensureRoomsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          rooms_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Room>(rooms_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Room, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder, com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> roomsBuilder_;

      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room> getRoomsList() {
        if (roomsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rooms_);
        } else {
          return roomsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public int getRoomsCount() {
        if (roomsBuilder_ == null) {
          return rooms_.size();
        } else {
          return roomsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room getRooms(int index) {
        if (roomsBuilder_ == null) {
          return rooms_.get(index);
        } else {
          return roomsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder setRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room value) {
        if (roomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomsIsMutable();
          rooms_.set(index, value);
          onChanged();
        } else {
          roomsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder setRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder builderForValue) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder addRooms(com.mrmq.poker.common.proto.PokerModelProto.Room value) {
        if (roomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomsIsMutable();
          rooms_.add(value);
          onChanged();
        } else {
          roomsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder addRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room value) {
        if (roomsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomsIsMutable();
          rooms_.add(index, value);
          onChanged();
        } else {
          roomsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder addRooms(
          com.mrmq.poker.common.proto.PokerModelProto.Room.Builder builderForValue) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.add(builderForValue.build());
          onChanged();
        } else {
          roomsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder addRooms(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder builderForValue) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder addAllRooms(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Room> values) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          super.addAll(values, rooms_);
          onChanged();
        } else {
          roomsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder clearRooms() {
        if (roomsBuilder_ == null) {
          rooms_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          roomsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public Builder removeRooms(int index) {
        if (roomsBuilder_ == null) {
          ensureRoomsIsMutable();
          rooms_.remove(index);
          onChanged();
        } else {
          roomsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.Builder getRoomsBuilder(
          int index) {
        return getRoomsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder getRoomsOrBuilder(
          int index) {
        if (roomsBuilder_ == null) {
          return rooms_.get(index);  } else {
          return roomsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
           getRoomsOrBuilderList() {
        if (roomsBuilder_ != null) {
          return roomsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rooms_);
        }
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.Builder addRoomsBuilder() {
        return getRoomsFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Room.getDefaultInstance());
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.Builder addRoomsBuilder(
          int index) {
        return getRoomsFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Room.getDefaultInstance());
      }
      /**
       * <code>repeated .Room rooms = 5;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Room.Builder> 
           getRoomsBuilderList() {
        return getRoomsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Room, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder, com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder> 
          getRoomsFieldBuilder() {
        if (roomsBuilder_ == null) {
          roomsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Room, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder, com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder>(
                  rooms_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          rooms_ = null;
        }
        return roomsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Hall)
    }

    static {
      defaultInstance = new Hall(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Hall)
  }

  public interface RoomOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string roomId = 1;
    /**
     * <code>required string roomId = 1;</code>
     */
    boolean hasRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>required string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();

    // optional string title = 2;
    /**
     * <code>optional string title = 2;</code>
     */
    boolean hasTitle();
    /**
     * <code>optional string title = 2;</code>
     */
    java.lang.String getTitle();
    /**
     * <code>optional string title = 2;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // optional string hallId = 3;
    /**
     * <code>optional string hallId = 3;</code>
     */
    boolean hasHallId();
    /**
     * <code>optional string hallId = 3;</code>
     */
    java.lang.String getHallId();
    /**
     * <code>optional string hallId = 3;</code>
     */
    com.google.protobuf.ByteString
        getHallIdBytes();

    // optional int32 maxTable = 4;
    /**
     * <code>optional int32 maxTable = 4;</code>
     */
    boolean hasMaxTable();
    /**
     * <code>optional int32 maxTable = 4;</code>
     */
    int getMaxTable();

    // required .Room.RoomState state = 5;
    /**
     * <code>required .Room.RoomState state = 5;</code>
     */
    boolean hasState();
    /**
     * <code>required .Room.RoomState state = 5;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState getState();

    // repeated .Table tables = 6;
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> 
        getTablesList();
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.Table getTables(int index);
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    int getTablesCount();
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
        getTablesOrBuilderList();
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder getTablesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Room}
   */
  public static final class Room extends
      com.google.protobuf.GeneratedMessage
      implements RoomOrBuilder {
    // Use Room.newBuilder() to construct.
    private Room(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Room(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Room defaultInstance;
    public static Room getDefaultInstance() {
      return defaultInstance;
    }

    public Room getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Room(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              roomId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              title_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              hallId_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxTable_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState value = com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                state_ = value;
              }
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tables_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Table>();
                mutable_bitField0_ |= 0x00000020;
              }
              tables_.add(input.readMessage(com.mrmq.poker.common.proto.PokerModelProto.Table.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          tables_ = java.util.Collections.unmodifiableList(tables_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Room_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Room_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mrmq.poker.common.proto.PokerModelProto.Room.class, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder.class);
    }

    public static com.google.protobuf.Parser<Room> PARSER =
        new com.google.protobuf.AbstractParser<Room>() {
      public Room parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Room(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Room> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Room.RoomState}
     */
    public enum RoomState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AVAILABLE = 1;</code>
       */
      AVAILABLE(0, 1),
      /**
       * <code>FULL = 2;</code>
       */
      FULL(1, 2),
      ;

      /**
       * <code>AVAILABLE = 1;</code>
       */
      public static final int AVAILABLE_VALUE = 1;
      /**
       * <code>FULL = 2;</code>
       */
      public static final int FULL_VALUE = 2;


      public final int getNumber() { return value; }

      public static RoomState valueOf(int value) {
        switch (value) {
          case 1: return AVAILABLE;
          case 2: return FULL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RoomState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RoomState>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RoomState>() {
              public RoomState findValueByNumber(int number) {
                return RoomState.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.Room.getDescriptor().getEnumTypes().get(0);
      }

      private static final RoomState[] VALUES = values();

      public static RoomState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private RoomState(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Room.RoomState)
    }

    private int bitField0_;
    // required string roomId = 1;
    public static final int ROOMID_FIELD_NUMBER = 1;
    private java.lang.Object roomId_;
    /**
     * <code>required string roomId = 1;</code>
     */
    public boolean hasRoomId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private java.lang.Object title_;
    /**
     * <code>optional string title = 2;</code>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string title = 2;</code>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string title = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string hallId = 3;
    public static final int HALLID_FIELD_NUMBER = 3;
    private java.lang.Object hallId_;
    /**
     * <code>optional string hallId = 3;</code>
     */
    public boolean hasHallId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string hallId = 3;</code>
     */
    public java.lang.String getHallId() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hallId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hallId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHallIdBytes() {
      java.lang.Object ref = hallId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hallId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 maxTable = 4;
    public static final int MAXTABLE_FIELD_NUMBER = 4;
    private int maxTable_;
    /**
     * <code>optional int32 maxTable = 4;</code>
     */
    public boolean hasMaxTable() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 maxTable = 4;</code>
     */
    public int getMaxTable() {
      return maxTable_;
    }

    // required .Room.RoomState state = 5;
    public static final int STATE_FIELD_NUMBER = 5;
    private com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState state_;
    /**
     * <code>required .Room.RoomState state = 5;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .Room.RoomState state = 5;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState getState() {
      return state_;
    }

    // repeated .Table tables = 6;
    public static final int TABLES_FIELD_NUMBER = 6;
    private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> tables_;
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> getTablesList() {
      return tables_;
    }
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
        getTablesOrBuilderList() {
      return tables_;
    }
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    public int getTablesCount() {
      return tables_.size();
    }
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.Table getTables(int index) {
      return tables_.get(index);
    }
    /**
     * <code>repeated .Table tables = 6;</code>
     */
    public com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder getTablesOrBuilder(
        int index) {
      return tables_.get(index);
    }

    private void initFields() {
      roomId_ = "";
      title_ = "";
      hallId_ = "";
      maxTable_ = 0;
      state_ = com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState.AVAILABLE;
      tables_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRoomId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTablesCount(); i++) {
        if (!getTables(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoomIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHallIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, maxTable_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, state_.getNumber());
      }
      for (int i = 0; i < tables_.size(); i++) {
        output.writeMessage(6, tables_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoomIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHallIdBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxTable_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, state_.getNumber());
      }
      for (int i = 0; i < tables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tables_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mrmq.poker.common.proto.PokerModelProto.Room parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mrmq.poker.common.proto.PokerModelProto.Room prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Room}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.mrmq.poker.common.proto.PokerModelProto.RoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Room_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Room_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mrmq.poker.common.proto.PokerModelProto.Room.class, com.mrmq.poker.common.proto.PokerModelProto.Room.Builder.class);
      }

      // Construct using com.mrmq.poker.common.proto.PokerModelProto.Room.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTablesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        hallId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        maxTable_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState.AVAILABLE;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.internal_static_Room_descriptor;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Room getDefaultInstanceForType() {
        return com.mrmq.poker.common.proto.PokerModelProto.Room.getDefaultInstance();
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Room build() {
        com.mrmq.poker.common.proto.PokerModelProto.Room result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mrmq.poker.common.proto.PokerModelProto.Room buildPartial() {
        com.mrmq.poker.common.proto.PokerModelProto.Room result = new com.mrmq.poker.common.proto.PokerModelProto.Room(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomId_ = roomId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hallId_ = hallId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxTable_ = maxTable_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.state_ = state_;
        if (tablesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            tables_ = java.util.Collections.unmodifiableList(tables_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.tables_ = tables_;
        } else {
          result.tables_ = tablesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mrmq.poker.common.proto.PokerModelProto.Room) {
          return mergeFrom((com.mrmq.poker.common.proto.PokerModelProto.Room)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mrmq.poker.common.proto.PokerModelProto.Room other) {
        if (other == com.mrmq.poker.common.proto.PokerModelProto.Room.getDefaultInstance()) return this;
        if (other.hasRoomId()) {
          bitField0_ |= 0x00000001;
          roomId_ = other.roomId_;
          onChanged();
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000002;
          title_ = other.title_;
          onChanged();
        }
        if (other.hasHallId()) {
          bitField0_ |= 0x00000004;
          hallId_ = other.hallId_;
          onChanged();
        }
        if (other.hasMaxTable()) {
          setMaxTable(other.getMaxTable());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (tablesBuilder_ == null) {
          if (!other.tables_.isEmpty()) {
            if (tables_.isEmpty()) {
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTablesIsMutable();
              tables_.addAll(other.tables_);
            }
            onChanged();
          }
        } else {
          if (!other.tables_.isEmpty()) {
            if (tablesBuilder_.isEmpty()) {
              tablesBuilder_.dispose();
              tablesBuilder_ = null;
              tables_ = other.tables_;
              bitField0_ = (bitField0_ & ~0x00000020);
              tablesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTablesFieldBuilder() : null;
            } else {
              tablesBuilder_.addAllMessages(other.tables_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRoomId()) {
          
          return false;
        }
        if (!hasState()) {
          
          return false;
        }
        for (int i = 0; i < getTablesCount(); i++) {
          if (!getTables(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mrmq.poker.common.proto.PokerModelProto.Room parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mrmq.poker.common.proto.PokerModelProto.Room) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string roomId = 1;
      private java.lang.Object roomId_ = "";
      /**
       * <code>required string roomId = 1;</code>
       */
      public boolean hasRoomId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>required string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomId_ = value;
        onChanged();
        return this;
      }

      // optional string title = 2;
      private java.lang.Object title_ = "";
      /**
       * <code>optional string title = 2;</code>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <code>optional string title = 2;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        title_ = value;
        onChanged();
        return this;
      }

      // optional string hallId = 3;
      private java.lang.Object hallId_ = "";
      /**
       * <code>optional string hallId = 3;</code>
       */
      public boolean hasHallId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string hallId = 3;</code>
       */
      public java.lang.String getHallId() {
        java.lang.Object ref = hallId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hallId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hallId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHallIdBytes() {
        java.lang.Object ref = hallId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hallId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hallId = 3;</code>
       */
      public Builder setHallId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        hallId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hallId = 3;</code>
       */
      public Builder clearHallId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hallId_ = getDefaultInstance().getHallId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hallId = 3;</code>
       */
      public Builder setHallIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        hallId_ = value;
        onChanged();
        return this;
      }

      // optional int32 maxTable = 4;
      private int maxTable_ ;
      /**
       * <code>optional int32 maxTable = 4;</code>
       */
      public boolean hasMaxTable() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 maxTable = 4;</code>
       */
      public int getMaxTable() {
        return maxTable_;
      }
      /**
       * <code>optional int32 maxTable = 4;</code>
       */
      public Builder setMaxTable(int value) {
        bitField0_ |= 0x00000008;
        maxTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxTable = 4;</code>
       */
      public Builder clearMaxTable() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxTable_ = 0;
        onChanged();
        return this;
      }

      // required .Room.RoomState state = 5;
      private com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState state_ = com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState.AVAILABLE;
      /**
       * <code>required .Room.RoomState state = 5;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .Room.RoomState state = 5;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState getState() {
        return state_;
      }
      /**
       * <code>required .Room.RoomState state = 5;</code>
       */
      public Builder setState(com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Room.RoomState state = 5;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = com.mrmq.poker.common.proto.PokerModelProto.Room.RoomState.AVAILABLE;
        onChanged();
        return this;
      }

      // repeated .Table tables = 6;
      private java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> tables_ =
        java.util.Collections.emptyList();
      private void ensureTablesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          tables_ = new java.util.ArrayList<com.mrmq.poker.common.proto.PokerModelProto.Table>(tables_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Table, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> tablesBuilder_;

      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table> getTablesList() {
        if (tablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tables_);
        } else {
          return tablesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public int getTablesCount() {
        if (tablesBuilder_ == null) {
          return tables_.size();
        } else {
          return tablesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table getTables(int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);
        } else {
          return tablesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder setTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.set(index, value);
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder setTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.set(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder addTables(com.mrmq.poker.common.proto.PokerModelProto.Table value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder addTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table value) {
        if (tablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTablesIsMutable();
          tables_.add(index, value);
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder addTables(
          com.mrmq.poker.common.proto.PokerModelProto.Table.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder addTables(
          int index, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder builderForValue) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.add(index, builderForValue.build());
          onChanged();
        } else {
          tablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder addAllTables(
          java.lang.Iterable<? extends com.mrmq.poker.common.proto.PokerModelProto.Table> values) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          super.addAll(values, tables_);
          onChanged();
        } else {
          tablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder clearTables() {
        if (tablesBuilder_ == null) {
          tables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          tablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public Builder removeTables(int index) {
        if (tablesBuilder_ == null) {
          ensureTablesIsMutable();
          tables_.remove(index);
          onChanged();
        } else {
          tablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table.Builder getTablesBuilder(
          int index) {
        return getTablesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder getTablesOrBuilder(
          int index) {
        if (tablesBuilder_ == null) {
          return tables_.get(index);  } else {
          return tablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public java.util.List<? extends com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
           getTablesOrBuilderList() {
        if (tablesBuilder_ != null) {
          return tablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tables_);
        }
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table.Builder addTablesBuilder() {
        return getTablesFieldBuilder().addBuilder(
            com.mrmq.poker.common.proto.PokerModelProto.Table.getDefaultInstance());
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public com.mrmq.poker.common.proto.PokerModelProto.Table.Builder addTablesBuilder(
          int index) {
        return getTablesFieldBuilder().addBuilder(
            index, com.mrmq.poker.common.proto.PokerModelProto.Table.getDefaultInstance());
      }
      /**
       * <code>repeated .Table tables = 6;</code>
       */
      public java.util.List<com.mrmq.poker.common.proto.PokerModelProto.Table.Builder> 
           getTablesBuilderList() {
        return getTablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mrmq.poker.common.proto.PokerModelProto.Table, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder> 
          getTablesFieldBuilder() {
        if (tablesBuilder_ == null) {
          tablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mrmq.poker.common.proto.PokerModelProto.Table, com.mrmq.poker.common.proto.PokerModelProto.Table.Builder, com.mrmq.poker.common.proto.PokerModelProto.TableOrBuilder>(
                  tables_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          tables_ = null;
        }
        return tablesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Room)
    }

    static {
      defaultInstance = new Room(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Room)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Table_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Table_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TableRule_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TableRule_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Chip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Chip_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Player_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Hand_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Hand_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Deck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Deck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Card_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Card_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Door_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Door_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Hall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Hall_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Room_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Room_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021poker_model.proto\"\277\001\n\005Table\022\016\n\006roomId\030" +
      "\001 \002(\t\022\017\n\007tableId\030\002 \002(\t\022\035\n\troundType\030\003 \002(" +
      "\0162\n.RoundType\022\035\n\ttableRule\030\004 \002(\0132\n.Table" +
      "Rule\022\030\n\007players\030\005 \003(\0132\007.Player\022\025\n\006boards" +
      "\030\007 \003(\0132\005.Card\022\020\n\010dealerId\030\010 \001(\t\022\024\n\014nextP" +
      "layerId\030\t \001(\t\"\243\001\n\tTableRule\022\021\n\tmaxPlayer" +
      "\030\001 \002(\005\022\021\n\tmaxViewer\030\002 \002(\005\022\021\n\tminPlayer\030\003" +
      " \002(\005\022\020\n\010minRaise\030\013 \002(\003\022\020\n\010maxRaise\030\r \002(\003" +
      "\022\022\n\nsmallBlind\030\016 \002(\003\022\020\n\010bigBlind\030\017 \002(\003\022\023" +
      "\n\013timePerTurn\030\020 \002(\005\"2\n\004Chip\022\013\n\003bet\030\001 \002(\003",
      "\022\035\n\014contributors\030\002 \003(\0132\007.Player\"\262\002\n\006Play" +
      "er\022\017\n\007loginId\030\001 \002(\t\022\014\n\004name\030\002 \001(\t\022\021\n\tava" +
      "tarUrl\030\003 \001(\t\022\017\n\007balance\030\004 \001(\003\022!\n\013playerS" +
      "tate\030\013 \001(\0162\014.PlayerState\022\r\n\005raise\030\014 \001(\003\022" +
      "\020\n\010position\030\016 \001(\005\022\037\n\nlastAction\030\020 \001(\0162\013." +
      "ActionType\022\023\n\004hand\030\021 \001(\0132\005.Hand\022\035\n\thandV" +
      "alue\030\022 \001(\0162\n.HandValue\022\014\n\004gift\030\023 \001(\005\022\020\n\010" +
      "straddle\030\024 \001(\005\022\027\n\010winCards\030\025 \003(\0132\005.Card\022" +
      "\023\n\013totalAmount\030\026 \001(\003\"-\n\004Hand\022\017\n\007maxCard\030" +
      "\001 \002(\005\022\024\n\005cards\030\002 \003(\0132\005.Card\"0\n\004Deck\022\022\n\nt",
      "otal_card\0304 \002(\005\022\024\n\005cards\030\002 \003(\0132\005.Card\"\216\002" +
      "\n\004Card\022 \n\010cardRank\030\001 \002(\0162\016.Card.CardRank" +
      "\022\031\n\004suit\030\002 \002(\0162\013.Card.Suits\"\216\001\n\010CardRank" +
      "\022\t\n\005DEUCE\020\000\022\t\n\005THREE\020\001\022\010\n\004FOUR\020\002\022\010\n\004FIVE" +
      "\020\003\022\007\n\003SIX\020\004\022\t\n\005SEVEN\020\005\022\t\n\005EIGHT\020\006\022\010\n\004NIN" +
      "E\020\007\022\007\n\003TEN\020\010\022\010\n\004JACK\020\t\022\t\n\005QUEEN\020\n\022\010\n\004KIN" +
      "G\020\013\022\007\n\003ACE\020\014\"8\n\005Suits\022\014\n\010DIAMONDS\020\000\022\t\n\005C" +
      "LUBS\020\001\022\n\n\006HEARTS\020\002\022\n\n\006SPADES\020\003\"=\n\004Door\022\016" +
      "\n\006doorId\030\001 \002(\t\022\017\n\007doorUrl\030\002 \001(\t\022\024\n\005halls" +
      "\030\003 \003(\0132\005.Hall\"\\\n\004Hall\022\016\n\006hallId\030\001 \002(\t\022\r\n",
      "\005title\030\002 \001(\t\022\017\n\007hallUrl\030\003 \001(\t\022\016\n\006doorId\030" +
      "\004 \001(\t\022\024\n\005rooms\030\005 \003(\0132\005.Room\"\245\001\n\004Room\022\016\n\006" +
      "roomId\030\001 \002(\t\022\r\n\005title\030\002 \001(\t\022\016\n\006hallId\030\003 " +
      "\001(\t\022\020\n\010maxTable\030\004 \001(\005\022\036\n\005state\030\005 \002(\0162\017.R" +
      "oom.RoomState\022\026\n\006tables\030\006 \003(\0132\006.Table\"$\n" +
      "\tRoomState\022\r\n\tAVAILABLE\020\001\022\010\n\004FULL\020\002*\355\001\n\t" +
      "RoundType\022\017\n\013SMALL_BLIND\020\001\022\r\n\tBIG_BLIND\020" +
      "\002\022\014\n\010PRE_FLOP\020\003\022\010\n\004FLOP\020\004\022\010\n\004TURN\020\005\022\t\n\005R" +
      "IVER\020\006\022\r\n\tSHOW_DOWN\020\007\022\023\n\017SMALL_BLIND_END" +
      "\020\013\022\021\n\rBIG_BLIND_END\020\014\022\020\n\014PRE_FLOP_END\020\r\022",
      "\014\n\010FLOP_END\020\016\022\014\n\010TURN_END\020\017\022\r\n\tRIVER_END" +
      "\020\020\022\021\n\rSHOW_DOWN_END\020\021\022\014\n\010WAITTING\020\022*\203\001\n\n" +
      "ActionType\022\t\n\005CHECK\020\001\022\007\n\003BET\020\002\022\t\n\005RAISE\020" +
      "\003\022\010\n\004CALL\020\004\022\010\n\004FOLD\020\005\022\n\n\006ALL_IN\020\006\022\022\n\016POS" +
      "T_BIG_BLIND\020\007\022\014\n\010CONTINUE\020\010\022\024\n\020POST_SMAL" +
      "L_BLIND\020\t*]\n\013PlayerState\022\022\n\016PLAYER_VIEWI" +
      "NG\020\000\022\023\n\017PLAYER_WAITTING\020\001\022\022\n\016PLAYER_PLAY" +
      "ING\020\002\022\021\n\rPLAYER_FOLDED\020\003*\256\001\n\tHandValue\022\017" +
      "\n\013ROYAL_FLUSH\020\t\022\022\n\016STRAIGHT_FLUSH\020\010\022\022\n\016F" +
      "OUR_OF_A_KIND\020\007\022\016\n\nFULL_HOUSE\020\006\022\t\n\005FLUSH",
      "\020\005\022\014\n\010STRAIGHT\020\004\022\023\n\017THREE_OF_A_KIND\020\003\022\r\n" +
      "\tTWO_PAIRS\020\002\022\014\n\010ONE_PAIR\020\001\022\r\n\tHIGH_CARD\020" +
      "\000B.\n\033com.mrmq.poker.common.protoB\017PokerM" +
      "odelProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Table_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Table_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Table_descriptor,
              new java.lang.String[] { "RoomId", "TableId", "RoundType", "TableRule", "Players", "Boards", "DealerId", "NextPlayerId", });
          internal_static_TableRule_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_TableRule_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TableRule_descriptor,
              new java.lang.String[] { "MaxPlayer", "MaxViewer", "MinPlayer", "MinRaise", "MaxRaise", "SmallBlind", "BigBlind", "TimePerTurn", });
          internal_static_Chip_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Chip_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Chip_descriptor,
              new java.lang.String[] { "Bet", "Contributors", });
          internal_static_Player_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Player_descriptor,
              new java.lang.String[] { "LoginId", "Name", "AvatarUrl", "Balance", "PlayerState", "Raise", "Position", "LastAction", "Hand", "HandValue", "Gift", "Straddle", "WinCards", "TotalAmount", });
          internal_static_Hand_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_Hand_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Hand_descriptor,
              new java.lang.String[] { "MaxCard", "Cards", });
          internal_static_Deck_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Deck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Deck_descriptor,
              new java.lang.String[] { "TotalCard", "Cards", });
          internal_static_Card_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_Card_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Card_descriptor,
              new java.lang.String[] { "CardRank", "Suit", });
          internal_static_Door_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_Door_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Door_descriptor,
              new java.lang.String[] { "DoorId", "DoorUrl", "Halls", });
          internal_static_Hall_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_Hall_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Hall_descriptor,
              new java.lang.String[] { "HallId", "Title", "HallUrl", "DoorId", "Rooms", });
          internal_static_Room_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_Room_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Room_descriptor,
              new java.lang.String[] { "RoomId", "Title", "HallId", "MaxTable", "State", "Tables", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
